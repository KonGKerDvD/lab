/**
 * FlowAccount Business API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { DeductionType } from './deductionType';
import { Entity } from './entity';
import { IncomeType } from './incomeType';
import { PaymentMethod } from './paymentMethod';
import { RemainingCollectedType } from './remainingCollectedType';

export class PaymentModel {
    'cashRemarks'?: string | null;
    'excludeVat'?: number;
    'cashTax'?: number;
    'creditCardNumber'?: string | null;
    'companyVatRate'?: number;
    'net'?: number;
    'bankAccountNumber'?: string | null;
    'bankAccountId'?: number | null;
    'paymentMethod'?: PaymentMethod;
    'dateNow'?: Date;
    'amountCollected'?: number;
    'amountWithheld'?: number;
    'withholdingTax'?: number | null;
    'remarks'?: string | null;
    'transferBankAccountId'?: number | null;
    'bankAccountCreditCardId'?: number | null;
    'charge'?: number;
    'chequeDate'?: Date | null;
    'chequeNumber'?: string | null;
    'chequeBankAccountId'?: string | null;
    'creditCardBankAccountId'?: string | null;
    'remainingCollected'?: number | null;
    'remainingCollectedType'?: RemainingCollectedType | null;
    'deductionAmount'?: number | null;
    'paymentDeductionType'?: DeductionType | null;
    'pettyCashName'?: string | null;
    'pettyCashId'?: number | null;
    'chequeId'?: number | null;
    'creditCardId'?: number | null;
    'otherChannelId'?: number | null;
    'chequeDepositDate'?: Date | null;
    'chequeDepositBankId'?: number | null;
    'chequeCashingDate'?: Date | null;
    'autoCreateWithholdingTax'?: boolean;
    'withholdingTaxIncomeType'?: IncomeType;
    'withholdingTaxIncomeDescription'?: string | null;
    'withholdingTaxEntity'?: Entity;
    'exchangeRateFee'?: number | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "cashRemarks",
            "baseName": "cashRemarks",
            "type": "string"
        },
        {
            "name": "excludeVat",
            "baseName": "excludeVat",
            "type": "number"
        },
        {
            "name": "cashTax",
            "baseName": "cashTax",
            "type": "number"
        },
        {
            "name": "creditCardNumber",
            "baseName": "creditCardNumber",
            "type": "string"
        },
        {
            "name": "companyVatRate",
            "baseName": "companyVatRate",
            "type": "number"
        },
        {
            "name": "net",
            "baseName": "net",
            "type": "number"
        },
        {
            "name": "bankAccountNumber",
            "baseName": "bankAccountNumber",
            "type": "string"
        },
        {
            "name": "bankAccountId",
            "baseName": "bankAccountId",
            "type": "number"
        },
        {
            "name": "paymentMethod",
            "baseName": "paymentMethod",
            "type": "PaymentMethod"
        },
        {
            "name": "dateNow",
            "baseName": "dateNow",
            "type": "Date"
        },
        {
            "name": "amountCollected",
            "baseName": "amountCollected",
            "type": "number"
        },
        {
            "name": "amountWithheld",
            "baseName": "amountWithheld",
            "type": "number"
        },
        {
            "name": "withholdingTax",
            "baseName": "withholdingTax",
            "type": "number"
        },
        {
            "name": "remarks",
            "baseName": "remarks",
            "type": "string"
        },
        {
            "name": "transferBankAccountId",
            "baseName": "transferBankAccountId",
            "type": "number"
        },
        {
            "name": "bankAccountCreditCardId",
            "baseName": "bankAccountCreditCardId",
            "type": "number"
        },
        {
            "name": "charge",
            "baseName": "charge",
            "type": "number"
        },
        {
            "name": "chequeDate",
            "baseName": "chequeDate",
            "type": "Date"
        },
        {
            "name": "chequeNumber",
            "baseName": "chequeNumber",
            "type": "string"
        },
        {
            "name": "chequeBankAccountId",
            "baseName": "chequeBankAccountId",
            "type": "string"
        },
        {
            "name": "creditCardBankAccountId",
            "baseName": "creditCardBankAccountId",
            "type": "string"
        },
        {
            "name": "remainingCollected",
            "baseName": "remainingCollected",
            "type": "number"
        },
        {
            "name": "remainingCollectedType",
            "baseName": "remainingCollectedType",
            "type": "RemainingCollectedType"
        },
        {
            "name": "deductionAmount",
            "baseName": "deductionAmount",
            "type": "number"
        },
        {
            "name": "paymentDeductionType",
            "baseName": "paymentDeductionType",
            "type": "DeductionType"
        },
        {
            "name": "pettyCashName",
            "baseName": "pettyCashName",
            "type": "string"
        },
        {
            "name": "pettyCashId",
            "baseName": "pettyCashId",
            "type": "number"
        },
        {
            "name": "chequeId",
            "baseName": "chequeId",
            "type": "number"
        },
        {
            "name": "creditCardId",
            "baseName": "creditCardId",
            "type": "number"
        },
        {
            "name": "otherChannelId",
            "baseName": "otherChannelId",
            "type": "number"
        },
        {
            "name": "chequeDepositDate",
            "baseName": "chequeDepositDate",
            "type": "Date"
        },
        {
            "name": "chequeDepositBankId",
            "baseName": "chequeDepositBankId",
            "type": "number"
        },
        {
            "name": "chequeCashingDate",
            "baseName": "chequeCashingDate",
            "type": "Date"
        },
        {
            "name": "autoCreateWithholdingTax",
            "baseName": "autoCreateWithholdingTax",
            "type": "boolean"
        },
        {
            "name": "withholdingTaxIncomeType",
            "baseName": "withholdingTaxIncomeType",
            "type": "IncomeType"
        },
        {
            "name": "withholdingTaxIncomeDescription",
            "baseName": "withholdingTaxIncomeDescription",
            "type": "string"
        },
        {
            "name": "withholdingTaxEntity",
            "baseName": "withholdingTaxEntity",
            "type": "Entity"
        },
        {
            "name": "exchangeRateFee",
            "baseName": "exchangeRateFee",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return PaymentModel.attributeTypeMap;
    }
}

