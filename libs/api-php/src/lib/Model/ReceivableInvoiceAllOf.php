<?php
/**
 * ReceivableInvoiceAllOf
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * FlowAccount Open API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ReceivableInvoiceAllOf Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class ReceivableInvoiceAllOf implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ReceivableInvoice_allOf';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'contact_id' => 'int',
        'company_id' => 'int',
        'status' => '\OpenAPI\Client\Model\ReceivableInvoiceStatus',
        'created_on' => '\DateTime',
        'modified_on' => '\DateTime',
        'published_on' => '\DateTime',
        'document_date' => '\DateTime',
        'published' => 'bool',
        'approved' => 'bool',
        'approved_by' => 'int',
        'approved_by_client_id' => 'int',
        'approved_image_url' => 'string',
        'document_serial' => 'string',
        'remarks' => 'string',
        'name' => 'string',
        'value' => 'float',
        'due_date' => '\DateTime',
        'expected_date' => '\DateTime',
        'created_by' => 'int',
        'document_id' => 'string',
        'is_delete' => 'bool',
        'vat_rate' => 'int',
        'internal_notes' => 'string',
        'gallery_id' => 'int',
        'is_vat_inclusive' => 'bool',
        'sales_id' => 'int',
        'sales_name' => 'string',
        'rounding_adjustment' => 'float',
        'is_inline_discount' => 'bool',
        'is_inline_vat' => 'bool',
        'tax' => 'float',
        'document_serial_no_prefix' => 'int',
        'vat_value' => 'float',
        'reset_transaction_id' => 'int',
        'contact' => 'OneOfContact',
        'approved_by_client' => 'OneOfUser',
        'company' => 'OneOfCompany',
        'created_by_user' => 'OneOfUser',
        'approved_by_user' => 'OneOfUser',
        'sales' => 'OneOfUser',
        'gallery' => 'OneOfGallery',
        'inline_vat_value' => 'float',
        'inline_discount_value' => 'float',
        'rule_compile_status' => '\OpenAPI\Client\Model\RuleCompileStatus',
        'running_number_type' => 'int',
        'running_modified_on' => '\DateTime',
        'exempt_amount' => 'float',
        'vatable_amount' => 'float',
        'total_after_discount' => 'float',
        'sub_total' => 'float',
        'document_references' => '\OpenAPI\Client\Model\IDocumentReference[]',
        'referenced_to_me' => '\OpenAPI\Client\Model\IDocumentReference[]',
        'referenced_by_me' => '\OpenAPI\Client\Model\IDocumentReference[]',
        'status_int' => 'int',
        'is_re_calculate' => 'bool',
        'partial_payment_method' => 'OneOfPartialPaymentMethod',
        'vat_amount' => 'float',
        'is_migrate' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'contact_id' => 'int64',
        'company_id' => 'int64',
        'status' => null,
        'created_on' => 'date-time',
        'modified_on' => 'date-time',
        'published_on' => 'date-time',
        'document_date' => 'date-time',
        'published' => null,
        'approved' => null,
        'approved_by' => 'int64',
        'approved_by_client_id' => 'int64',
        'approved_image_url' => null,
        'document_serial' => null,
        'remarks' => null,
        'name' => null,
        'value' => 'decimal',
        'due_date' => 'date-time',
        'expected_date' => 'date-time',
        'created_by' => 'int64',
        'document_id' => null,
        'is_delete' => null,
        'vat_rate' => 'int32',
        'internal_notes' => null,
        'gallery_id' => 'int64',
        'is_vat_inclusive' => null,
        'sales_id' => 'int64',
        'sales_name' => null,
        'rounding_adjustment' => 'decimal',
        'is_inline_discount' => null,
        'is_inline_vat' => null,
        'tax' => 'decimal',
        'document_serial_no_prefix' => 'int64',
        'vat_value' => 'decimal',
        'reset_transaction_id' => 'int64',
        'contact' => null,
        'approved_by_client' => null,
        'company' => null,
        'created_by_user' => null,
        'approved_by_user' => null,
        'sales' => null,
        'gallery' => null,
        'inline_vat_value' => 'decimal',
        'inline_discount_value' => 'decimal',
        'rule_compile_status' => null,
        'running_number_type' => 'int32',
        'running_modified_on' => 'date-time',
        'exempt_amount' => 'decimal',
        'vatable_amount' => 'decimal',
        'total_after_discount' => 'decimal',
        'sub_total' => 'decimal',
        'document_references' => null,
        'referenced_to_me' => null,
        'referenced_by_me' => null,
        'status_int' => 'int32',
        'is_re_calculate' => null,
        'partial_payment_method' => null,
        'vat_amount' => 'decimal',
        'is_migrate' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'contact_id' => 'contactId',
        'company_id' => 'companyId',
        'status' => 'status',
        'created_on' => 'createdOn',
        'modified_on' => 'modifiedOn',
        'published_on' => 'publishedOn',
        'document_date' => 'documentDate',
        'published' => 'published',
        'approved' => 'approved',
        'approved_by' => 'approvedBy',
        'approved_by_client_id' => 'approvedByClientId',
        'approved_image_url' => 'approvedImageUrl',
        'document_serial' => 'documentSerial',
        'remarks' => 'remarks',
        'name' => 'name',
        'value' => 'value',
        'due_date' => 'dueDate',
        'expected_date' => 'expectedDate',
        'created_by' => 'createdBy',
        'document_id' => 'documentId',
        'is_delete' => 'isDelete',
        'vat_rate' => 'vatRate',
        'internal_notes' => 'internalNotes',
        'gallery_id' => 'galleryId',
        'is_vat_inclusive' => 'isVatInclusive',
        'sales_id' => 'salesId',
        'sales_name' => 'salesName',
        'rounding_adjustment' => 'roundingAdjustment',
        'is_inline_discount' => 'isInlineDiscount',
        'is_inline_vat' => 'isInlineVat',
        'tax' => 'tax',
        'document_serial_no_prefix' => 'documentSerialNoPrefix',
        'vat_value' => 'vatValue',
        'reset_transaction_id' => 'resetTransactionId',
        'contact' => 'contact',
        'approved_by_client' => 'approvedByClient',
        'company' => 'company',
        'created_by_user' => 'createdByUser',
        'approved_by_user' => 'approvedByUser',
        'sales' => 'sales',
        'gallery' => 'gallery',
        'inline_vat_value' => 'inlineVatValue',
        'inline_discount_value' => 'inlineDiscountValue',
        'rule_compile_status' => 'ruleCompileStatus',
        'running_number_type' => 'runningNumberType',
        'running_modified_on' => 'runningModifiedOn',
        'exempt_amount' => 'exemptAmount',
        'vatable_amount' => 'vatableAmount',
        'total_after_discount' => 'totalAfterDiscount',
        'sub_total' => 'subTotal',
        'document_references' => 'documentReferences',
        'referenced_to_me' => 'referencedToMe',
        'referenced_by_me' => 'referencedByMe',
        'status_int' => 'statusInt',
        'is_re_calculate' => 'isReCalculate',
        'partial_payment_method' => 'partialPaymentMethod',
        'vat_amount' => 'vatAmount',
        'is_migrate' => 'isMigrate'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'contact_id' => 'setContactId',
        'company_id' => 'setCompanyId',
        'status' => 'setStatus',
        'created_on' => 'setCreatedOn',
        'modified_on' => 'setModifiedOn',
        'published_on' => 'setPublishedOn',
        'document_date' => 'setDocumentDate',
        'published' => 'setPublished',
        'approved' => 'setApproved',
        'approved_by' => 'setApprovedBy',
        'approved_by_client_id' => 'setApprovedByClientId',
        'approved_image_url' => 'setApprovedImageUrl',
        'document_serial' => 'setDocumentSerial',
        'remarks' => 'setRemarks',
        'name' => 'setName',
        'value' => 'setValue',
        'due_date' => 'setDueDate',
        'expected_date' => 'setExpectedDate',
        'created_by' => 'setCreatedBy',
        'document_id' => 'setDocumentId',
        'is_delete' => 'setIsDelete',
        'vat_rate' => 'setVatRate',
        'internal_notes' => 'setInternalNotes',
        'gallery_id' => 'setGalleryId',
        'is_vat_inclusive' => 'setIsVatInclusive',
        'sales_id' => 'setSalesId',
        'sales_name' => 'setSalesName',
        'rounding_adjustment' => 'setRoundingAdjustment',
        'is_inline_discount' => 'setIsInlineDiscount',
        'is_inline_vat' => 'setIsInlineVat',
        'tax' => 'setTax',
        'document_serial_no_prefix' => 'setDocumentSerialNoPrefix',
        'vat_value' => 'setVatValue',
        'reset_transaction_id' => 'setResetTransactionId',
        'contact' => 'setContact',
        'approved_by_client' => 'setApprovedByClient',
        'company' => 'setCompany',
        'created_by_user' => 'setCreatedByUser',
        'approved_by_user' => 'setApprovedByUser',
        'sales' => 'setSales',
        'gallery' => 'setGallery',
        'inline_vat_value' => 'setInlineVatValue',
        'inline_discount_value' => 'setInlineDiscountValue',
        'rule_compile_status' => 'setRuleCompileStatus',
        'running_number_type' => 'setRunningNumberType',
        'running_modified_on' => 'setRunningModifiedOn',
        'exempt_amount' => 'setExemptAmount',
        'vatable_amount' => 'setVatableAmount',
        'total_after_discount' => 'setTotalAfterDiscount',
        'sub_total' => 'setSubTotal',
        'document_references' => 'setDocumentReferences',
        'referenced_to_me' => 'setReferencedToMe',
        'referenced_by_me' => 'setReferencedByMe',
        'status_int' => 'setStatusInt',
        'is_re_calculate' => 'setIsReCalculate',
        'partial_payment_method' => 'setPartialPaymentMethod',
        'vat_amount' => 'setVatAmount',
        'is_migrate' => 'setIsMigrate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'contact_id' => 'getContactId',
        'company_id' => 'getCompanyId',
        'status' => 'getStatus',
        'created_on' => 'getCreatedOn',
        'modified_on' => 'getModifiedOn',
        'published_on' => 'getPublishedOn',
        'document_date' => 'getDocumentDate',
        'published' => 'getPublished',
        'approved' => 'getApproved',
        'approved_by' => 'getApprovedBy',
        'approved_by_client_id' => 'getApprovedByClientId',
        'approved_image_url' => 'getApprovedImageUrl',
        'document_serial' => 'getDocumentSerial',
        'remarks' => 'getRemarks',
        'name' => 'getName',
        'value' => 'getValue',
        'due_date' => 'getDueDate',
        'expected_date' => 'getExpectedDate',
        'created_by' => 'getCreatedBy',
        'document_id' => 'getDocumentId',
        'is_delete' => 'getIsDelete',
        'vat_rate' => 'getVatRate',
        'internal_notes' => 'getInternalNotes',
        'gallery_id' => 'getGalleryId',
        'is_vat_inclusive' => 'getIsVatInclusive',
        'sales_id' => 'getSalesId',
        'sales_name' => 'getSalesName',
        'rounding_adjustment' => 'getRoundingAdjustment',
        'is_inline_discount' => 'getIsInlineDiscount',
        'is_inline_vat' => 'getIsInlineVat',
        'tax' => 'getTax',
        'document_serial_no_prefix' => 'getDocumentSerialNoPrefix',
        'vat_value' => 'getVatValue',
        'reset_transaction_id' => 'getResetTransactionId',
        'contact' => 'getContact',
        'approved_by_client' => 'getApprovedByClient',
        'company' => 'getCompany',
        'created_by_user' => 'getCreatedByUser',
        'approved_by_user' => 'getApprovedByUser',
        'sales' => 'getSales',
        'gallery' => 'getGallery',
        'inline_vat_value' => 'getInlineVatValue',
        'inline_discount_value' => 'getInlineDiscountValue',
        'rule_compile_status' => 'getRuleCompileStatus',
        'running_number_type' => 'getRunningNumberType',
        'running_modified_on' => 'getRunningModifiedOn',
        'exempt_amount' => 'getExemptAmount',
        'vatable_amount' => 'getVatableAmount',
        'total_after_discount' => 'getTotalAfterDiscount',
        'sub_total' => 'getSubTotal',
        'document_references' => 'getDocumentReferences',
        'referenced_to_me' => 'getReferencedToMe',
        'referenced_by_me' => 'getReferencedByMe',
        'status_int' => 'getStatusInt',
        'is_re_calculate' => 'getIsReCalculate',
        'partial_payment_method' => 'getPartialPaymentMethod',
        'vat_amount' => 'getVatAmount',
        'is_migrate' => 'getIsMigrate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['contact_id'] = $data['contact_id'] ?? null;
        $this->container['company_id'] = $data['company_id'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['created_on'] = $data['created_on'] ?? null;
        $this->container['modified_on'] = $data['modified_on'] ?? null;
        $this->container['published_on'] = $data['published_on'] ?? null;
        $this->container['document_date'] = $data['document_date'] ?? null;
        $this->container['published'] = $data['published'] ?? null;
        $this->container['approved'] = $data['approved'] ?? null;
        $this->container['approved_by'] = $data['approved_by'] ?? null;
        $this->container['approved_by_client_id'] = $data['approved_by_client_id'] ?? null;
        $this->container['approved_image_url'] = $data['approved_image_url'] ?? null;
        $this->container['document_serial'] = $data['document_serial'] ?? null;
        $this->container['remarks'] = $data['remarks'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['value'] = $data['value'] ?? null;
        $this->container['due_date'] = $data['due_date'] ?? null;
        $this->container['expected_date'] = $data['expected_date'] ?? null;
        $this->container['created_by'] = $data['created_by'] ?? null;
        $this->container['document_id'] = $data['document_id'] ?? null;
        $this->container['is_delete'] = $data['is_delete'] ?? null;
        $this->container['vat_rate'] = $data['vat_rate'] ?? null;
        $this->container['internal_notes'] = $data['internal_notes'] ?? null;
        $this->container['gallery_id'] = $data['gallery_id'] ?? null;
        $this->container['is_vat_inclusive'] = $data['is_vat_inclusive'] ?? null;
        $this->container['sales_id'] = $data['sales_id'] ?? null;
        $this->container['sales_name'] = $data['sales_name'] ?? null;
        $this->container['rounding_adjustment'] = $data['rounding_adjustment'] ?? null;
        $this->container['is_inline_discount'] = $data['is_inline_discount'] ?? false;
        $this->container['is_inline_vat'] = $data['is_inline_vat'] ?? false;
        $this->container['tax'] = $data['tax'] ?? null;
        $this->container['document_serial_no_prefix'] = $data['document_serial_no_prefix'] ?? null;
        $this->container['vat_value'] = $data['vat_value'] ?? null;
        $this->container['reset_transaction_id'] = $data['reset_transaction_id'] ?? null;
        $this->container['contact'] = $data['contact'] ?? null;
        $this->container['approved_by_client'] = $data['approved_by_client'] ?? null;
        $this->container['company'] = $data['company'] ?? null;
        $this->container['created_by_user'] = $data['created_by_user'] ?? null;
        $this->container['approved_by_user'] = $data['approved_by_user'] ?? null;
        $this->container['sales'] = $data['sales'] ?? null;
        $this->container['gallery'] = $data['gallery'] ?? null;
        $this->container['inline_vat_value'] = $data['inline_vat_value'] ?? null;
        $this->container['inline_discount_value'] = $data['inline_discount_value'] ?? null;
        $this->container['rule_compile_status'] = $data['rule_compile_status'] ?? null;
        $this->container['running_number_type'] = $data['running_number_type'] ?? null;
        $this->container['running_modified_on'] = $data['running_modified_on'] ?? null;
        $this->container['exempt_amount'] = $data['exempt_amount'] ?? null;
        $this->container['vatable_amount'] = $data['vatable_amount'] ?? null;
        $this->container['total_after_discount'] = $data['total_after_discount'] ?? null;
        $this->container['sub_total'] = $data['sub_total'] ?? null;
        $this->container['document_references'] = $data['document_references'] ?? null;
        $this->container['referenced_to_me'] = $data['referenced_to_me'] ?? null;
        $this->container['referenced_by_me'] = $data['referenced_by_me'] ?? null;
        $this->container['status_int'] = $data['status_int'] ?? null;
        $this->container['is_re_calculate'] = $data['is_re_calculate'] ?? null;
        $this->container['partial_payment_method'] = $data['partial_payment_method'] ?? null;
        $this->container['vat_amount'] = $data['vat_amount'] ?? null;
        $this->container['is_migrate'] = $data['is_migrate'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['company_id'] === null) {
            $invalidProperties[] = "'company_id' can't be null";
        }
        if ($this->container['created_on'] === null) {
            $invalidProperties[] = "'created_on' can't be null";
        }
        if ((mb_strlen($this->container['created_on']) < 1)) {
            $invalidProperties[] = "invalid value for 'created_on', the character length must be bigger than or equal to 1.";
        }

        if ($this->container['modified_on'] === null) {
            $invalidProperties[] = "'modified_on' can't be null";
        }
        if ((mb_strlen($this->container['modified_on']) < 1)) {
            $invalidProperties[] = "invalid value for 'modified_on', the character length must be bigger than or equal to 1.";
        }

        if ($this->container['published_on'] === null) {
            $invalidProperties[] = "'published_on' can't be null";
        }
        if ((mb_strlen($this->container['published_on']) < 1)) {
            $invalidProperties[] = "invalid value for 'published_on', the character length must be bigger than or equal to 1.";
        }

        if ($this->container['document_date'] === null) {
            $invalidProperties[] = "'document_date' can't be null";
        }
        if ((mb_strlen($this->container['document_date']) < 1)) {
            $invalidProperties[] = "invalid value for 'document_date', the character length must be bigger than or equal to 1.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets contact_id
     *
     * @return int|null
     */
    public function getContactId()
    {
        return $this->container['contact_id'];
    }

    /**
     * Sets contact_id
     *
     * @param int|null $contact_id contact_id
     *
     * @return self
     */
    public function setContactId($contact_id)
    {
        $this->container['contact_id'] = $contact_id;

        return $this;
    }

    /**
     * Gets company_id
     *
     * @return int
     */
    public function getCompanyId()
    {
        return $this->container['company_id'];
    }

    /**
     * Sets company_id
     *
     * @param int $company_id company_id
     *
     * @return self
     */
    public function setCompanyId($company_id)
    {
        $this->container['company_id'] = $company_id;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \OpenAPI\Client\Model\ReceivableInvoiceStatus|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \OpenAPI\Client\Model\ReceivableInvoiceStatus|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets created_on
     *
     * @return \DateTime
     */
    public function getCreatedOn()
    {
        return $this->container['created_on'];
    }

    /**
     * Sets created_on
     *
     * @param \DateTime $created_on created_on
     *
     * @return self
     */
    public function setCreatedOn($created_on)
    {

        if ((mb_strlen($created_on) < 1)) {
            throw new \InvalidArgumentException('invalid length for $created_on when calling ReceivableInvoiceAllOf., must be bigger than or equal to 1.');
        }

        $this->container['created_on'] = $created_on;

        return $this;
    }

    /**
     * Gets modified_on
     *
     * @return \DateTime
     */
    public function getModifiedOn()
    {
        return $this->container['modified_on'];
    }

    /**
     * Sets modified_on
     *
     * @param \DateTime $modified_on modified_on
     *
     * @return self
     */
    public function setModifiedOn($modified_on)
    {

        if ((mb_strlen($modified_on) < 1)) {
            throw new \InvalidArgumentException('invalid length for $modified_on when calling ReceivableInvoiceAllOf., must be bigger than or equal to 1.');
        }

        $this->container['modified_on'] = $modified_on;

        return $this;
    }

    /**
     * Gets published_on
     *
     * @return \DateTime
     */
    public function getPublishedOn()
    {
        return $this->container['published_on'];
    }

    /**
     * Sets published_on
     *
     * @param \DateTime $published_on published_on
     *
     * @return self
     */
    public function setPublishedOn($published_on)
    {

        if ((mb_strlen($published_on) < 1)) {
            throw new \InvalidArgumentException('invalid length for $published_on when calling ReceivableInvoiceAllOf., must be bigger than or equal to 1.');
        }

        $this->container['published_on'] = $published_on;

        return $this;
    }

    /**
     * Gets document_date
     *
     * @return \DateTime
     */
    public function getDocumentDate()
    {
        return $this->container['document_date'];
    }

    /**
     * Sets document_date
     *
     * @param \DateTime $document_date document_date
     *
     * @return self
     */
    public function setDocumentDate($document_date)
    {

        if ((mb_strlen($document_date) < 1)) {
            throw new \InvalidArgumentException('invalid length for $document_date when calling ReceivableInvoiceAllOf., must be bigger than or equal to 1.');
        }

        $this->container['document_date'] = $document_date;

        return $this;
    }

    /**
     * Gets published
     *
     * @return bool|null
     */
    public function getPublished()
    {
        return $this->container['published'];
    }

    /**
     * Sets published
     *
     * @param bool|null $published published
     *
     * @return self
     */
    public function setPublished($published)
    {
        $this->container['published'] = $published;

        return $this;
    }

    /**
     * Gets approved
     *
     * @return bool|null
     */
    public function getApproved()
    {
        return $this->container['approved'];
    }

    /**
     * Sets approved
     *
     * @param bool|null $approved approved
     *
     * @return self
     */
    public function setApproved($approved)
    {
        $this->container['approved'] = $approved;

        return $this;
    }

    /**
     * Gets approved_by
     *
     * @return int|null
     */
    public function getApprovedBy()
    {
        return $this->container['approved_by'];
    }

    /**
     * Sets approved_by
     *
     * @param int|null $approved_by approved_by
     *
     * @return self
     */
    public function setApprovedBy($approved_by)
    {
        $this->container['approved_by'] = $approved_by;

        return $this;
    }

    /**
     * Gets approved_by_client_id
     *
     * @return int|null
     */
    public function getApprovedByClientId()
    {
        return $this->container['approved_by_client_id'];
    }

    /**
     * Sets approved_by_client_id
     *
     * @param int|null $approved_by_client_id approved_by_client_id
     *
     * @return self
     */
    public function setApprovedByClientId($approved_by_client_id)
    {
        $this->container['approved_by_client_id'] = $approved_by_client_id;

        return $this;
    }

    /**
     * Gets approved_image_url
     *
     * @return string|null
     */
    public function getApprovedImageUrl()
    {
        return $this->container['approved_image_url'];
    }

    /**
     * Sets approved_image_url
     *
     * @param string|null $approved_image_url approved_image_url
     *
     * @return self
     */
    public function setApprovedImageUrl($approved_image_url)
    {
        $this->container['approved_image_url'] = $approved_image_url;

        return $this;
    }

    /**
     * Gets document_serial
     *
     * @return string|null
     */
    public function getDocumentSerial()
    {
        return $this->container['document_serial'];
    }

    /**
     * Sets document_serial
     *
     * @param string|null $document_serial document_serial
     *
     * @return self
     */
    public function setDocumentSerial($document_serial)
    {
        $this->container['document_serial'] = $document_serial;

        return $this;
    }

    /**
     * Gets remarks
     *
     * @return string|null
     */
    public function getRemarks()
    {
        return $this->container['remarks'];
    }

    /**
     * Sets remarks
     *
     * @param string|null $remarks remarks
     *
     * @return self
     */
    public function setRemarks($remarks)
    {
        $this->container['remarks'] = $remarks;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets value
     *
     * @return float|null
     */
    public function getValue()
    {
        return $this->container['value'];
    }

    /**
     * Sets value
     *
     * @param float|null $value value
     *
     * @return self
     */
    public function setValue($value)
    {
        $this->container['value'] = $value;

        return $this;
    }

    /**
     * Gets due_date
     *
     * @return \DateTime|null
     */
    public function getDueDate()
    {
        return $this->container['due_date'];
    }

    /**
     * Sets due_date
     *
     * @param \DateTime|null $due_date due_date
     *
     * @return self
     */
    public function setDueDate($due_date)
    {
        $this->container['due_date'] = $due_date;

        return $this;
    }

    /**
     * Gets expected_date
     *
     * @return \DateTime|null
     */
    public function getExpectedDate()
    {
        return $this->container['expected_date'];
    }

    /**
     * Sets expected_date
     *
     * @param \DateTime|null $expected_date expected_date
     *
     * @return self
     */
    public function setExpectedDate($expected_date)
    {
        $this->container['expected_date'] = $expected_date;

        return $this;
    }

    /**
     * Gets created_by
     *
     * @return int|null
     */
    public function getCreatedBy()
    {
        return $this->container['created_by'];
    }

    /**
     * Sets created_by
     *
     * @param int|null $created_by created_by
     *
     * @return self
     */
    public function setCreatedBy($created_by)
    {
        $this->container['created_by'] = $created_by;

        return $this;
    }

    /**
     * Gets document_id
     *
     * @return string|null
     */
    public function getDocumentId()
    {
        return $this->container['document_id'];
    }

    /**
     * Sets document_id
     *
     * @param string|null $document_id document_id
     *
     * @return self
     */
    public function setDocumentId($document_id)
    {
        $this->container['document_id'] = $document_id;

        return $this;
    }

    /**
     * Gets is_delete
     *
     * @return bool|null
     */
    public function getIsDelete()
    {
        return $this->container['is_delete'];
    }

    /**
     * Sets is_delete
     *
     * @param bool|null $is_delete is_delete
     *
     * @return self
     */
    public function setIsDelete($is_delete)
    {
        $this->container['is_delete'] = $is_delete;

        return $this;
    }

    /**
     * Gets vat_rate
     *
     * @return int|null
     */
    public function getVatRate()
    {
        return $this->container['vat_rate'];
    }

    /**
     * Sets vat_rate
     *
     * @param int|null $vat_rate vat_rate
     *
     * @return self
     */
    public function setVatRate($vat_rate)
    {
        $this->container['vat_rate'] = $vat_rate;

        return $this;
    }

    /**
     * Gets internal_notes
     *
     * @return string|null
     */
    public function getInternalNotes()
    {
        return $this->container['internal_notes'];
    }

    /**
     * Sets internal_notes
     *
     * @param string|null $internal_notes internal_notes
     *
     * @return self
     */
    public function setInternalNotes($internal_notes)
    {
        $this->container['internal_notes'] = $internal_notes;

        return $this;
    }

    /**
     * Gets gallery_id
     *
     * @return int|null
     */
    public function getGalleryId()
    {
        return $this->container['gallery_id'];
    }

    /**
     * Sets gallery_id
     *
     * @param int|null $gallery_id gallery_id
     *
     * @return self
     */
    public function setGalleryId($gallery_id)
    {
        $this->container['gallery_id'] = $gallery_id;

        return $this;
    }

    /**
     * Gets is_vat_inclusive
     *
     * @return bool|null
     */
    public function getIsVatInclusive()
    {
        return $this->container['is_vat_inclusive'];
    }

    /**
     * Sets is_vat_inclusive
     *
     * @param bool|null $is_vat_inclusive is_vat_inclusive
     *
     * @return self
     */
    public function setIsVatInclusive($is_vat_inclusive)
    {
        $this->container['is_vat_inclusive'] = $is_vat_inclusive;

        return $this;
    }

    /**
     * Gets sales_id
     *
     * @return int|null
     */
    public function getSalesId()
    {
        return $this->container['sales_id'];
    }

    /**
     * Sets sales_id
     *
     * @param int|null $sales_id sales_id
     *
     * @return self
     */
    public function setSalesId($sales_id)
    {
        $this->container['sales_id'] = $sales_id;

        return $this;
    }

    /**
     * Gets sales_name
     *
     * @return string|null
     */
    public function getSalesName()
    {
        return $this->container['sales_name'];
    }

    /**
     * Sets sales_name
     *
     * @param string|null $sales_name sales_name
     *
     * @return self
     */
    public function setSalesName($sales_name)
    {
        $this->container['sales_name'] = $sales_name;

        return $this;
    }

    /**
     * Gets rounding_adjustment
     *
     * @return float|null
     */
    public function getRoundingAdjustment()
    {
        return $this->container['rounding_adjustment'];
    }

    /**
     * Sets rounding_adjustment
     *
     * @param float|null $rounding_adjustment rounding_adjustment
     *
     * @return self
     */
    public function setRoundingAdjustment($rounding_adjustment)
    {
        $this->container['rounding_adjustment'] = $rounding_adjustment;

        return $this;
    }

    /**
     * Gets is_inline_discount
     *
     * @return bool|null
     */
    public function getIsInlineDiscount()
    {
        return $this->container['is_inline_discount'];
    }

    /**
     * Sets is_inline_discount
     *
     * @param bool|null $is_inline_discount is_inline_discount
     *
     * @return self
     */
    public function setIsInlineDiscount($is_inline_discount)
    {
        $this->container['is_inline_discount'] = $is_inline_discount;

        return $this;
    }

    /**
     * Gets is_inline_vat
     *
     * @return bool|null
     */
    public function getIsInlineVat()
    {
        return $this->container['is_inline_vat'];
    }

    /**
     * Sets is_inline_vat
     *
     * @param bool|null $is_inline_vat is_inline_vat
     *
     * @return self
     */
    public function setIsInlineVat($is_inline_vat)
    {
        $this->container['is_inline_vat'] = $is_inline_vat;

        return $this;
    }

    /**
     * Gets tax
     *
     * @return float|null
     */
    public function getTax()
    {
        return $this->container['tax'];
    }

    /**
     * Sets tax
     *
     * @param float|null $tax tax
     *
     * @return self
     */
    public function setTax($tax)
    {
        $this->container['tax'] = $tax;

        return $this;
    }

    /**
     * Gets document_serial_no_prefix
     *
     * @return int|null
     */
    public function getDocumentSerialNoPrefix()
    {
        return $this->container['document_serial_no_prefix'];
    }

    /**
     * Sets document_serial_no_prefix
     *
     * @param int|null $document_serial_no_prefix document_serial_no_prefix
     *
     * @return self
     */
    public function setDocumentSerialNoPrefix($document_serial_no_prefix)
    {
        $this->container['document_serial_no_prefix'] = $document_serial_no_prefix;

        return $this;
    }

    /**
     * Gets vat_value
     *
     * @return float|null
     */
    public function getVatValue()
    {
        return $this->container['vat_value'];
    }

    /**
     * Sets vat_value
     *
     * @param float|null $vat_value vat_value
     *
     * @return self
     */
    public function setVatValue($vat_value)
    {
        $this->container['vat_value'] = $vat_value;

        return $this;
    }

    /**
     * Gets reset_transaction_id
     *
     * @return int|null
     */
    public function getResetTransactionId()
    {
        return $this->container['reset_transaction_id'];
    }

    /**
     * Sets reset_transaction_id
     *
     * @param int|null $reset_transaction_id reset_transaction_id
     *
     * @return self
     */
    public function setResetTransactionId($reset_transaction_id)
    {
        $this->container['reset_transaction_id'] = $reset_transaction_id;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return OneOfContact|null
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param OneOfContact|null $contact contact
     *
     * @return self
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets approved_by_client
     *
     * @return OneOfUser|null
     */
    public function getApprovedByClient()
    {
        return $this->container['approved_by_client'];
    }

    /**
     * Sets approved_by_client
     *
     * @param OneOfUser|null $approved_by_client approved_by_client
     *
     * @return self
     */
    public function setApprovedByClient($approved_by_client)
    {
        $this->container['approved_by_client'] = $approved_by_client;

        return $this;
    }

    /**
     * Gets company
     *
     * @return OneOfCompany|null
     */
    public function getCompany()
    {
        return $this->container['company'];
    }

    /**
     * Sets company
     *
     * @param OneOfCompany|null $company company
     *
     * @return self
     */
    public function setCompany($company)
    {
        $this->container['company'] = $company;

        return $this;
    }

    /**
     * Gets created_by_user
     *
     * @return OneOfUser|null
     */
    public function getCreatedByUser()
    {
        return $this->container['created_by_user'];
    }

    /**
     * Sets created_by_user
     *
     * @param OneOfUser|null $created_by_user created_by_user
     *
     * @return self
     */
    public function setCreatedByUser($created_by_user)
    {
        $this->container['created_by_user'] = $created_by_user;

        return $this;
    }

    /**
     * Gets approved_by_user
     *
     * @return OneOfUser|null
     */
    public function getApprovedByUser()
    {
        return $this->container['approved_by_user'];
    }

    /**
     * Sets approved_by_user
     *
     * @param OneOfUser|null $approved_by_user approved_by_user
     *
     * @return self
     */
    public function setApprovedByUser($approved_by_user)
    {
        $this->container['approved_by_user'] = $approved_by_user;

        return $this;
    }

    /**
     * Gets sales
     *
     * @return OneOfUser|null
     */
    public function getSales()
    {
        return $this->container['sales'];
    }

    /**
     * Sets sales
     *
     * @param OneOfUser|null $sales sales
     *
     * @return self
     */
    public function setSales($sales)
    {
        $this->container['sales'] = $sales;

        return $this;
    }

    /**
     * Gets gallery
     *
     * @return OneOfGallery|null
     */
    public function getGallery()
    {
        return $this->container['gallery'];
    }

    /**
     * Sets gallery
     *
     * @param OneOfGallery|null $gallery gallery
     *
     * @return self
     */
    public function setGallery($gallery)
    {
        $this->container['gallery'] = $gallery;

        return $this;
    }

    /**
     * Gets inline_vat_value
     *
     * @return float|null
     */
    public function getInlineVatValue()
    {
        return $this->container['inline_vat_value'];
    }

    /**
     * Sets inline_vat_value
     *
     * @param float|null $inline_vat_value inline_vat_value
     *
     * @return self
     */
    public function setInlineVatValue($inline_vat_value)
    {
        $this->container['inline_vat_value'] = $inline_vat_value;

        return $this;
    }

    /**
     * Gets inline_discount_value
     *
     * @return float|null
     */
    public function getInlineDiscountValue()
    {
        return $this->container['inline_discount_value'];
    }

    /**
     * Sets inline_discount_value
     *
     * @param float|null $inline_discount_value inline_discount_value
     *
     * @return self
     */
    public function setInlineDiscountValue($inline_discount_value)
    {
        $this->container['inline_discount_value'] = $inline_discount_value;

        return $this;
    }

    /**
     * Gets rule_compile_status
     *
     * @return \OpenAPI\Client\Model\RuleCompileStatus|null
     */
    public function getRuleCompileStatus()
    {
        return $this->container['rule_compile_status'];
    }

    /**
     * Sets rule_compile_status
     *
     * @param \OpenAPI\Client\Model\RuleCompileStatus|null $rule_compile_status rule_compile_status
     *
     * @return self
     */
    public function setRuleCompileStatus($rule_compile_status)
    {
        $this->container['rule_compile_status'] = $rule_compile_status;

        return $this;
    }

    /**
     * Gets running_number_type
     *
     * @return int|null
     */
    public function getRunningNumberType()
    {
        return $this->container['running_number_type'];
    }

    /**
     * Sets running_number_type
     *
     * @param int|null $running_number_type running_number_type
     *
     * @return self
     */
    public function setRunningNumberType($running_number_type)
    {
        $this->container['running_number_type'] = $running_number_type;

        return $this;
    }

    /**
     * Gets running_modified_on
     *
     * @return \DateTime|null
     */
    public function getRunningModifiedOn()
    {
        return $this->container['running_modified_on'];
    }

    /**
     * Sets running_modified_on
     *
     * @param \DateTime|null $running_modified_on running_modified_on
     *
     * @return self
     */
    public function setRunningModifiedOn($running_modified_on)
    {
        $this->container['running_modified_on'] = $running_modified_on;

        return $this;
    }

    /**
     * Gets exempt_amount
     *
     * @return float|null
     */
    public function getExemptAmount()
    {
        return $this->container['exempt_amount'];
    }

    /**
     * Sets exempt_amount
     *
     * @param float|null $exempt_amount exempt_amount
     *
     * @return self
     */
    public function setExemptAmount($exempt_amount)
    {
        $this->container['exempt_amount'] = $exempt_amount;

        return $this;
    }

    /**
     * Gets vatable_amount
     *
     * @return float|null
     */
    public function getVatableAmount()
    {
        return $this->container['vatable_amount'];
    }

    /**
     * Sets vatable_amount
     *
     * @param float|null $vatable_amount vatable_amount
     *
     * @return self
     */
    public function setVatableAmount($vatable_amount)
    {
        $this->container['vatable_amount'] = $vatable_amount;

        return $this;
    }

    /**
     * Gets total_after_discount
     *
     * @return float|null
     */
    public function getTotalAfterDiscount()
    {
        return $this->container['total_after_discount'];
    }

    /**
     * Sets total_after_discount
     *
     * @param float|null $total_after_discount total_after_discount
     *
     * @return self
     */
    public function setTotalAfterDiscount($total_after_discount)
    {
        $this->container['total_after_discount'] = $total_after_discount;

        return $this;
    }

    /**
     * Gets sub_total
     *
     * @return float|null
     */
    public function getSubTotal()
    {
        return $this->container['sub_total'];
    }

    /**
     * Sets sub_total
     *
     * @param float|null $sub_total sub_total
     *
     * @return self
     */
    public function setSubTotal($sub_total)
    {
        $this->container['sub_total'] = $sub_total;

        return $this;
    }

    /**
     * Gets document_references
     *
     * @return \OpenAPI\Client\Model\IDocumentReference[]|null
     */
    public function getDocumentReferences()
    {
        return $this->container['document_references'];
    }

    /**
     * Sets document_references
     *
     * @param \OpenAPI\Client\Model\IDocumentReference[]|null $document_references document_references
     *
     * @return self
     */
    public function setDocumentReferences($document_references)
    {
        $this->container['document_references'] = $document_references;

        return $this;
    }

    /**
     * Gets referenced_to_me
     *
     * @return \OpenAPI\Client\Model\IDocumentReference[]|null
     */
    public function getReferencedToMe()
    {
        return $this->container['referenced_to_me'];
    }

    /**
     * Sets referenced_to_me
     *
     * @param \OpenAPI\Client\Model\IDocumentReference[]|null $referenced_to_me referenced_to_me
     *
     * @return self
     */
    public function setReferencedToMe($referenced_to_me)
    {
        $this->container['referenced_to_me'] = $referenced_to_me;

        return $this;
    }

    /**
     * Gets referenced_by_me
     *
     * @return \OpenAPI\Client\Model\IDocumentReference[]|null
     */
    public function getReferencedByMe()
    {
        return $this->container['referenced_by_me'];
    }

    /**
     * Sets referenced_by_me
     *
     * @param \OpenAPI\Client\Model\IDocumentReference[]|null $referenced_by_me referenced_by_me
     *
     * @return self
     */
    public function setReferencedByMe($referenced_by_me)
    {
        $this->container['referenced_by_me'] = $referenced_by_me;

        return $this;
    }

    /**
     * Gets status_int
     *
     * @return int|null
     */
    public function getStatusInt()
    {
        return $this->container['status_int'];
    }

    /**
     * Sets status_int
     *
     * @param int|null $status_int status_int
     *
     * @return self
     */
    public function setStatusInt($status_int)
    {
        $this->container['status_int'] = $status_int;

        return $this;
    }

    /**
     * Gets is_re_calculate
     *
     * @return bool|null
     */
    public function getIsReCalculate()
    {
        return $this->container['is_re_calculate'];
    }

    /**
     * Sets is_re_calculate
     *
     * @param bool|null $is_re_calculate is_re_calculate
     *
     * @return self
     */
    public function setIsReCalculate($is_re_calculate)
    {
        $this->container['is_re_calculate'] = $is_re_calculate;

        return $this;
    }

    /**
     * Gets partial_payment_method
     *
     * @return OneOfPartialPaymentMethod|null
     */
    public function getPartialPaymentMethod()
    {
        return $this->container['partial_payment_method'];
    }

    /**
     * Sets partial_payment_method
     *
     * @param OneOfPartialPaymentMethod|null $partial_payment_method partial_payment_method
     *
     * @return self
     */
    public function setPartialPaymentMethod($partial_payment_method)
    {
        $this->container['partial_payment_method'] = $partial_payment_method;

        return $this;
    }

    /**
     * Gets vat_amount
     *
     * @return float|null
     */
    public function getVatAmount()
    {
        return $this->container['vat_amount'];
    }

    /**
     * Sets vat_amount
     *
     * @param float|null $vat_amount vat_amount
     *
     * @return self
     */
    public function setVatAmount($vat_amount)
    {
        $this->container['vat_amount'] = $vat_amount;

        return $this;
    }

    /**
     * Gets is_migrate
     *
     * @return bool|null
     */
    public function getIsMigrate()
    {
        return $this->container['is_migrate'];
    }

    /**
     * Sets is_migrate
     *
     * @param bool|null $is_migrate is_migrate
     *
     * @return self
     */
    public function setIsMigrate($is_migrate)
    {
        $this->container['is_migrate'] = $is_migrate;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


