<?php
/**
 * PayrollDetail
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * FlowAccount Open API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * PayrollDetail Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class PayrollDetail implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'PayrollDetail';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'payroll_id' => 'int',
        'employee_id' => 'int',
        'salary' => 'float',
        'social_security_value' => 'float',
        'commission' => 'float',
        'bonus' => 'float',
        'deduction' => 'float',
        'withholding_tax' => 'float',
        'status' => '\OpenAPI\Client\Model\PayrollDetailStatus',
        'is_delete' => 'bool',
        'withheld' => 'float',
        'date_payment' => '\DateTime',
        'fee' => 'float',
        'ref' => 'string',
        'transaction_id' => 'string',
        'amount' => 'float',
        'pay_status' => 'int',
        'remarks' => 'string',
        'expense_id' => 'int',
        'overtime' => 'float',
        'advance' => 'float',
        'other_addition' => 'float',
        'other_deduction' => 'float',
        'provident_fund' => 'float',
        'security_money' => 'float',
        'value' => 'float',
        'note' => 'string',
        'created_on' => '\DateTime',
        'created_by' => 'int',
        'modified_on' => '\DateTime',
        'last_modified_by' => 'int',
        'employer_social_security' => 'float',
        'allowance' => 'float',
        'cola' => 'float',
        'medical_expense' => 'float',
        'accommodation' => 'float',
        'director_remuneration' => 'float',
        'method_payment' => 'int',
        'bank_id' => 'int',
        'account_number' => 'string',
        'account_number_masking' => 'string',
        'employee_title' => 'string',
        'employee_code' => 'string',
        'employee_first_name' => 'string',
        'employee_last_name' => 'string',
        'employee_first_name_foreign' => 'string',
        'employee_last_name_foreign' => 'string',
        'employee_start_date' => '\DateTime',
        'is_social_security_registered' => 'bool',
        'bank_branch_code' => 'string',
        'account_type' => 'OneOfBankAccountType',
        'reference_id' => 'string',
        'is_migrate' => 'bool',
        'employee' => 'OneOfEmployee',
        'expense_list' => 'OneOfExpenseList',
        'payroll' => 'OneOfPayroll',
        'bank' => 'OneOfBank',
        'last_modified_by_user' => 'OneOfUser',
        'rule_compile_status' => '\OpenAPI\Client\Model\RuleCompileStatus',
        'employer_account_branch' => 'string',
        'employer_account_number' => 'string',
        'bank_account_id' => 'int',
        'payment_remarks' => 'string',
        'payroll_payment_id' => 'int',
        'kc_processing_status' => 'int',
        'department_id' => 'int',
        'department_name' => 'string',
        'department_code' => 'string',
        'work_days' => 'float',
        'wage' => 'float',
        'is_social_security_auto_cal' => 'bool',
        'social_security_percent' => 'float',
        'send_email_status' => 'OneOfSendEmailStatus',
        'student_loan' => 'float',
        'conditions_withholding_tax' => 'OneOfConditionsOfWithholdingTax',
        'overtime_pnd' => 'int',
        'commission_pnd' => 'int',
        'bonus_pnd' => 'int',
        'allowance_pnd' => 'int',
        'cola_pnd' => 'int',
        'medical_expense_pnd' => 'int',
        'accommodation_pnd' => 'int',
        'director_remuneration_pnd' => 'int',
        'other_addition_pnd' => 'int',
        'withholding_tax401' => 'float',
        'withholding_tax402' => 'float',
        'status_int' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'payroll_id' => 'int64',
        'employee_id' => 'int64',
        'salary' => 'decimal',
        'social_security_value' => 'decimal',
        'commission' => 'decimal',
        'bonus' => 'decimal',
        'deduction' => 'decimal',
        'withholding_tax' => 'decimal',
        'status' => null,
        'is_delete' => null,
        'withheld' => 'decimal',
        'date_payment' => 'date-time',
        'fee' => 'decimal',
        'ref' => null,
        'transaction_id' => null,
        'amount' => 'decimal',
        'pay_status' => 'int32',
        'remarks' => null,
        'expense_id' => 'int64',
        'overtime' => 'decimal',
        'advance' => 'decimal',
        'other_addition' => 'decimal',
        'other_deduction' => 'decimal',
        'provident_fund' => 'decimal',
        'security_money' => 'decimal',
        'value' => 'decimal',
        'note' => null,
        'created_on' => 'date-time',
        'created_by' => 'int64',
        'modified_on' => 'date-time',
        'last_modified_by' => 'int64',
        'employer_social_security' => 'decimal',
        'allowance' => 'decimal',
        'cola' => 'decimal',
        'medical_expense' => 'decimal',
        'accommodation' => 'decimal',
        'director_remuneration' => 'decimal',
        'method_payment' => 'int32',
        'bank_id' => 'int32',
        'account_number' => null,
        'account_number_masking' => null,
        'employee_title' => null,
        'employee_code' => null,
        'employee_first_name' => null,
        'employee_last_name' => null,
        'employee_first_name_foreign' => null,
        'employee_last_name_foreign' => null,
        'employee_start_date' => 'date-time',
        'is_social_security_registered' => null,
        'bank_branch_code' => null,
        'account_type' => null,
        'reference_id' => null,
        'is_migrate' => null,
        'employee' => null,
        'expense_list' => null,
        'payroll' => null,
        'bank' => null,
        'last_modified_by_user' => null,
        'rule_compile_status' => null,
        'employer_account_branch' => null,
        'employer_account_number' => null,
        'bank_account_id' => 'int64',
        'payment_remarks' => null,
        'payroll_payment_id' => 'int64',
        'kc_processing_status' => 'int32',
        'department_id' => 'int64',
        'department_name' => null,
        'department_code' => null,
        'work_days' => 'decimal',
        'wage' => 'decimal',
        'is_social_security_auto_cal' => null,
        'social_security_percent' => 'decimal',
        'send_email_status' => null,
        'student_loan' => 'decimal',
        'conditions_withholding_tax' => null,
        'overtime_pnd' => 'int32',
        'commission_pnd' => 'int32',
        'bonus_pnd' => 'int32',
        'allowance_pnd' => 'int32',
        'cola_pnd' => 'int32',
        'medical_expense_pnd' => 'int32',
        'accommodation_pnd' => 'int32',
        'director_remuneration_pnd' => 'int32',
        'other_addition_pnd' => 'int32',
        'withholding_tax401' => 'decimal',
        'withholding_tax402' => 'decimal',
        'status_int' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'payroll_id' => 'payrollId',
        'employee_id' => 'employeeId',
        'salary' => 'salary',
        'social_security_value' => 'socialSecurityValue',
        'commission' => 'commission',
        'bonus' => 'bonus',
        'deduction' => 'deduction',
        'withholding_tax' => 'withholdingTax',
        'status' => 'status',
        'is_delete' => 'isDelete',
        'withheld' => 'withheld',
        'date_payment' => 'datePayment',
        'fee' => 'fee',
        'ref' => 'ref',
        'transaction_id' => 'transactionId',
        'amount' => 'amount',
        'pay_status' => 'payStatus',
        'remarks' => 'remarks',
        'expense_id' => 'expenseId',
        'overtime' => 'overtime',
        'advance' => 'advance',
        'other_addition' => 'otherAddition',
        'other_deduction' => 'otherDeduction',
        'provident_fund' => 'providentFund',
        'security_money' => 'securityMoney',
        'value' => 'value',
        'note' => 'note',
        'created_on' => 'createdOn',
        'created_by' => 'createdBy',
        'modified_on' => 'modifiedOn',
        'last_modified_by' => 'lastModifiedBy',
        'employer_social_security' => 'employerSocialSecurity',
        'allowance' => 'allowance',
        'cola' => 'cola',
        'medical_expense' => 'medicalExpense',
        'accommodation' => 'accommodation',
        'director_remuneration' => 'directorRemuneration',
        'method_payment' => 'methodPayment',
        'bank_id' => 'bankId',
        'account_number' => 'accountNumber',
        'account_number_masking' => 'accountNumberMasking',
        'employee_title' => 'employeeTitle',
        'employee_code' => 'employeeCode',
        'employee_first_name' => 'employeeFirstName',
        'employee_last_name' => 'employeeLastName',
        'employee_first_name_foreign' => 'employeeFirstNameForeign',
        'employee_last_name_foreign' => 'employeeLastNameForeign',
        'employee_start_date' => 'employeeStartDate',
        'is_social_security_registered' => 'isSocialSecurityRegistered',
        'bank_branch_code' => 'bankBranchCode',
        'account_type' => 'accountType',
        'reference_id' => 'referenceId',
        'is_migrate' => 'isMigrate',
        'employee' => 'employee',
        'expense_list' => 'expenseList',
        'payroll' => 'payroll',
        'bank' => 'bank',
        'last_modified_by_user' => 'lastModifiedByUser',
        'rule_compile_status' => 'ruleCompileStatus',
        'employer_account_branch' => 'employerAccountBranch',
        'employer_account_number' => 'employerAccountNumber',
        'bank_account_id' => 'bankAccountId',
        'payment_remarks' => 'paymentRemarks',
        'payroll_payment_id' => 'payrollPaymentId',
        'kc_processing_status' => 'kcProcessingStatus',
        'department_id' => 'departmentId',
        'department_name' => 'departmentName',
        'department_code' => 'departmentCode',
        'work_days' => 'workDays',
        'wage' => 'wage',
        'is_social_security_auto_cal' => 'isSocialSecurityAutoCal',
        'social_security_percent' => 'socialSecurityPercent',
        'send_email_status' => 'sendEmailStatus',
        'student_loan' => 'studentLoan',
        'conditions_withholding_tax' => 'conditionsWithholdingTax',
        'overtime_pnd' => 'overtimePND',
        'commission_pnd' => 'commissionPND',
        'bonus_pnd' => 'bonusPND',
        'allowance_pnd' => 'allowancePND',
        'cola_pnd' => 'colaPND',
        'medical_expense_pnd' => 'medicalExpensePND',
        'accommodation_pnd' => 'accommodationPND',
        'director_remuneration_pnd' => 'directorRemunerationPND',
        'other_addition_pnd' => 'otherAdditionPND',
        'withholding_tax401' => 'withholdingTax401',
        'withholding_tax402' => 'withholdingTax402',
        'status_int' => 'statusInt'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'payroll_id' => 'setPayrollId',
        'employee_id' => 'setEmployeeId',
        'salary' => 'setSalary',
        'social_security_value' => 'setSocialSecurityValue',
        'commission' => 'setCommission',
        'bonus' => 'setBonus',
        'deduction' => 'setDeduction',
        'withholding_tax' => 'setWithholdingTax',
        'status' => 'setStatus',
        'is_delete' => 'setIsDelete',
        'withheld' => 'setWithheld',
        'date_payment' => 'setDatePayment',
        'fee' => 'setFee',
        'ref' => 'setRef',
        'transaction_id' => 'setTransactionId',
        'amount' => 'setAmount',
        'pay_status' => 'setPayStatus',
        'remarks' => 'setRemarks',
        'expense_id' => 'setExpenseId',
        'overtime' => 'setOvertime',
        'advance' => 'setAdvance',
        'other_addition' => 'setOtherAddition',
        'other_deduction' => 'setOtherDeduction',
        'provident_fund' => 'setProvidentFund',
        'security_money' => 'setSecurityMoney',
        'value' => 'setValue',
        'note' => 'setNote',
        'created_on' => 'setCreatedOn',
        'created_by' => 'setCreatedBy',
        'modified_on' => 'setModifiedOn',
        'last_modified_by' => 'setLastModifiedBy',
        'employer_social_security' => 'setEmployerSocialSecurity',
        'allowance' => 'setAllowance',
        'cola' => 'setCola',
        'medical_expense' => 'setMedicalExpense',
        'accommodation' => 'setAccommodation',
        'director_remuneration' => 'setDirectorRemuneration',
        'method_payment' => 'setMethodPayment',
        'bank_id' => 'setBankId',
        'account_number' => 'setAccountNumber',
        'account_number_masking' => 'setAccountNumberMasking',
        'employee_title' => 'setEmployeeTitle',
        'employee_code' => 'setEmployeeCode',
        'employee_first_name' => 'setEmployeeFirstName',
        'employee_last_name' => 'setEmployeeLastName',
        'employee_first_name_foreign' => 'setEmployeeFirstNameForeign',
        'employee_last_name_foreign' => 'setEmployeeLastNameForeign',
        'employee_start_date' => 'setEmployeeStartDate',
        'is_social_security_registered' => 'setIsSocialSecurityRegistered',
        'bank_branch_code' => 'setBankBranchCode',
        'account_type' => 'setAccountType',
        'reference_id' => 'setReferenceId',
        'is_migrate' => 'setIsMigrate',
        'employee' => 'setEmployee',
        'expense_list' => 'setExpenseList',
        'payroll' => 'setPayroll',
        'bank' => 'setBank',
        'last_modified_by_user' => 'setLastModifiedByUser',
        'rule_compile_status' => 'setRuleCompileStatus',
        'employer_account_branch' => 'setEmployerAccountBranch',
        'employer_account_number' => 'setEmployerAccountNumber',
        'bank_account_id' => 'setBankAccountId',
        'payment_remarks' => 'setPaymentRemarks',
        'payroll_payment_id' => 'setPayrollPaymentId',
        'kc_processing_status' => 'setKcProcessingStatus',
        'department_id' => 'setDepartmentId',
        'department_name' => 'setDepartmentName',
        'department_code' => 'setDepartmentCode',
        'work_days' => 'setWorkDays',
        'wage' => 'setWage',
        'is_social_security_auto_cal' => 'setIsSocialSecurityAutoCal',
        'social_security_percent' => 'setSocialSecurityPercent',
        'send_email_status' => 'setSendEmailStatus',
        'student_loan' => 'setStudentLoan',
        'conditions_withholding_tax' => 'setConditionsWithholdingTax',
        'overtime_pnd' => 'setOvertimePnd',
        'commission_pnd' => 'setCommissionPnd',
        'bonus_pnd' => 'setBonusPnd',
        'allowance_pnd' => 'setAllowancePnd',
        'cola_pnd' => 'setColaPnd',
        'medical_expense_pnd' => 'setMedicalExpensePnd',
        'accommodation_pnd' => 'setAccommodationPnd',
        'director_remuneration_pnd' => 'setDirectorRemunerationPnd',
        'other_addition_pnd' => 'setOtherAdditionPnd',
        'withholding_tax401' => 'setWithholdingTax401',
        'withholding_tax402' => 'setWithholdingTax402',
        'status_int' => 'setStatusInt'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'payroll_id' => 'getPayrollId',
        'employee_id' => 'getEmployeeId',
        'salary' => 'getSalary',
        'social_security_value' => 'getSocialSecurityValue',
        'commission' => 'getCommission',
        'bonus' => 'getBonus',
        'deduction' => 'getDeduction',
        'withholding_tax' => 'getWithholdingTax',
        'status' => 'getStatus',
        'is_delete' => 'getIsDelete',
        'withheld' => 'getWithheld',
        'date_payment' => 'getDatePayment',
        'fee' => 'getFee',
        'ref' => 'getRef',
        'transaction_id' => 'getTransactionId',
        'amount' => 'getAmount',
        'pay_status' => 'getPayStatus',
        'remarks' => 'getRemarks',
        'expense_id' => 'getExpenseId',
        'overtime' => 'getOvertime',
        'advance' => 'getAdvance',
        'other_addition' => 'getOtherAddition',
        'other_deduction' => 'getOtherDeduction',
        'provident_fund' => 'getProvidentFund',
        'security_money' => 'getSecurityMoney',
        'value' => 'getValue',
        'note' => 'getNote',
        'created_on' => 'getCreatedOn',
        'created_by' => 'getCreatedBy',
        'modified_on' => 'getModifiedOn',
        'last_modified_by' => 'getLastModifiedBy',
        'employer_social_security' => 'getEmployerSocialSecurity',
        'allowance' => 'getAllowance',
        'cola' => 'getCola',
        'medical_expense' => 'getMedicalExpense',
        'accommodation' => 'getAccommodation',
        'director_remuneration' => 'getDirectorRemuneration',
        'method_payment' => 'getMethodPayment',
        'bank_id' => 'getBankId',
        'account_number' => 'getAccountNumber',
        'account_number_masking' => 'getAccountNumberMasking',
        'employee_title' => 'getEmployeeTitle',
        'employee_code' => 'getEmployeeCode',
        'employee_first_name' => 'getEmployeeFirstName',
        'employee_last_name' => 'getEmployeeLastName',
        'employee_first_name_foreign' => 'getEmployeeFirstNameForeign',
        'employee_last_name_foreign' => 'getEmployeeLastNameForeign',
        'employee_start_date' => 'getEmployeeStartDate',
        'is_social_security_registered' => 'getIsSocialSecurityRegistered',
        'bank_branch_code' => 'getBankBranchCode',
        'account_type' => 'getAccountType',
        'reference_id' => 'getReferenceId',
        'is_migrate' => 'getIsMigrate',
        'employee' => 'getEmployee',
        'expense_list' => 'getExpenseList',
        'payroll' => 'getPayroll',
        'bank' => 'getBank',
        'last_modified_by_user' => 'getLastModifiedByUser',
        'rule_compile_status' => 'getRuleCompileStatus',
        'employer_account_branch' => 'getEmployerAccountBranch',
        'employer_account_number' => 'getEmployerAccountNumber',
        'bank_account_id' => 'getBankAccountId',
        'payment_remarks' => 'getPaymentRemarks',
        'payroll_payment_id' => 'getPayrollPaymentId',
        'kc_processing_status' => 'getKcProcessingStatus',
        'department_id' => 'getDepartmentId',
        'department_name' => 'getDepartmentName',
        'department_code' => 'getDepartmentCode',
        'work_days' => 'getWorkDays',
        'wage' => 'getWage',
        'is_social_security_auto_cal' => 'getIsSocialSecurityAutoCal',
        'social_security_percent' => 'getSocialSecurityPercent',
        'send_email_status' => 'getSendEmailStatus',
        'student_loan' => 'getStudentLoan',
        'conditions_withholding_tax' => 'getConditionsWithholdingTax',
        'overtime_pnd' => 'getOvertimePnd',
        'commission_pnd' => 'getCommissionPnd',
        'bonus_pnd' => 'getBonusPnd',
        'allowance_pnd' => 'getAllowancePnd',
        'cola_pnd' => 'getColaPnd',
        'medical_expense_pnd' => 'getMedicalExpensePnd',
        'accommodation_pnd' => 'getAccommodationPnd',
        'director_remuneration_pnd' => 'getDirectorRemunerationPnd',
        'other_addition_pnd' => 'getOtherAdditionPnd',
        'withholding_tax401' => 'getWithholdingTax401',
        'withholding_tax402' => 'getWithholdingTax402',
        'status_int' => 'getStatusInt'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['payroll_id'] = $data['payroll_id'] ?? null;
        $this->container['employee_id'] = $data['employee_id'] ?? null;
        $this->container['salary'] = $data['salary'] ?? null;
        $this->container['social_security_value'] = $data['social_security_value'] ?? null;
        $this->container['commission'] = $data['commission'] ?? null;
        $this->container['bonus'] = $data['bonus'] ?? null;
        $this->container['deduction'] = $data['deduction'] ?? null;
        $this->container['withholding_tax'] = $data['withholding_tax'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['is_delete'] = $data['is_delete'] ?? null;
        $this->container['withheld'] = $data['withheld'] ?? null;
        $this->container['date_payment'] = $data['date_payment'] ?? null;
        $this->container['fee'] = $data['fee'] ?? null;
        $this->container['ref'] = $data['ref'] ?? null;
        $this->container['transaction_id'] = $data['transaction_id'] ?? null;
        $this->container['amount'] = $data['amount'] ?? null;
        $this->container['pay_status'] = $data['pay_status'] ?? null;
        $this->container['remarks'] = $data['remarks'] ?? null;
        $this->container['expense_id'] = $data['expense_id'] ?? null;
        $this->container['overtime'] = $data['overtime'] ?? null;
        $this->container['advance'] = $data['advance'] ?? null;
        $this->container['other_addition'] = $data['other_addition'] ?? null;
        $this->container['other_deduction'] = $data['other_deduction'] ?? null;
        $this->container['provident_fund'] = $data['provident_fund'] ?? null;
        $this->container['security_money'] = $data['security_money'] ?? null;
        $this->container['value'] = $data['value'] ?? null;
        $this->container['note'] = $data['note'] ?? null;
        $this->container['created_on'] = $data['created_on'] ?? null;
        $this->container['created_by'] = $data['created_by'] ?? null;
        $this->container['modified_on'] = $data['modified_on'] ?? null;
        $this->container['last_modified_by'] = $data['last_modified_by'] ?? null;
        $this->container['employer_social_security'] = $data['employer_social_security'] ?? null;
        $this->container['allowance'] = $data['allowance'] ?? null;
        $this->container['cola'] = $data['cola'] ?? null;
        $this->container['medical_expense'] = $data['medical_expense'] ?? null;
        $this->container['accommodation'] = $data['accommodation'] ?? null;
        $this->container['director_remuneration'] = $data['director_remuneration'] ?? null;
        $this->container['method_payment'] = $data['method_payment'] ?? null;
        $this->container['bank_id'] = $data['bank_id'] ?? null;
        $this->container['account_number'] = $data['account_number'] ?? null;
        $this->container['account_number_masking'] = $data['account_number_masking'] ?? null;
        $this->container['employee_title'] = $data['employee_title'] ?? null;
        $this->container['employee_code'] = $data['employee_code'] ?? null;
        $this->container['employee_first_name'] = $data['employee_first_name'] ?? null;
        $this->container['employee_last_name'] = $data['employee_last_name'] ?? null;
        $this->container['employee_first_name_foreign'] = $data['employee_first_name_foreign'] ?? null;
        $this->container['employee_last_name_foreign'] = $data['employee_last_name_foreign'] ?? null;
        $this->container['employee_start_date'] = $data['employee_start_date'] ?? null;
        $this->container['is_social_security_registered'] = $data['is_social_security_registered'] ?? null;
        $this->container['bank_branch_code'] = $data['bank_branch_code'] ?? null;
        $this->container['account_type'] = $data['account_type'] ?? null;
        $this->container['reference_id'] = $data['reference_id'] ?? null;
        $this->container['is_migrate'] = $data['is_migrate'] ?? null;
        $this->container['employee'] = $data['employee'] ?? null;
        $this->container['expense_list'] = $data['expense_list'] ?? null;
        $this->container['payroll'] = $data['payroll'] ?? null;
        $this->container['bank'] = $data['bank'] ?? null;
        $this->container['last_modified_by_user'] = $data['last_modified_by_user'] ?? null;
        $this->container['rule_compile_status'] = $data['rule_compile_status'] ?? null;
        $this->container['employer_account_branch'] = $data['employer_account_branch'] ?? null;
        $this->container['employer_account_number'] = $data['employer_account_number'] ?? null;
        $this->container['bank_account_id'] = $data['bank_account_id'] ?? null;
        $this->container['payment_remarks'] = $data['payment_remarks'] ?? null;
        $this->container['payroll_payment_id'] = $data['payroll_payment_id'] ?? null;
        $this->container['kc_processing_status'] = $data['kc_processing_status'] ?? null;
        $this->container['department_id'] = $data['department_id'] ?? null;
        $this->container['department_name'] = $data['department_name'] ?? null;
        $this->container['department_code'] = $data['department_code'] ?? null;
        $this->container['work_days'] = $data['work_days'] ?? null;
        $this->container['wage'] = $data['wage'] ?? null;
        $this->container['is_social_security_auto_cal'] = $data['is_social_security_auto_cal'] ?? null;
        $this->container['social_security_percent'] = $data['social_security_percent'] ?? 5;
        $this->container['send_email_status'] = $data['send_email_status'] ?? null;
        $this->container['student_loan'] = $data['student_loan'] ?? null;
        $this->container['conditions_withholding_tax'] = $data['conditions_withholding_tax'] ?? null;
        $this->container['overtime_pnd'] = $data['overtime_pnd'] ?? null;
        $this->container['commission_pnd'] = $data['commission_pnd'] ?? null;
        $this->container['bonus_pnd'] = $data['bonus_pnd'] ?? null;
        $this->container['allowance_pnd'] = $data['allowance_pnd'] ?? null;
        $this->container['cola_pnd'] = $data['cola_pnd'] ?? null;
        $this->container['medical_expense_pnd'] = $data['medical_expense_pnd'] ?? null;
        $this->container['accommodation_pnd'] = $data['accommodation_pnd'] ?? null;
        $this->container['director_remuneration_pnd'] = $data['director_remuneration_pnd'] ?? null;
        $this->container['other_addition_pnd'] = $data['other_addition_pnd'] ?? null;
        $this->container['withholding_tax401'] = $data['withholding_tax401'] ?? null;
        $this->container['withholding_tax402'] = $data['withholding_tax402'] ?? null;
        $this->container['status_int'] = $data['status_int'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets payroll_id
     *
     * @return int|null
     */
    public function getPayrollId()
    {
        return $this->container['payroll_id'];
    }

    /**
     * Sets payroll_id
     *
     * @param int|null $payroll_id payroll_id
     *
     * @return self
     */
    public function setPayrollId($payroll_id)
    {
        $this->container['payroll_id'] = $payroll_id;

        return $this;
    }

    /**
     * Gets employee_id
     *
     * @return int|null
     */
    public function getEmployeeId()
    {
        return $this->container['employee_id'];
    }

    /**
     * Sets employee_id
     *
     * @param int|null $employee_id employee_id
     *
     * @return self
     */
    public function setEmployeeId($employee_id)
    {
        $this->container['employee_id'] = $employee_id;

        return $this;
    }

    /**
     * Gets salary
     *
     * @return float|null
     */
    public function getSalary()
    {
        return $this->container['salary'];
    }

    /**
     * Sets salary
     *
     * @param float|null $salary salary
     *
     * @return self
     */
    public function setSalary($salary)
    {
        $this->container['salary'] = $salary;

        return $this;
    }

    /**
     * Gets social_security_value
     *
     * @return float|null
     */
    public function getSocialSecurityValue()
    {
        return $this->container['social_security_value'];
    }

    /**
     * Sets social_security_value
     *
     * @param float|null $social_security_value social_security_value
     *
     * @return self
     */
    public function setSocialSecurityValue($social_security_value)
    {
        $this->container['social_security_value'] = $social_security_value;

        return $this;
    }

    /**
     * Gets commission
     *
     * @return float|null
     */
    public function getCommission()
    {
        return $this->container['commission'];
    }

    /**
     * Sets commission
     *
     * @param float|null $commission commission
     *
     * @return self
     */
    public function setCommission($commission)
    {
        $this->container['commission'] = $commission;

        return $this;
    }

    /**
     * Gets bonus
     *
     * @return float|null
     */
    public function getBonus()
    {
        return $this->container['bonus'];
    }

    /**
     * Sets bonus
     *
     * @param float|null $bonus bonus
     *
     * @return self
     */
    public function setBonus($bonus)
    {
        $this->container['bonus'] = $bonus;

        return $this;
    }

    /**
     * Gets deduction
     *
     * @return float|null
     */
    public function getDeduction()
    {
        return $this->container['deduction'];
    }

    /**
     * Sets deduction
     *
     * @param float|null $deduction deduction
     *
     * @return self
     */
    public function setDeduction($deduction)
    {
        $this->container['deduction'] = $deduction;

        return $this;
    }

    /**
     * Gets withholding_tax
     *
     * @return float|null
     */
    public function getWithholdingTax()
    {
        return $this->container['withholding_tax'];
    }

    /**
     * Sets withholding_tax
     *
     * @param float|null $withholding_tax withholding_tax
     *
     * @return self
     */
    public function setWithholdingTax($withholding_tax)
    {
        $this->container['withholding_tax'] = $withholding_tax;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \OpenAPI\Client\Model\PayrollDetailStatus|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \OpenAPI\Client\Model\PayrollDetailStatus|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets is_delete
     *
     * @return bool|null
     */
    public function getIsDelete()
    {
        return $this->container['is_delete'];
    }

    /**
     * Sets is_delete
     *
     * @param bool|null $is_delete is_delete
     *
     * @return self
     */
    public function setIsDelete($is_delete)
    {
        $this->container['is_delete'] = $is_delete;

        return $this;
    }

    /**
     * Gets withheld
     *
     * @return float|null
     */
    public function getWithheld()
    {
        return $this->container['withheld'];
    }

    /**
     * Sets withheld
     *
     * @param float|null $withheld withheld
     *
     * @return self
     */
    public function setWithheld($withheld)
    {
        $this->container['withheld'] = $withheld;

        return $this;
    }

    /**
     * Gets date_payment
     *
     * @return \DateTime|null
     */
    public function getDatePayment()
    {
        return $this->container['date_payment'];
    }

    /**
     * Sets date_payment
     *
     * @param \DateTime|null $date_payment date_payment
     *
     * @return self
     */
    public function setDatePayment($date_payment)
    {
        $this->container['date_payment'] = $date_payment;

        return $this;
    }

    /**
     * Gets fee
     *
     * @return float|null
     */
    public function getFee()
    {
        return $this->container['fee'];
    }

    /**
     * Sets fee
     *
     * @param float|null $fee fee
     *
     * @return self
     */
    public function setFee($fee)
    {
        $this->container['fee'] = $fee;

        return $this;
    }

    /**
     * Gets ref
     *
     * @return string|null
     */
    public function getRef()
    {
        return $this->container['ref'];
    }

    /**
     * Sets ref
     *
     * @param string|null $ref ref
     *
     * @return self
     */
    public function setRef($ref)
    {
        $this->container['ref'] = $ref;

        return $this;
    }

    /**
     * Gets transaction_id
     *
     * @return string|null
     */
    public function getTransactionId()
    {
        return $this->container['transaction_id'];
    }

    /**
     * Sets transaction_id
     *
     * @param string|null $transaction_id transaction_id
     *
     * @return self
     */
    public function setTransactionId($transaction_id)
    {
        $this->container['transaction_id'] = $transaction_id;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return float|null
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param float|null $amount amount
     *
     * @return self
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets pay_status
     *
     * @return int|null
     */
    public function getPayStatus()
    {
        return $this->container['pay_status'];
    }

    /**
     * Sets pay_status
     *
     * @param int|null $pay_status pay_status
     *
     * @return self
     */
    public function setPayStatus($pay_status)
    {
        $this->container['pay_status'] = $pay_status;

        return $this;
    }

    /**
     * Gets remarks
     *
     * @return string|null
     */
    public function getRemarks()
    {
        return $this->container['remarks'];
    }

    /**
     * Sets remarks
     *
     * @param string|null $remarks remarks
     *
     * @return self
     */
    public function setRemarks($remarks)
    {
        $this->container['remarks'] = $remarks;

        return $this;
    }

    /**
     * Gets expense_id
     *
     * @return int|null
     */
    public function getExpenseId()
    {
        return $this->container['expense_id'];
    }

    /**
     * Sets expense_id
     *
     * @param int|null $expense_id expense_id
     *
     * @return self
     */
    public function setExpenseId($expense_id)
    {
        $this->container['expense_id'] = $expense_id;

        return $this;
    }

    /**
     * Gets overtime
     *
     * @return float|null
     */
    public function getOvertime()
    {
        return $this->container['overtime'];
    }

    /**
     * Sets overtime
     *
     * @param float|null $overtime overtime
     *
     * @return self
     */
    public function setOvertime($overtime)
    {
        $this->container['overtime'] = $overtime;

        return $this;
    }

    /**
     * Gets advance
     *
     * @return float|null
     */
    public function getAdvance()
    {
        return $this->container['advance'];
    }

    /**
     * Sets advance
     *
     * @param float|null $advance advance
     *
     * @return self
     */
    public function setAdvance($advance)
    {
        $this->container['advance'] = $advance;

        return $this;
    }

    /**
     * Gets other_addition
     *
     * @return float|null
     */
    public function getOtherAddition()
    {
        return $this->container['other_addition'];
    }

    /**
     * Sets other_addition
     *
     * @param float|null $other_addition other_addition
     *
     * @return self
     */
    public function setOtherAddition($other_addition)
    {
        $this->container['other_addition'] = $other_addition;

        return $this;
    }

    /**
     * Gets other_deduction
     *
     * @return float|null
     */
    public function getOtherDeduction()
    {
        return $this->container['other_deduction'];
    }

    /**
     * Sets other_deduction
     *
     * @param float|null $other_deduction other_deduction
     *
     * @return self
     */
    public function setOtherDeduction($other_deduction)
    {
        $this->container['other_deduction'] = $other_deduction;

        return $this;
    }

    /**
     * Gets provident_fund
     *
     * @return float|null
     */
    public function getProvidentFund()
    {
        return $this->container['provident_fund'];
    }

    /**
     * Sets provident_fund
     *
     * @param float|null $provident_fund provident_fund
     *
     * @return self
     */
    public function setProvidentFund($provident_fund)
    {
        $this->container['provident_fund'] = $provident_fund;

        return $this;
    }

    /**
     * Gets security_money
     *
     * @return float|null
     */
    public function getSecurityMoney()
    {
        return $this->container['security_money'];
    }

    /**
     * Sets security_money
     *
     * @param float|null $security_money security_money
     *
     * @return self
     */
    public function setSecurityMoney($security_money)
    {
        $this->container['security_money'] = $security_money;

        return $this;
    }

    /**
     * Gets value
     *
     * @return float|null
     */
    public function getValue()
    {
        return $this->container['value'];
    }

    /**
     * Sets value
     *
     * @param float|null $value value
     *
     * @return self
     */
    public function setValue($value)
    {
        $this->container['value'] = $value;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string|null
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string|null $note note
     *
     * @return self
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets created_on
     *
     * @return \DateTime|null
     */
    public function getCreatedOn()
    {
        return $this->container['created_on'];
    }

    /**
     * Sets created_on
     *
     * @param \DateTime|null $created_on created_on
     *
     * @return self
     */
    public function setCreatedOn($created_on)
    {
        $this->container['created_on'] = $created_on;

        return $this;
    }

    /**
     * Gets created_by
     *
     * @return int|null
     */
    public function getCreatedBy()
    {
        return $this->container['created_by'];
    }

    /**
     * Sets created_by
     *
     * @param int|null $created_by created_by
     *
     * @return self
     */
    public function setCreatedBy($created_by)
    {
        $this->container['created_by'] = $created_by;

        return $this;
    }

    /**
     * Gets modified_on
     *
     * @return \DateTime|null
     */
    public function getModifiedOn()
    {
        return $this->container['modified_on'];
    }

    /**
     * Sets modified_on
     *
     * @param \DateTime|null $modified_on modified_on
     *
     * @return self
     */
    public function setModifiedOn($modified_on)
    {
        $this->container['modified_on'] = $modified_on;

        return $this;
    }

    /**
     * Gets last_modified_by
     *
     * @return int|null
     */
    public function getLastModifiedBy()
    {
        return $this->container['last_modified_by'];
    }

    /**
     * Sets last_modified_by
     *
     * @param int|null $last_modified_by last_modified_by
     *
     * @return self
     */
    public function setLastModifiedBy($last_modified_by)
    {
        $this->container['last_modified_by'] = $last_modified_by;

        return $this;
    }

    /**
     * Gets employer_social_security
     *
     * @return float|null
     */
    public function getEmployerSocialSecurity()
    {
        return $this->container['employer_social_security'];
    }

    /**
     * Sets employer_social_security
     *
     * @param float|null $employer_social_security employer_social_security
     *
     * @return self
     */
    public function setEmployerSocialSecurity($employer_social_security)
    {
        $this->container['employer_social_security'] = $employer_social_security;

        return $this;
    }

    /**
     * Gets allowance
     *
     * @return float|null
     */
    public function getAllowance()
    {
        return $this->container['allowance'];
    }

    /**
     * Sets allowance
     *
     * @param float|null $allowance allowance
     *
     * @return self
     */
    public function setAllowance($allowance)
    {
        $this->container['allowance'] = $allowance;

        return $this;
    }

    /**
     * Gets cola
     *
     * @return float|null
     */
    public function getCola()
    {
        return $this->container['cola'];
    }

    /**
     * Sets cola
     *
     * @param float|null $cola cola
     *
     * @return self
     */
    public function setCola($cola)
    {
        $this->container['cola'] = $cola;

        return $this;
    }

    /**
     * Gets medical_expense
     *
     * @return float|null
     */
    public function getMedicalExpense()
    {
        return $this->container['medical_expense'];
    }

    /**
     * Sets medical_expense
     *
     * @param float|null $medical_expense medical_expense
     *
     * @return self
     */
    public function setMedicalExpense($medical_expense)
    {
        $this->container['medical_expense'] = $medical_expense;

        return $this;
    }

    /**
     * Gets accommodation
     *
     * @return float|null
     */
    public function getAccommodation()
    {
        return $this->container['accommodation'];
    }

    /**
     * Sets accommodation
     *
     * @param float|null $accommodation accommodation
     *
     * @return self
     */
    public function setAccommodation($accommodation)
    {
        $this->container['accommodation'] = $accommodation;

        return $this;
    }

    /**
     * Gets director_remuneration
     *
     * @return float|null
     */
    public function getDirectorRemuneration()
    {
        return $this->container['director_remuneration'];
    }

    /**
     * Sets director_remuneration
     *
     * @param float|null $director_remuneration director_remuneration
     *
     * @return self
     */
    public function setDirectorRemuneration($director_remuneration)
    {
        $this->container['director_remuneration'] = $director_remuneration;

        return $this;
    }

    /**
     * Gets method_payment
     *
     * @return int|null
     */
    public function getMethodPayment()
    {
        return $this->container['method_payment'];
    }

    /**
     * Sets method_payment
     *
     * @param int|null $method_payment method_payment
     *
     * @return self
     */
    public function setMethodPayment($method_payment)
    {
        $this->container['method_payment'] = $method_payment;

        return $this;
    }

    /**
     * Gets bank_id
     *
     * @return int|null
     */
    public function getBankId()
    {
        return $this->container['bank_id'];
    }

    /**
     * Sets bank_id
     *
     * @param int|null $bank_id bank_id
     *
     * @return self
     */
    public function setBankId($bank_id)
    {
        $this->container['bank_id'] = $bank_id;

        return $this;
    }

    /**
     * Gets account_number
     *
     * @return string|null
     */
    public function getAccountNumber()
    {
        return $this->container['account_number'];
    }

    /**
     * Sets account_number
     *
     * @param string|null $account_number account_number
     *
     * @return self
     */
    public function setAccountNumber($account_number)
    {
        $this->container['account_number'] = $account_number;

        return $this;
    }

    /**
     * Gets account_number_masking
     *
     * @return string|null
     */
    public function getAccountNumberMasking()
    {
        return $this->container['account_number_masking'];
    }

    /**
     * Sets account_number_masking
     *
     * @param string|null $account_number_masking account_number_masking
     *
     * @return self
     */
    public function setAccountNumberMasking($account_number_masking)
    {
        $this->container['account_number_masking'] = $account_number_masking;

        return $this;
    }

    /**
     * Gets employee_title
     *
     * @return string|null
     */
    public function getEmployeeTitle()
    {
        return $this->container['employee_title'];
    }

    /**
     * Sets employee_title
     *
     * @param string|null $employee_title employee_title
     *
     * @return self
     */
    public function setEmployeeTitle($employee_title)
    {
        $this->container['employee_title'] = $employee_title;

        return $this;
    }

    /**
     * Gets employee_code
     *
     * @return string|null
     */
    public function getEmployeeCode()
    {
        return $this->container['employee_code'];
    }

    /**
     * Sets employee_code
     *
     * @param string|null $employee_code employee_code
     *
     * @return self
     */
    public function setEmployeeCode($employee_code)
    {
        $this->container['employee_code'] = $employee_code;

        return $this;
    }

    /**
     * Gets employee_first_name
     *
     * @return string|null
     */
    public function getEmployeeFirstName()
    {
        return $this->container['employee_first_name'];
    }

    /**
     * Sets employee_first_name
     *
     * @param string|null $employee_first_name employee_first_name
     *
     * @return self
     */
    public function setEmployeeFirstName($employee_first_name)
    {
        $this->container['employee_first_name'] = $employee_first_name;

        return $this;
    }

    /**
     * Gets employee_last_name
     *
     * @return string|null
     */
    public function getEmployeeLastName()
    {
        return $this->container['employee_last_name'];
    }

    /**
     * Sets employee_last_name
     *
     * @param string|null $employee_last_name employee_last_name
     *
     * @return self
     */
    public function setEmployeeLastName($employee_last_name)
    {
        $this->container['employee_last_name'] = $employee_last_name;

        return $this;
    }

    /**
     * Gets employee_first_name_foreign
     *
     * @return string|null
     */
    public function getEmployeeFirstNameForeign()
    {
        return $this->container['employee_first_name_foreign'];
    }

    /**
     * Sets employee_first_name_foreign
     *
     * @param string|null $employee_first_name_foreign employee_first_name_foreign
     *
     * @return self
     */
    public function setEmployeeFirstNameForeign($employee_first_name_foreign)
    {
        $this->container['employee_first_name_foreign'] = $employee_first_name_foreign;

        return $this;
    }

    /**
     * Gets employee_last_name_foreign
     *
     * @return string|null
     */
    public function getEmployeeLastNameForeign()
    {
        return $this->container['employee_last_name_foreign'];
    }

    /**
     * Sets employee_last_name_foreign
     *
     * @param string|null $employee_last_name_foreign employee_last_name_foreign
     *
     * @return self
     */
    public function setEmployeeLastNameForeign($employee_last_name_foreign)
    {
        $this->container['employee_last_name_foreign'] = $employee_last_name_foreign;

        return $this;
    }

    /**
     * Gets employee_start_date
     *
     * @return \DateTime|null
     */
    public function getEmployeeStartDate()
    {
        return $this->container['employee_start_date'];
    }

    /**
     * Sets employee_start_date
     *
     * @param \DateTime|null $employee_start_date employee_start_date
     *
     * @return self
     */
    public function setEmployeeStartDate($employee_start_date)
    {
        $this->container['employee_start_date'] = $employee_start_date;

        return $this;
    }

    /**
     * Gets is_social_security_registered
     *
     * @return bool|null
     */
    public function getIsSocialSecurityRegistered()
    {
        return $this->container['is_social_security_registered'];
    }

    /**
     * Sets is_social_security_registered
     *
     * @param bool|null $is_social_security_registered is_social_security_registered
     *
     * @return self
     */
    public function setIsSocialSecurityRegistered($is_social_security_registered)
    {
        $this->container['is_social_security_registered'] = $is_social_security_registered;

        return $this;
    }

    /**
     * Gets bank_branch_code
     *
     * @return string|null
     */
    public function getBankBranchCode()
    {
        return $this->container['bank_branch_code'];
    }

    /**
     * Sets bank_branch_code
     *
     * @param string|null $bank_branch_code bank_branch_code
     *
     * @return self
     */
    public function setBankBranchCode($bank_branch_code)
    {
        $this->container['bank_branch_code'] = $bank_branch_code;

        return $this;
    }

    /**
     * Gets account_type
     *
     * @return OneOfBankAccountType|null
     */
    public function getAccountType()
    {
        return $this->container['account_type'];
    }

    /**
     * Sets account_type
     *
     * @param OneOfBankAccountType|null $account_type account_type
     *
     * @return self
     */
    public function setAccountType($account_type)
    {
        $this->container['account_type'] = $account_type;

        return $this;
    }

    /**
     * Gets reference_id
     *
     * @return string|null
     */
    public function getReferenceId()
    {
        return $this->container['reference_id'];
    }

    /**
     * Sets reference_id
     *
     * @param string|null $reference_id reference_id
     *
     * @return self
     */
    public function setReferenceId($reference_id)
    {
        $this->container['reference_id'] = $reference_id;

        return $this;
    }

    /**
     * Gets is_migrate
     *
     * @return bool|null
     */
    public function getIsMigrate()
    {
        return $this->container['is_migrate'];
    }

    /**
     * Sets is_migrate
     *
     * @param bool|null $is_migrate is_migrate
     *
     * @return self
     */
    public function setIsMigrate($is_migrate)
    {
        $this->container['is_migrate'] = $is_migrate;

        return $this;
    }

    /**
     * Gets employee
     *
     * @return OneOfEmployee|null
     */
    public function getEmployee()
    {
        return $this->container['employee'];
    }

    /**
     * Sets employee
     *
     * @param OneOfEmployee|null $employee employee
     *
     * @return self
     */
    public function setEmployee($employee)
    {
        $this->container['employee'] = $employee;

        return $this;
    }

    /**
     * Gets expense_list
     *
     * @return OneOfExpenseList|null
     */
    public function getExpenseList()
    {
        return $this->container['expense_list'];
    }

    /**
     * Sets expense_list
     *
     * @param OneOfExpenseList|null $expense_list expense_list
     *
     * @return self
     */
    public function setExpenseList($expense_list)
    {
        $this->container['expense_list'] = $expense_list;

        return $this;
    }

    /**
     * Gets payroll
     *
     * @return OneOfPayroll|null
     */
    public function getPayroll()
    {
        return $this->container['payroll'];
    }

    /**
     * Sets payroll
     *
     * @param OneOfPayroll|null $payroll payroll
     *
     * @return self
     */
    public function setPayroll($payroll)
    {
        $this->container['payroll'] = $payroll;

        return $this;
    }

    /**
     * Gets bank
     *
     * @return OneOfBank|null
     */
    public function getBank()
    {
        return $this->container['bank'];
    }

    /**
     * Sets bank
     *
     * @param OneOfBank|null $bank bank
     *
     * @return self
     */
    public function setBank($bank)
    {
        $this->container['bank'] = $bank;

        return $this;
    }

    /**
     * Gets last_modified_by_user
     *
     * @return OneOfUser|null
     */
    public function getLastModifiedByUser()
    {
        return $this->container['last_modified_by_user'];
    }

    /**
     * Sets last_modified_by_user
     *
     * @param OneOfUser|null $last_modified_by_user last_modified_by_user
     *
     * @return self
     */
    public function setLastModifiedByUser($last_modified_by_user)
    {
        $this->container['last_modified_by_user'] = $last_modified_by_user;

        return $this;
    }

    /**
     * Gets rule_compile_status
     *
     * @return \OpenAPI\Client\Model\RuleCompileStatus|null
     */
    public function getRuleCompileStatus()
    {
        return $this->container['rule_compile_status'];
    }

    /**
     * Sets rule_compile_status
     *
     * @param \OpenAPI\Client\Model\RuleCompileStatus|null $rule_compile_status rule_compile_status
     *
     * @return self
     */
    public function setRuleCompileStatus($rule_compile_status)
    {
        $this->container['rule_compile_status'] = $rule_compile_status;

        return $this;
    }

    /**
     * Gets employer_account_branch
     *
     * @return string|null
     */
    public function getEmployerAccountBranch()
    {
        return $this->container['employer_account_branch'];
    }

    /**
     * Sets employer_account_branch
     *
     * @param string|null $employer_account_branch employer_account_branch
     *
     * @return self
     */
    public function setEmployerAccountBranch($employer_account_branch)
    {
        $this->container['employer_account_branch'] = $employer_account_branch;

        return $this;
    }

    /**
     * Gets employer_account_number
     *
     * @return string|null
     */
    public function getEmployerAccountNumber()
    {
        return $this->container['employer_account_number'];
    }

    /**
     * Sets employer_account_number
     *
     * @param string|null $employer_account_number employer_account_number
     *
     * @return self
     */
    public function setEmployerAccountNumber($employer_account_number)
    {
        $this->container['employer_account_number'] = $employer_account_number;

        return $this;
    }

    /**
     * Gets bank_account_id
     *
     * @return int|null
     */
    public function getBankAccountId()
    {
        return $this->container['bank_account_id'];
    }

    /**
     * Sets bank_account_id
     *
     * @param int|null $bank_account_id bank_account_id
     *
     * @return self
     */
    public function setBankAccountId($bank_account_id)
    {
        $this->container['bank_account_id'] = $bank_account_id;

        return $this;
    }

    /**
     * Gets payment_remarks
     *
     * @return string|null
     */
    public function getPaymentRemarks()
    {
        return $this->container['payment_remarks'];
    }

    /**
     * Sets payment_remarks
     *
     * @param string|null $payment_remarks payment_remarks
     *
     * @return self
     */
    public function setPaymentRemarks($payment_remarks)
    {
        $this->container['payment_remarks'] = $payment_remarks;

        return $this;
    }

    /**
     * Gets payroll_payment_id
     *
     * @return int|null
     */
    public function getPayrollPaymentId()
    {
        return $this->container['payroll_payment_id'];
    }

    /**
     * Sets payroll_payment_id
     *
     * @param int|null $payroll_payment_id payroll_payment_id
     *
     * @return self
     */
    public function setPayrollPaymentId($payroll_payment_id)
    {
        $this->container['payroll_payment_id'] = $payroll_payment_id;

        return $this;
    }

    /**
     * Gets kc_processing_status
     *
     * @return int|null
     */
    public function getKcProcessingStatus()
    {
        return $this->container['kc_processing_status'];
    }

    /**
     * Sets kc_processing_status
     *
     * @param int|null $kc_processing_status kc_processing_status
     *
     * @return self
     */
    public function setKcProcessingStatus($kc_processing_status)
    {
        $this->container['kc_processing_status'] = $kc_processing_status;

        return $this;
    }

    /**
     * Gets department_id
     *
     * @return int|null
     */
    public function getDepartmentId()
    {
        return $this->container['department_id'];
    }

    /**
     * Sets department_id
     *
     * @param int|null $department_id department_id
     *
     * @return self
     */
    public function setDepartmentId($department_id)
    {
        $this->container['department_id'] = $department_id;

        return $this;
    }

    /**
     * Gets department_name
     *
     * @return string|null
     */
    public function getDepartmentName()
    {
        return $this->container['department_name'];
    }

    /**
     * Sets department_name
     *
     * @param string|null $department_name department_name
     *
     * @return self
     */
    public function setDepartmentName($department_name)
    {
        $this->container['department_name'] = $department_name;

        return $this;
    }

    /**
     * Gets department_code
     *
     * @return string|null
     */
    public function getDepartmentCode()
    {
        return $this->container['department_code'];
    }

    /**
     * Sets department_code
     *
     * @param string|null $department_code department_code
     *
     * @return self
     */
    public function setDepartmentCode($department_code)
    {
        $this->container['department_code'] = $department_code;

        return $this;
    }

    /**
     * Gets work_days
     *
     * @return float|null
     */
    public function getWorkDays()
    {
        return $this->container['work_days'];
    }

    /**
     * Sets work_days
     *
     * @param float|null $work_days work_days
     *
     * @return self
     */
    public function setWorkDays($work_days)
    {
        $this->container['work_days'] = $work_days;

        return $this;
    }

    /**
     * Gets wage
     *
     * @return float|null
     */
    public function getWage()
    {
        return $this->container['wage'];
    }

    /**
     * Sets wage
     *
     * @param float|null $wage wage
     *
     * @return self
     */
    public function setWage($wage)
    {
        $this->container['wage'] = $wage;

        return $this;
    }

    /**
     * Gets is_social_security_auto_cal
     *
     * @return bool|null
     */
    public function getIsSocialSecurityAutoCal()
    {
        return $this->container['is_social_security_auto_cal'];
    }

    /**
     * Sets is_social_security_auto_cal
     *
     * @param bool|null $is_social_security_auto_cal is_social_security_auto_cal
     *
     * @return self
     */
    public function setIsSocialSecurityAutoCal($is_social_security_auto_cal)
    {
        $this->container['is_social_security_auto_cal'] = $is_social_security_auto_cal;

        return $this;
    }

    /**
     * Gets social_security_percent
     *
     * @return float|null
     */
    public function getSocialSecurityPercent()
    {
        return $this->container['social_security_percent'];
    }

    /**
     * Sets social_security_percent
     *
     * @param float|null $social_security_percent social_security_percent
     *
     * @return self
     */
    public function setSocialSecurityPercent($social_security_percent)
    {
        $this->container['social_security_percent'] = $social_security_percent;

        return $this;
    }

    /**
     * Gets send_email_status
     *
     * @return OneOfSendEmailStatus|null
     */
    public function getSendEmailStatus()
    {
        return $this->container['send_email_status'];
    }

    /**
     * Sets send_email_status
     *
     * @param OneOfSendEmailStatus|null $send_email_status send_email_status
     *
     * @return self
     */
    public function setSendEmailStatus($send_email_status)
    {
        $this->container['send_email_status'] = $send_email_status;

        return $this;
    }

    /**
     * Gets student_loan
     *
     * @return float|null
     */
    public function getStudentLoan()
    {
        return $this->container['student_loan'];
    }

    /**
     * Sets student_loan
     *
     * @param float|null $student_loan student_loan
     *
     * @return self
     */
    public function setStudentLoan($student_loan)
    {
        $this->container['student_loan'] = $student_loan;

        return $this;
    }

    /**
     * Gets conditions_withholding_tax
     *
     * @return OneOfConditionsOfWithholdingTax|null
     */
    public function getConditionsWithholdingTax()
    {
        return $this->container['conditions_withholding_tax'];
    }

    /**
     * Sets conditions_withholding_tax
     *
     * @param OneOfConditionsOfWithholdingTax|null $conditions_withholding_tax conditions_withholding_tax
     *
     * @return self
     */
    public function setConditionsWithholdingTax($conditions_withholding_tax)
    {
        $this->container['conditions_withholding_tax'] = $conditions_withholding_tax;

        return $this;
    }

    /**
     * Gets overtime_pnd
     *
     * @return int|null
     */
    public function getOvertimePnd()
    {
        return $this->container['overtime_pnd'];
    }

    /**
     * Sets overtime_pnd
     *
     * @param int|null $overtime_pnd overtime_pnd
     *
     * @return self
     */
    public function setOvertimePnd($overtime_pnd)
    {
        $this->container['overtime_pnd'] = $overtime_pnd;

        return $this;
    }

    /**
     * Gets commission_pnd
     *
     * @return int|null
     */
    public function getCommissionPnd()
    {
        return $this->container['commission_pnd'];
    }

    /**
     * Sets commission_pnd
     *
     * @param int|null $commission_pnd commission_pnd
     *
     * @return self
     */
    public function setCommissionPnd($commission_pnd)
    {
        $this->container['commission_pnd'] = $commission_pnd;

        return $this;
    }

    /**
     * Gets bonus_pnd
     *
     * @return int|null
     */
    public function getBonusPnd()
    {
        return $this->container['bonus_pnd'];
    }

    /**
     * Sets bonus_pnd
     *
     * @param int|null $bonus_pnd bonus_pnd
     *
     * @return self
     */
    public function setBonusPnd($bonus_pnd)
    {
        $this->container['bonus_pnd'] = $bonus_pnd;

        return $this;
    }

    /**
     * Gets allowance_pnd
     *
     * @return int|null
     */
    public function getAllowancePnd()
    {
        return $this->container['allowance_pnd'];
    }

    /**
     * Sets allowance_pnd
     *
     * @param int|null $allowance_pnd allowance_pnd
     *
     * @return self
     */
    public function setAllowancePnd($allowance_pnd)
    {
        $this->container['allowance_pnd'] = $allowance_pnd;

        return $this;
    }

    /**
     * Gets cola_pnd
     *
     * @return int|null
     */
    public function getColaPnd()
    {
        return $this->container['cola_pnd'];
    }

    /**
     * Sets cola_pnd
     *
     * @param int|null $cola_pnd cola_pnd
     *
     * @return self
     */
    public function setColaPnd($cola_pnd)
    {
        $this->container['cola_pnd'] = $cola_pnd;

        return $this;
    }

    /**
     * Gets medical_expense_pnd
     *
     * @return int|null
     */
    public function getMedicalExpensePnd()
    {
        return $this->container['medical_expense_pnd'];
    }

    /**
     * Sets medical_expense_pnd
     *
     * @param int|null $medical_expense_pnd medical_expense_pnd
     *
     * @return self
     */
    public function setMedicalExpensePnd($medical_expense_pnd)
    {
        $this->container['medical_expense_pnd'] = $medical_expense_pnd;

        return $this;
    }

    /**
     * Gets accommodation_pnd
     *
     * @return int|null
     */
    public function getAccommodationPnd()
    {
        return $this->container['accommodation_pnd'];
    }

    /**
     * Sets accommodation_pnd
     *
     * @param int|null $accommodation_pnd accommodation_pnd
     *
     * @return self
     */
    public function setAccommodationPnd($accommodation_pnd)
    {
        $this->container['accommodation_pnd'] = $accommodation_pnd;

        return $this;
    }

    /**
     * Gets director_remuneration_pnd
     *
     * @return int|null
     */
    public function getDirectorRemunerationPnd()
    {
        return $this->container['director_remuneration_pnd'];
    }

    /**
     * Sets director_remuneration_pnd
     *
     * @param int|null $director_remuneration_pnd director_remuneration_pnd
     *
     * @return self
     */
    public function setDirectorRemunerationPnd($director_remuneration_pnd)
    {
        $this->container['director_remuneration_pnd'] = $director_remuneration_pnd;

        return $this;
    }

    /**
     * Gets other_addition_pnd
     *
     * @return int|null
     */
    public function getOtherAdditionPnd()
    {
        return $this->container['other_addition_pnd'];
    }

    /**
     * Sets other_addition_pnd
     *
     * @param int|null $other_addition_pnd other_addition_pnd
     *
     * @return self
     */
    public function setOtherAdditionPnd($other_addition_pnd)
    {
        $this->container['other_addition_pnd'] = $other_addition_pnd;

        return $this;
    }

    /**
     * Gets withholding_tax401
     *
     * @return float|null
     */
    public function getWithholdingTax401()
    {
        return $this->container['withholding_tax401'];
    }

    /**
     * Sets withholding_tax401
     *
     * @param float|null $withholding_tax401 withholding_tax401
     *
     * @return self
     */
    public function setWithholdingTax401($withholding_tax401)
    {
        $this->container['withholding_tax401'] = $withholding_tax401;

        return $this;
    }

    /**
     * Gets withholding_tax402
     *
     * @return float|null
     */
    public function getWithholdingTax402()
    {
        return $this->container['withholding_tax402'];
    }

    /**
     * Sets withholding_tax402
     *
     * @param float|null $withholding_tax402 withholding_tax402
     *
     * @return self
     */
    public function setWithholdingTax402($withholding_tax402)
    {
        $this->container['withholding_tax402'] = $withholding_tax402;

        return $this;
    }

    /**
     * Gets status_int
     *
     * @return int|null
     */
    public function getStatusInt()
    {
        return $this->container['status_int'];
    }

    /**
     * Sets status_int
     *
     * @param int|null $status_int status_int
     *
     * @return self
     */
    public function setStatusInt($status_int)
    {
        $this->container['status_int'] = $status_int;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


