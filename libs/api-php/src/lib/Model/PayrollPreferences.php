<?php
/**
 * PayrollPreferences
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * FlowAccount Open API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * PayrollPreferences Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class PayrollPreferences implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'PayrollPreferences';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'company_id' => 'int',
        'is_social_security_registered' => 'bool',
        'employer_account_number' => 'string',
        'employer_account_branch' => 'string',
        'k_corporate_client_code' => 'string',
        'k_corporate_account_number' => 'string',
        'payroll_bank_account_id' => 'int',
        'k_connect_product_code' => '\OpenAPI\Client\Model\KConnectProductCode',
        'overtime_pnd' => 'int',
        'commission_pnd' => 'int',
        'bonus_pnd' => 'int',
        'allowance_pnd' => 'int',
        'cola_pnd' => 'int',
        'medical_expense_pnd' => 'int',
        'accommodation_pnd' => 'int',
        'director_remuneration_pnd' => 'int',
        'other_addition_pnd' => 'int',
        'access_k_connect' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'company_id' => 'int64',
        'is_social_security_registered' => null,
        'employer_account_number' => null,
        'employer_account_branch' => null,
        'k_corporate_client_code' => null,
        'k_corporate_account_number' => null,
        'payroll_bank_account_id' => 'int64',
        'k_connect_product_code' => null,
        'overtime_pnd' => 'int32',
        'commission_pnd' => 'int32',
        'bonus_pnd' => 'int32',
        'allowance_pnd' => 'int32',
        'cola_pnd' => 'int32',
        'medical_expense_pnd' => 'int32',
        'accommodation_pnd' => 'int32',
        'director_remuneration_pnd' => 'int32',
        'other_addition_pnd' => 'int32',
        'access_k_connect' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'company_id' => 'companyId',
        'is_social_security_registered' => 'isSocialSecurityRegistered',
        'employer_account_number' => 'employerAccountNumber',
        'employer_account_branch' => 'employerAccountBranch',
        'k_corporate_client_code' => 'kCorporateClientCode',
        'k_corporate_account_number' => 'kCorporateAccountNumber',
        'payroll_bank_account_id' => 'payrollBankAccountId',
        'k_connect_product_code' => 'kConnect_ProductCode',
        'overtime_pnd' => 'overtimePND',
        'commission_pnd' => 'commissionPND',
        'bonus_pnd' => 'bonusPND',
        'allowance_pnd' => 'allowancePND',
        'cola_pnd' => 'colaPND',
        'medical_expense_pnd' => 'medicalExpensePND',
        'accommodation_pnd' => 'accommodationPND',
        'director_remuneration_pnd' => 'directorRemunerationPND',
        'other_addition_pnd' => 'otherAdditionPND',
        'access_k_connect' => 'accessKConnect'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'company_id' => 'setCompanyId',
        'is_social_security_registered' => 'setIsSocialSecurityRegistered',
        'employer_account_number' => 'setEmployerAccountNumber',
        'employer_account_branch' => 'setEmployerAccountBranch',
        'k_corporate_client_code' => 'setKCorporateClientCode',
        'k_corporate_account_number' => 'setKCorporateAccountNumber',
        'payroll_bank_account_id' => 'setPayrollBankAccountId',
        'k_connect_product_code' => 'setKConnectProductCode',
        'overtime_pnd' => 'setOvertimePnd',
        'commission_pnd' => 'setCommissionPnd',
        'bonus_pnd' => 'setBonusPnd',
        'allowance_pnd' => 'setAllowancePnd',
        'cola_pnd' => 'setColaPnd',
        'medical_expense_pnd' => 'setMedicalExpensePnd',
        'accommodation_pnd' => 'setAccommodationPnd',
        'director_remuneration_pnd' => 'setDirectorRemunerationPnd',
        'other_addition_pnd' => 'setOtherAdditionPnd',
        'access_k_connect' => 'setAccessKConnect'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'company_id' => 'getCompanyId',
        'is_social_security_registered' => 'getIsSocialSecurityRegistered',
        'employer_account_number' => 'getEmployerAccountNumber',
        'employer_account_branch' => 'getEmployerAccountBranch',
        'k_corporate_client_code' => 'getKCorporateClientCode',
        'k_corporate_account_number' => 'getKCorporateAccountNumber',
        'payroll_bank_account_id' => 'getPayrollBankAccountId',
        'k_connect_product_code' => 'getKConnectProductCode',
        'overtime_pnd' => 'getOvertimePnd',
        'commission_pnd' => 'getCommissionPnd',
        'bonus_pnd' => 'getBonusPnd',
        'allowance_pnd' => 'getAllowancePnd',
        'cola_pnd' => 'getColaPnd',
        'medical_expense_pnd' => 'getMedicalExpensePnd',
        'accommodation_pnd' => 'getAccommodationPnd',
        'director_remuneration_pnd' => 'getDirectorRemunerationPnd',
        'other_addition_pnd' => 'getOtherAdditionPnd',
        'access_k_connect' => 'getAccessKConnect'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['company_id'] = $data['company_id'] ?? null;
        $this->container['is_social_security_registered'] = $data['is_social_security_registered'] ?? null;
        $this->container['employer_account_number'] = $data['employer_account_number'] ?? null;
        $this->container['employer_account_branch'] = $data['employer_account_branch'] ?? null;
        $this->container['k_corporate_client_code'] = $data['k_corporate_client_code'] ?? null;
        $this->container['k_corporate_account_number'] = $data['k_corporate_account_number'] ?? null;
        $this->container['payroll_bank_account_id'] = $data['payroll_bank_account_id'] ?? null;
        $this->container['k_connect_product_code'] = $data['k_connect_product_code'] ?? null;
        $this->container['overtime_pnd'] = $data['overtime_pnd'] ?? null;
        $this->container['commission_pnd'] = $data['commission_pnd'] ?? null;
        $this->container['bonus_pnd'] = $data['bonus_pnd'] ?? null;
        $this->container['allowance_pnd'] = $data['allowance_pnd'] ?? null;
        $this->container['cola_pnd'] = $data['cola_pnd'] ?? null;
        $this->container['medical_expense_pnd'] = $data['medical_expense_pnd'] ?? null;
        $this->container['accommodation_pnd'] = $data['accommodation_pnd'] ?? null;
        $this->container['director_remuneration_pnd'] = $data['director_remuneration_pnd'] ?? null;
        $this->container['other_addition_pnd'] = $data['other_addition_pnd'] ?? null;
        $this->container['access_k_connect'] = $data['access_k_connect'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets company_id
     *
     * @return int|null
     */
    public function getCompanyId()
    {
        return $this->container['company_id'];
    }

    /**
     * Sets company_id
     *
     * @param int|null $company_id company_id
     *
     * @return self
     */
    public function setCompanyId($company_id)
    {
        $this->container['company_id'] = $company_id;

        return $this;
    }

    /**
     * Gets is_social_security_registered
     *
     * @return bool|null
     */
    public function getIsSocialSecurityRegistered()
    {
        return $this->container['is_social_security_registered'];
    }

    /**
     * Sets is_social_security_registered
     *
     * @param bool|null $is_social_security_registered is_social_security_registered
     *
     * @return self
     */
    public function setIsSocialSecurityRegistered($is_social_security_registered)
    {
        $this->container['is_social_security_registered'] = $is_social_security_registered;

        return $this;
    }

    /**
     * Gets employer_account_number
     *
     * @return string|null
     */
    public function getEmployerAccountNumber()
    {
        return $this->container['employer_account_number'];
    }

    /**
     * Sets employer_account_number
     *
     * @param string|null $employer_account_number employer_account_number
     *
     * @return self
     */
    public function setEmployerAccountNumber($employer_account_number)
    {
        $this->container['employer_account_number'] = $employer_account_number;

        return $this;
    }

    /**
     * Gets employer_account_branch
     *
     * @return string|null
     */
    public function getEmployerAccountBranch()
    {
        return $this->container['employer_account_branch'];
    }

    /**
     * Sets employer_account_branch
     *
     * @param string|null $employer_account_branch employer_account_branch
     *
     * @return self
     */
    public function setEmployerAccountBranch($employer_account_branch)
    {
        $this->container['employer_account_branch'] = $employer_account_branch;

        return $this;
    }

    /**
     * Gets k_corporate_client_code
     *
     * @return string|null
     */
    public function getKCorporateClientCode()
    {
        return $this->container['k_corporate_client_code'];
    }

    /**
     * Sets k_corporate_client_code
     *
     * @param string|null $k_corporate_client_code k_corporate_client_code
     *
     * @return self
     */
    public function setKCorporateClientCode($k_corporate_client_code)
    {
        $this->container['k_corporate_client_code'] = $k_corporate_client_code;

        return $this;
    }

    /**
     * Gets k_corporate_account_number
     *
     * @return string|null
     */
    public function getKCorporateAccountNumber()
    {
        return $this->container['k_corporate_account_number'];
    }

    /**
     * Sets k_corporate_account_number
     *
     * @param string|null $k_corporate_account_number k_corporate_account_number
     *
     * @return self
     */
    public function setKCorporateAccountNumber($k_corporate_account_number)
    {
        $this->container['k_corporate_account_number'] = $k_corporate_account_number;

        return $this;
    }

    /**
     * Gets payroll_bank_account_id
     *
     * @return int|null
     */
    public function getPayrollBankAccountId()
    {
        return $this->container['payroll_bank_account_id'];
    }

    /**
     * Sets payroll_bank_account_id
     *
     * @param int|null $payroll_bank_account_id payroll_bank_account_id
     *
     * @return self
     */
    public function setPayrollBankAccountId($payroll_bank_account_id)
    {
        $this->container['payroll_bank_account_id'] = $payroll_bank_account_id;

        return $this;
    }

    /**
     * Gets k_connect_product_code
     *
     * @return \OpenAPI\Client\Model\KConnectProductCode|null
     */
    public function getKConnectProductCode()
    {
        return $this->container['k_connect_product_code'];
    }

    /**
     * Sets k_connect_product_code
     *
     * @param \OpenAPI\Client\Model\KConnectProductCode|null $k_connect_product_code k_connect_product_code
     *
     * @return self
     */
    public function setKConnectProductCode($k_connect_product_code)
    {
        $this->container['k_connect_product_code'] = $k_connect_product_code;

        return $this;
    }

    /**
     * Gets overtime_pnd
     *
     * @return int|null
     */
    public function getOvertimePnd()
    {
        return $this->container['overtime_pnd'];
    }

    /**
     * Sets overtime_pnd
     *
     * @param int|null $overtime_pnd overtime_pnd
     *
     * @return self
     */
    public function setOvertimePnd($overtime_pnd)
    {
        $this->container['overtime_pnd'] = $overtime_pnd;

        return $this;
    }

    /**
     * Gets commission_pnd
     *
     * @return int|null
     */
    public function getCommissionPnd()
    {
        return $this->container['commission_pnd'];
    }

    /**
     * Sets commission_pnd
     *
     * @param int|null $commission_pnd commission_pnd
     *
     * @return self
     */
    public function setCommissionPnd($commission_pnd)
    {
        $this->container['commission_pnd'] = $commission_pnd;

        return $this;
    }

    /**
     * Gets bonus_pnd
     *
     * @return int|null
     */
    public function getBonusPnd()
    {
        return $this->container['bonus_pnd'];
    }

    /**
     * Sets bonus_pnd
     *
     * @param int|null $bonus_pnd bonus_pnd
     *
     * @return self
     */
    public function setBonusPnd($bonus_pnd)
    {
        $this->container['bonus_pnd'] = $bonus_pnd;

        return $this;
    }

    /**
     * Gets allowance_pnd
     *
     * @return int|null
     */
    public function getAllowancePnd()
    {
        return $this->container['allowance_pnd'];
    }

    /**
     * Sets allowance_pnd
     *
     * @param int|null $allowance_pnd allowance_pnd
     *
     * @return self
     */
    public function setAllowancePnd($allowance_pnd)
    {
        $this->container['allowance_pnd'] = $allowance_pnd;

        return $this;
    }

    /**
     * Gets cola_pnd
     *
     * @return int|null
     */
    public function getColaPnd()
    {
        return $this->container['cola_pnd'];
    }

    /**
     * Sets cola_pnd
     *
     * @param int|null $cola_pnd cola_pnd
     *
     * @return self
     */
    public function setColaPnd($cola_pnd)
    {
        $this->container['cola_pnd'] = $cola_pnd;

        return $this;
    }

    /**
     * Gets medical_expense_pnd
     *
     * @return int|null
     */
    public function getMedicalExpensePnd()
    {
        return $this->container['medical_expense_pnd'];
    }

    /**
     * Sets medical_expense_pnd
     *
     * @param int|null $medical_expense_pnd medical_expense_pnd
     *
     * @return self
     */
    public function setMedicalExpensePnd($medical_expense_pnd)
    {
        $this->container['medical_expense_pnd'] = $medical_expense_pnd;

        return $this;
    }

    /**
     * Gets accommodation_pnd
     *
     * @return int|null
     */
    public function getAccommodationPnd()
    {
        return $this->container['accommodation_pnd'];
    }

    /**
     * Sets accommodation_pnd
     *
     * @param int|null $accommodation_pnd accommodation_pnd
     *
     * @return self
     */
    public function setAccommodationPnd($accommodation_pnd)
    {
        $this->container['accommodation_pnd'] = $accommodation_pnd;

        return $this;
    }

    /**
     * Gets director_remuneration_pnd
     *
     * @return int|null
     */
    public function getDirectorRemunerationPnd()
    {
        return $this->container['director_remuneration_pnd'];
    }

    /**
     * Sets director_remuneration_pnd
     *
     * @param int|null $director_remuneration_pnd director_remuneration_pnd
     *
     * @return self
     */
    public function setDirectorRemunerationPnd($director_remuneration_pnd)
    {
        $this->container['director_remuneration_pnd'] = $director_remuneration_pnd;

        return $this;
    }

    /**
     * Gets other_addition_pnd
     *
     * @return int|null
     */
    public function getOtherAdditionPnd()
    {
        return $this->container['other_addition_pnd'];
    }

    /**
     * Sets other_addition_pnd
     *
     * @param int|null $other_addition_pnd other_addition_pnd
     *
     * @return self
     */
    public function setOtherAdditionPnd($other_addition_pnd)
    {
        $this->container['other_addition_pnd'] = $other_addition_pnd;

        return $this;
    }

    /**
     * Gets access_k_connect
     *
     * @return bool|null
     */
    public function getAccessKConnect()
    {
        return $this->container['access_k_connect'];
    }

    /**
     * Sets access_k_connect
     *
     * @param bool|null $access_k_connect access_k_connect
     *
     * @return self
     */
    public function setAccessKConnect($access_k_connect)
    {
        $this->container['access_k_connect'] = $access_k_connect;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


