<?php
/**
 * CompanyPreferences
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * FlowAccount Open API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CompanyPreferences Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class CompanyPreferences implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CompanyPreferences';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'company_id' => 'int',
        'show_with_holding' => 'bool',
        'invoice_prefix' => 'string',
        'quotation_prefix' => 'string',
        'billing_note_prefix' => 'string',
        'receipt_prefix' => 'string',
        'purchase_order_prefix' => 'string',
        'cash_invoice_prefix' => 'string',
        'receivable_invoice_prefix' => 'string',
        'cash_invoice_starting_number' => 'int',
        'receipt_starting_number' => 'int',
        'quotation_starting_number' => 'int',
        'billing_note_starting_number' => 'int',
        'purchase_order_starting_number' => 'int',
        'purchase_order_title_en' => 'string',
        'quotation_title_en' => 'string',
        'billing_note_title_en' => 'string',
        'invoice_title_en' => 'string',
        'receipt_title_en' => 'string',
        'payment_slip_title_en' => 'string',
        'purchase_order_title_th' => 'string',
        'quotation_title_th' => 'string',
        'billing_note_title_th' => 'string',
        'invoice_title_th' => 'string',
        'receipt_title_th' => 'string',
        'payment_slip_title_th' => 'string',
        'business_type' => '\OpenAPI\Client\Model\BusinessType',
        'terms_agreement' => 'string',
        'default_remarks' => 'string',
        'invoice_starting_number' => 'int',
        'cash_invoice_title_en' => 'string',
        'cash_invoice_title_th' => 'string',
        'receivable_invoice_title_th' => 'string',
        'receivable_invoice_title_en' => 'string',
        'running_number_type' => '\OpenAPI\Client\Model\RunningNumberType',
        'purchase_order_starting_year' => 'int',
        'quotation_starting_year' => 'int',
        'billing_note_starting_year' => 'int',
        'invoice_starting_year' => 'int',
        'cash_invoice_starting_year' => 'int',
        'receipt_starting_year' => 'int',
        'purchase_order_starting_month' => 'int',
        'quotation_starting_month' => 'int',
        'billing_note_starting_month' => 'int',
        'invoice_starting_month' => 'int',
        'cash_invoice_starting_month' => 'int',
        'receipt_starting_month' => 'int',
        'settings_initiated' => 'bool',
        'running_number_settings_modified_on' => '\DateTime',
        'with_holding_tax_prefix' => 'string',
        'with_holding_tax_starting_number' => 'int',
        'with_holding_tax_starting_month' => 'int',
        'with_holding_tax_starting_year' => 'int',
        'document_templates' => '\OpenAPI\Client\Model\DocumentTemplates',
        'print_color' => 'bool',
        'template_font' => '\OpenAPI\Client\Model\TemplateFont',
        'print_one_invoice' => 'bool',
        'remarks' => 'string',
        'email_message_template' => 'string',
        'purchase_prefix' => 'string',
        'purchase_starting_number' => 'int',
        'purchase_title_en' => 'string',
        'purchase_title_th' => 'string',
        'purchase_starting_year' => 'int',
        'purchase_starting_month' => 'int',
        'adjust_inventory_prefix' => 'string',
        'adjust_inventory_starting_number' => 'int',
        'adjust_inventory_starting_month' => 'int',
        'adjust_inventory_starting_year' => 'int',
        'expense_prefix' => 'string',
        'expense_starting_number' => 'int',
        'expense_starting_month' => 'int',
        'expense_starting_year' => 'int',
        'payment_slip_prefix' => 'string',
        'payment_slip_starting_number' => 'int',
        'payment_slip_starting_year' => 'int',
        'payment_slip_starting_month' => 'int',
        'cash_invoice_running_number_modified_on' => '\DateTime',
        'purchase_order_running_number_modified_on' => '\DateTime',
        'quotation_running_number_modified_on' => '\DateTime',
        'billing_note_running_number_modified_on' => '\DateTime',
        'invoice_running_number_modified_on' => '\DateTime',
        'purchase_running_number_modified_on' => '\DateTime',
        'receivable_invoice_running_number_modified_on' => '\DateTime',
        'payment_slip_running_number_modified_on' => '\DateTime',
        'rubber_stamp_url' => 'string',
        'credit_note_prefix' => 'string',
        'credit_note_starting_number' => 'int',
        'credit_note_starting_month' => 'int',
        'credit_note_starting_year' => 'int',
        'credit_note_running_number_modified_on' => '\DateTime',
        'credit_note_title_en' => 'string',
        'credit_note_title_th' => 'string',
        'debit_note_prefix' => 'string',
        'debit_note_starting_number' => 'int',
        'debit_note_starting_month' => 'int',
        'debit_note_starting_year' => 'int',
        'debit_note_running_number_modified_on' => '\DateTime',
        'debit_note_title_en' => 'string',
        'debit_note_title_th' => 'string',
        'receipt_running_number_modified_on' => '\DateTime',
        'receivable_invoice_starting_number' => 'int',
        'receivable_invoice_starting_month' => 'int',
        'receivable_invoice_starting_year' => 'int',
        'use_partial_receipt' => 'bool',
        'use_cash_invoice' => 'bool',
        'use_short_cash_invoice' => 'bool',
        'general_ledger_running_number_type' => '\OpenAPI\Client\Model\RunningNumberType',
        'journal_voucher_prefix' => 'string',
        'purchase_voucher_prefix' => 'string',
        'purchase_voucher_running_number_modified_on' => '\DateTime',
        'sales_voucher_prefix' => 'string',
        'sales_voucher_running_number_modified_on' => '\DateTime',
        'payment_voucher_prefix' => 'string',
        'payment_voucher_running_number_modified_on' => '\DateTime',
        'received_voucher_prefix' => 'string',
        'received_voucher_running_number_modified_on' => '\DateTime',
        'conversion_balance_prefix' => 'string',
        'conversion_balance_running_number_modified_on' => '\DateTime',
        'e_tax_email' => 'string',
        'short_cash_invoice_templates' => '\OpenAPI\Client\Model\DocumentTemplates',
        'use_billing_note_accounting_rule' => 'bool',
        'billing_note_accounting_rule_modified_on' => '\DateTime',
        'template_font_size' => 'float',
        'use_multi_currency' => 'bool',
        'expense_title_th' => 'string',
        'expense_title_en' => 'string',
        'with_holding_tax_title_th' => 'string',
        'with_holding_tax_title_en' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'company_id' => 'int64',
        'show_with_holding' => null,
        'invoice_prefix' => null,
        'quotation_prefix' => null,
        'billing_note_prefix' => null,
        'receipt_prefix' => null,
        'purchase_order_prefix' => null,
        'cash_invoice_prefix' => null,
        'receivable_invoice_prefix' => null,
        'cash_invoice_starting_number' => 'int64',
        'receipt_starting_number' => 'int64',
        'quotation_starting_number' => 'int64',
        'billing_note_starting_number' => 'int64',
        'purchase_order_starting_number' => 'int64',
        'purchase_order_title_en' => null,
        'quotation_title_en' => null,
        'billing_note_title_en' => null,
        'invoice_title_en' => null,
        'receipt_title_en' => null,
        'payment_slip_title_en' => null,
        'purchase_order_title_th' => null,
        'quotation_title_th' => null,
        'billing_note_title_th' => null,
        'invoice_title_th' => null,
        'receipt_title_th' => null,
        'payment_slip_title_th' => null,
        'business_type' => null,
        'terms_agreement' => null,
        'default_remarks' => null,
        'invoice_starting_number' => 'int64',
        'cash_invoice_title_en' => null,
        'cash_invoice_title_th' => null,
        'receivable_invoice_title_th' => null,
        'receivable_invoice_title_en' => null,
        'running_number_type' => null,
        'purchase_order_starting_year' => 'int32',
        'quotation_starting_year' => 'int32',
        'billing_note_starting_year' => 'int32',
        'invoice_starting_year' => 'int32',
        'cash_invoice_starting_year' => 'int32',
        'receipt_starting_year' => 'int32',
        'purchase_order_starting_month' => 'int32',
        'quotation_starting_month' => 'int32',
        'billing_note_starting_month' => 'int32',
        'invoice_starting_month' => 'int32',
        'cash_invoice_starting_month' => 'int32',
        'receipt_starting_month' => 'int32',
        'settings_initiated' => null,
        'running_number_settings_modified_on' => 'date-time',
        'with_holding_tax_prefix' => null,
        'with_holding_tax_starting_number' => 'int32',
        'with_holding_tax_starting_month' => 'int32',
        'with_holding_tax_starting_year' => 'int32',
        'document_templates' => null,
        'print_color' => null,
        'template_font' => null,
        'print_one_invoice' => null,
        'remarks' => null,
        'email_message_template' => null,
        'purchase_prefix' => null,
        'purchase_starting_number' => 'int64',
        'purchase_title_en' => null,
        'purchase_title_th' => null,
        'purchase_starting_year' => 'int32',
        'purchase_starting_month' => 'int32',
        'adjust_inventory_prefix' => null,
        'adjust_inventory_starting_number' => 'int32',
        'adjust_inventory_starting_month' => 'int32',
        'adjust_inventory_starting_year' => 'int32',
        'expense_prefix' => null,
        'expense_starting_number' => 'int32',
        'expense_starting_month' => 'int32',
        'expense_starting_year' => 'int32',
        'payment_slip_prefix' => null,
        'payment_slip_starting_number' => 'int32',
        'payment_slip_starting_year' => 'int32',
        'payment_slip_starting_month' => 'int32',
        'cash_invoice_running_number_modified_on' => 'date-time',
        'purchase_order_running_number_modified_on' => 'date-time',
        'quotation_running_number_modified_on' => 'date-time',
        'billing_note_running_number_modified_on' => 'date-time',
        'invoice_running_number_modified_on' => 'date-time',
        'purchase_running_number_modified_on' => 'date-time',
        'receivable_invoice_running_number_modified_on' => 'date-time',
        'payment_slip_running_number_modified_on' => 'date-time',
        'rubber_stamp_url' => null,
        'credit_note_prefix' => null,
        'credit_note_starting_number' => 'int32',
        'credit_note_starting_month' => 'int32',
        'credit_note_starting_year' => 'int32',
        'credit_note_running_number_modified_on' => 'date-time',
        'credit_note_title_en' => null,
        'credit_note_title_th' => null,
        'debit_note_prefix' => null,
        'debit_note_starting_number' => 'int32',
        'debit_note_starting_month' => 'int32',
        'debit_note_starting_year' => 'int32',
        'debit_note_running_number_modified_on' => 'date-time',
        'debit_note_title_en' => null,
        'debit_note_title_th' => null,
        'receipt_running_number_modified_on' => 'date-time',
        'receivable_invoice_starting_number' => 'int32',
        'receivable_invoice_starting_month' => 'int32',
        'receivable_invoice_starting_year' => 'int32',
        'use_partial_receipt' => null,
        'use_cash_invoice' => null,
        'use_short_cash_invoice' => null,
        'general_ledger_running_number_type' => null,
        'journal_voucher_prefix' => null,
        'purchase_voucher_prefix' => null,
        'purchase_voucher_running_number_modified_on' => 'date-time',
        'sales_voucher_prefix' => null,
        'sales_voucher_running_number_modified_on' => 'date-time',
        'payment_voucher_prefix' => null,
        'payment_voucher_running_number_modified_on' => 'date-time',
        'received_voucher_prefix' => null,
        'received_voucher_running_number_modified_on' => 'date-time',
        'conversion_balance_prefix' => null,
        'conversion_balance_running_number_modified_on' => 'date-time',
        'e_tax_email' => null,
        'short_cash_invoice_templates' => null,
        'use_billing_note_accounting_rule' => null,
        'billing_note_accounting_rule_modified_on' => 'date-time',
        'template_font_size' => 'decimal',
        'use_multi_currency' => null,
        'expense_title_th' => null,
        'expense_title_en' => null,
        'with_holding_tax_title_th' => null,
        'with_holding_tax_title_en' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'company_id' => 'companyId',
        'show_with_holding' => 'showWithHolding',
        'invoice_prefix' => 'invoicePrefix',
        'quotation_prefix' => 'quotationPrefix',
        'billing_note_prefix' => 'billingNotePrefix',
        'receipt_prefix' => 'receiptPrefix',
        'purchase_order_prefix' => 'purchaseOrderPrefix',
        'cash_invoice_prefix' => 'cashInvoicePrefix',
        'receivable_invoice_prefix' => 'receivableInvoicePrefix',
        'cash_invoice_starting_number' => 'cashInvoiceStartingNumber',
        'receipt_starting_number' => 'receiptStartingNumber',
        'quotation_starting_number' => 'quotationStartingNumber',
        'billing_note_starting_number' => 'billingNoteStartingNumber',
        'purchase_order_starting_number' => 'purchaseOrderStartingNumber',
        'purchase_order_title_en' => 'purchaseOrderTitleEN',
        'quotation_title_en' => 'quotationTitleEN',
        'billing_note_title_en' => 'billingNoteTitleEN',
        'invoice_title_en' => 'invoiceTitleEN',
        'receipt_title_en' => 'receiptTitleEN',
        'payment_slip_title_en' => 'paymentSlipTitleEN',
        'purchase_order_title_th' => 'purchaseOrderTitleTH',
        'quotation_title_th' => 'quotationTitleTH',
        'billing_note_title_th' => 'billingNoteTitleTH',
        'invoice_title_th' => 'invoiceTitleTH',
        'receipt_title_th' => 'receiptTitleTH',
        'payment_slip_title_th' => 'paymentSlipTitleTH',
        'business_type' => 'businessType',
        'terms_agreement' => 'termsAgreement',
        'default_remarks' => 'defaultRemarks',
        'invoice_starting_number' => 'invoiceStartingNumber',
        'cash_invoice_title_en' => 'cashInvoiceTitleEN',
        'cash_invoice_title_th' => 'cashInvoiceTitleTH',
        'receivable_invoice_title_th' => 'receivableInvoiceTitleTH',
        'receivable_invoice_title_en' => 'receivableInvoiceTitleEN',
        'running_number_type' => 'runningNumberType',
        'purchase_order_starting_year' => 'purchaseOrderStartingYear',
        'quotation_starting_year' => 'quotationStartingYear',
        'billing_note_starting_year' => 'billingNoteStartingYear',
        'invoice_starting_year' => 'invoiceStartingYear',
        'cash_invoice_starting_year' => 'cashInvoiceStartingYear',
        'receipt_starting_year' => 'receiptStartingYear',
        'purchase_order_starting_month' => 'purchaseOrderStartingMonth',
        'quotation_starting_month' => 'quotationStartingMonth',
        'billing_note_starting_month' => 'billingNoteStartingMonth',
        'invoice_starting_month' => 'invoiceStartingMonth',
        'cash_invoice_starting_month' => 'cashInvoiceStartingMonth',
        'receipt_starting_month' => 'receiptStartingMonth',
        'settings_initiated' => 'settingsInitiated',
        'running_number_settings_modified_on' => 'runningNumberSettingsModifiedOn',
        'with_holding_tax_prefix' => 'withHoldingTaxPrefix',
        'with_holding_tax_starting_number' => 'withHoldingTaxStartingNumber',
        'with_holding_tax_starting_month' => 'withHoldingTaxStartingMonth',
        'with_holding_tax_starting_year' => 'withHoldingTaxStartingYear',
        'document_templates' => 'documentTemplates',
        'print_color' => 'printColor',
        'template_font' => 'templateFont',
        'print_one_invoice' => 'printOneInvoice',
        'remarks' => 'remarks',
        'email_message_template' => 'emailMessageTemplate',
        'purchase_prefix' => 'purchasePrefix',
        'purchase_starting_number' => 'purchaseStartingNumber',
        'purchase_title_en' => 'purchaseTitleEN',
        'purchase_title_th' => 'purchaseTitleTH',
        'purchase_starting_year' => 'purchaseStartingYear',
        'purchase_starting_month' => 'purchaseStartingMonth',
        'adjust_inventory_prefix' => 'adjustInventoryPrefix',
        'adjust_inventory_starting_number' => 'adjustInventoryStartingNumber',
        'adjust_inventory_starting_month' => 'adjustInventoryStartingMonth',
        'adjust_inventory_starting_year' => 'adjustInventoryStartingYear',
        'expense_prefix' => 'expensePrefix',
        'expense_starting_number' => 'expenseStartingNumber',
        'expense_starting_month' => 'expenseStartingMonth',
        'expense_starting_year' => 'expenseStartingYear',
        'payment_slip_prefix' => 'paymentSlipPrefix',
        'payment_slip_starting_number' => 'paymentSlipStartingNumber',
        'payment_slip_starting_year' => 'paymentSlipStartingYear',
        'payment_slip_starting_month' => 'paymentSlipStartingMonth',
        'cash_invoice_running_number_modified_on' => 'cashInvoiceRunningNumberModifiedOn',
        'purchase_order_running_number_modified_on' => 'purchaseOrderRunningNumberModifiedOn',
        'quotation_running_number_modified_on' => 'quotationRunningNumberModifiedOn',
        'billing_note_running_number_modified_on' => 'billingNoteRunningNumberModifiedOn',
        'invoice_running_number_modified_on' => 'invoiceRunningNumberModifiedOn',
        'purchase_running_number_modified_on' => 'purchaseRunningNumberModifiedOn',
        'receivable_invoice_running_number_modified_on' => 'receivableInvoiceRunningNumberModifiedOn',
        'payment_slip_running_number_modified_on' => 'paymentSlipRunningNumberModifiedOn',
        'rubber_stamp_url' => 'rubberStampUrl',
        'credit_note_prefix' => 'creditNotePrefix',
        'credit_note_starting_number' => 'creditNoteStartingNumber',
        'credit_note_starting_month' => 'creditNoteStartingMonth',
        'credit_note_starting_year' => 'creditNoteStartingYear',
        'credit_note_running_number_modified_on' => 'creditNoteRunningNumberModifiedOn',
        'credit_note_title_en' => 'creditNoteTitleEN',
        'credit_note_title_th' => 'creditNoteTitleTH',
        'debit_note_prefix' => 'debitNotePrefix',
        'debit_note_starting_number' => 'debitNoteStartingNumber',
        'debit_note_starting_month' => 'debitNoteStartingMonth',
        'debit_note_starting_year' => 'debitNoteStartingYear',
        'debit_note_running_number_modified_on' => 'debitNoteRunningNumberModifiedOn',
        'debit_note_title_en' => 'debitNoteTitleEN',
        'debit_note_title_th' => 'debitNoteTitleTH',
        'receipt_running_number_modified_on' => 'receiptRunningNumberModifiedOn',
        'receivable_invoice_starting_number' => 'receivableInvoiceStartingNumber',
        'receivable_invoice_starting_month' => 'receivableInvoiceStartingMonth',
        'receivable_invoice_starting_year' => 'receivableInvoiceStartingYear',
        'use_partial_receipt' => 'usePartialReceipt',
        'use_cash_invoice' => 'useCashInvoice',
        'use_short_cash_invoice' => 'useShortCashInvoice',
        'general_ledger_running_number_type' => 'generalLedgerRunningNumberType',
        'journal_voucher_prefix' => 'journalVoucherPrefix',
        'purchase_voucher_prefix' => 'purchaseVoucherPrefix',
        'purchase_voucher_running_number_modified_on' => 'purchaseVoucherRunningNumberModifiedOn',
        'sales_voucher_prefix' => 'salesVoucherPrefix',
        'sales_voucher_running_number_modified_on' => 'salesVoucherRunningNumberModifiedOn',
        'payment_voucher_prefix' => 'paymentVoucherPrefix',
        'payment_voucher_running_number_modified_on' => 'paymentVoucherRunningNumberModifiedOn',
        'received_voucher_prefix' => 'receivedVoucherPrefix',
        'received_voucher_running_number_modified_on' => 'receivedVoucherRunningNumberModifiedOn',
        'conversion_balance_prefix' => 'conversionBalancePrefix',
        'conversion_balance_running_number_modified_on' => 'conversionBalanceRunningNumberModifiedOn',
        'e_tax_email' => 'eTaxEmail',
        'short_cash_invoice_templates' => 'shortCashInvoiceTemplates',
        'use_billing_note_accounting_rule' => 'useBillingNoteAccountingRule',
        'billing_note_accounting_rule_modified_on' => 'billingNoteAccountingRuleModifiedOn',
        'template_font_size' => 'templateFontSize',
        'use_multi_currency' => 'useMultiCurrency',
        'expense_title_th' => 'expenseTitleTH',
        'expense_title_en' => 'expenseTitleEN',
        'with_holding_tax_title_th' => 'withHoldingTaxTitleTH',
        'with_holding_tax_title_en' => 'withHoldingTaxTitleEN'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'company_id' => 'setCompanyId',
        'show_with_holding' => 'setShowWithHolding',
        'invoice_prefix' => 'setInvoicePrefix',
        'quotation_prefix' => 'setQuotationPrefix',
        'billing_note_prefix' => 'setBillingNotePrefix',
        'receipt_prefix' => 'setReceiptPrefix',
        'purchase_order_prefix' => 'setPurchaseOrderPrefix',
        'cash_invoice_prefix' => 'setCashInvoicePrefix',
        'receivable_invoice_prefix' => 'setReceivableInvoicePrefix',
        'cash_invoice_starting_number' => 'setCashInvoiceStartingNumber',
        'receipt_starting_number' => 'setReceiptStartingNumber',
        'quotation_starting_number' => 'setQuotationStartingNumber',
        'billing_note_starting_number' => 'setBillingNoteStartingNumber',
        'purchase_order_starting_number' => 'setPurchaseOrderStartingNumber',
        'purchase_order_title_en' => 'setPurchaseOrderTitleEn',
        'quotation_title_en' => 'setQuotationTitleEn',
        'billing_note_title_en' => 'setBillingNoteTitleEn',
        'invoice_title_en' => 'setInvoiceTitleEn',
        'receipt_title_en' => 'setReceiptTitleEn',
        'payment_slip_title_en' => 'setPaymentSlipTitleEn',
        'purchase_order_title_th' => 'setPurchaseOrderTitleTh',
        'quotation_title_th' => 'setQuotationTitleTh',
        'billing_note_title_th' => 'setBillingNoteTitleTh',
        'invoice_title_th' => 'setInvoiceTitleTh',
        'receipt_title_th' => 'setReceiptTitleTh',
        'payment_slip_title_th' => 'setPaymentSlipTitleTh',
        'business_type' => 'setBusinessType',
        'terms_agreement' => 'setTermsAgreement',
        'default_remarks' => 'setDefaultRemarks',
        'invoice_starting_number' => 'setInvoiceStartingNumber',
        'cash_invoice_title_en' => 'setCashInvoiceTitleEn',
        'cash_invoice_title_th' => 'setCashInvoiceTitleTh',
        'receivable_invoice_title_th' => 'setReceivableInvoiceTitleTh',
        'receivable_invoice_title_en' => 'setReceivableInvoiceTitleEn',
        'running_number_type' => 'setRunningNumberType',
        'purchase_order_starting_year' => 'setPurchaseOrderStartingYear',
        'quotation_starting_year' => 'setQuotationStartingYear',
        'billing_note_starting_year' => 'setBillingNoteStartingYear',
        'invoice_starting_year' => 'setInvoiceStartingYear',
        'cash_invoice_starting_year' => 'setCashInvoiceStartingYear',
        'receipt_starting_year' => 'setReceiptStartingYear',
        'purchase_order_starting_month' => 'setPurchaseOrderStartingMonth',
        'quotation_starting_month' => 'setQuotationStartingMonth',
        'billing_note_starting_month' => 'setBillingNoteStartingMonth',
        'invoice_starting_month' => 'setInvoiceStartingMonth',
        'cash_invoice_starting_month' => 'setCashInvoiceStartingMonth',
        'receipt_starting_month' => 'setReceiptStartingMonth',
        'settings_initiated' => 'setSettingsInitiated',
        'running_number_settings_modified_on' => 'setRunningNumberSettingsModifiedOn',
        'with_holding_tax_prefix' => 'setWithHoldingTaxPrefix',
        'with_holding_tax_starting_number' => 'setWithHoldingTaxStartingNumber',
        'with_holding_tax_starting_month' => 'setWithHoldingTaxStartingMonth',
        'with_holding_tax_starting_year' => 'setWithHoldingTaxStartingYear',
        'document_templates' => 'setDocumentTemplates',
        'print_color' => 'setPrintColor',
        'template_font' => 'setTemplateFont',
        'print_one_invoice' => 'setPrintOneInvoice',
        'remarks' => 'setRemarks',
        'email_message_template' => 'setEmailMessageTemplate',
        'purchase_prefix' => 'setPurchasePrefix',
        'purchase_starting_number' => 'setPurchaseStartingNumber',
        'purchase_title_en' => 'setPurchaseTitleEn',
        'purchase_title_th' => 'setPurchaseTitleTh',
        'purchase_starting_year' => 'setPurchaseStartingYear',
        'purchase_starting_month' => 'setPurchaseStartingMonth',
        'adjust_inventory_prefix' => 'setAdjustInventoryPrefix',
        'adjust_inventory_starting_number' => 'setAdjustInventoryStartingNumber',
        'adjust_inventory_starting_month' => 'setAdjustInventoryStartingMonth',
        'adjust_inventory_starting_year' => 'setAdjustInventoryStartingYear',
        'expense_prefix' => 'setExpensePrefix',
        'expense_starting_number' => 'setExpenseStartingNumber',
        'expense_starting_month' => 'setExpenseStartingMonth',
        'expense_starting_year' => 'setExpenseStartingYear',
        'payment_slip_prefix' => 'setPaymentSlipPrefix',
        'payment_slip_starting_number' => 'setPaymentSlipStartingNumber',
        'payment_slip_starting_year' => 'setPaymentSlipStartingYear',
        'payment_slip_starting_month' => 'setPaymentSlipStartingMonth',
        'cash_invoice_running_number_modified_on' => 'setCashInvoiceRunningNumberModifiedOn',
        'purchase_order_running_number_modified_on' => 'setPurchaseOrderRunningNumberModifiedOn',
        'quotation_running_number_modified_on' => 'setQuotationRunningNumberModifiedOn',
        'billing_note_running_number_modified_on' => 'setBillingNoteRunningNumberModifiedOn',
        'invoice_running_number_modified_on' => 'setInvoiceRunningNumberModifiedOn',
        'purchase_running_number_modified_on' => 'setPurchaseRunningNumberModifiedOn',
        'receivable_invoice_running_number_modified_on' => 'setReceivableInvoiceRunningNumberModifiedOn',
        'payment_slip_running_number_modified_on' => 'setPaymentSlipRunningNumberModifiedOn',
        'rubber_stamp_url' => 'setRubberStampUrl',
        'credit_note_prefix' => 'setCreditNotePrefix',
        'credit_note_starting_number' => 'setCreditNoteStartingNumber',
        'credit_note_starting_month' => 'setCreditNoteStartingMonth',
        'credit_note_starting_year' => 'setCreditNoteStartingYear',
        'credit_note_running_number_modified_on' => 'setCreditNoteRunningNumberModifiedOn',
        'credit_note_title_en' => 'setCreditNoteTitleEn',
        'credit_note_title_th' => 'setCreditNoteTitleTh',
        'debit_note_prefix' => 'setDebitNotePrefix',
        'debit_note_starting_number' => 'setDebitNoteStartingNumber',
        'debit_note_starting_month' => 'setDebitNoteStartingMonth',
        'debit_note_starting_year' => 'setDebitNoteStartingYear',
        'debit_note_running_number_modified_on' => 'setDebitNoteRunningNumberModifiedOn',
        'debit_note_title_en' => 'setDebitNoteTitleEn',
        'debit_note_title_th' => 'setDebitNoteTitleTh',
        'receipt_running_number_modified_on' => 'setReceiptRunningNumberModifiedOn',
        'receivable_invoice_starting_number' => 'setReceivableInvoiceStartingNumber',
        'receivable_invoice_starting_month' => 'setReceivableInvoiceStartingMonth',
        'receivable_invoice_starting_year' => 'setReceivableInvoiceStartingYear',
        'use_partial_receipt' => 'setUsePartialReceipt',
        'use_cash_invoice' => 'setUseCashInvoice',
        'use_short_cash_invoice' => 'setUseShortCashInvoice',
        'general_ledger_running_number_type' => 'setGeneralLedgerRunningNumberType',
        'journal_voucher_prefix' => 'setJournalVoucherPrefix',
        'purchase_voucher_prefix' => 'setPurchaseVoucherPrefix',
        'purchase_voucher_running_number_modified_on' => 'setPurchaseVoucherRunningNumberModifiedOn',
        'sales_voucher_prefix' => 'setSalesVoucherPrefix',
        'sales_voucher_running_number_modified_on' => 'setSalesVoucherRunningNumberModifiedOn',
        'payment_voucher_prefix' => 'setPaymentVoucherPrefix',
        'payment_voucher_running_number_modified_on' => 'setPaymentVoucherRunningNumberModifiedOn',
        'received_voucher_prefix' => 'setReceivedVoucherPrefix',
        'received_voucher_running_number_modified_on' => 'setReceivedVoucherRunningNumberModifiedOn',
        'conversion_balance_prefix' => 'setConversionBalancePrefix',
        'conversion_balance_running_number_modified_on' => 'setConversionBalanceRunningNumberModifiedOn',
        'e_tax_email' => 'setETaxEmail',
        'short_cash_invoice_templates' => 'setShortCashInvoiceTemplates',
        'use_billing_note_accounting_rule' => 'setUseBillingNoteAccountingRule',
        'billing_note_accounting_rule_modified_on' => 'setBillingNoteAccountingRuleModifiedOn',
        'template_font_size' => 'setTemplateFontSize',
        'use_multi_currency' => 'setUseMultiCurrency',
        'expense_title_th' => 'setExpenseTitleTh',
        'expense_title_en' => 'setExpenseTitleEn',
        'with_holding_tax_title_th' => 'setWithHoldingTaxTitleTh',
        'with_holding_tax_title_en' => 'setWithHoldingTaxTitleEn'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'company_id' => 'getCompanyId',
        'show_with_holding' => 'getShowWithHolding',
        'invoice_prefix' => 'getInvoicePrefix',
        'quotation_prefix' => 'getQuotationPrefix',
        'billing_note_prefix' => 'getBillingNotePrefix',
        'receipt_prefix' => 'getReceiptPrefix',
        'purchase_order_prefix' => 'getPurchaseOrderPrefix',
        'cash_invoice_prefix' => 'getCashInvoicePrefix',
        'receivable_invoice_prefix' => 'getReceivableInvoicePrefix',
        'cash_invoice_starting_number' => 'getCashInvoiceStartingNumber',
        'receipt_starting_number' => 'getReceiptStartingNumber',
        'quotation_starting_number' => 'getQuotationStartingNumber',
        'billing_note_starting_number' => 'getBillingNoteStartingNumber',
        'purchase_order_starting_number' => 'getPurchaseOrderStartingNumber',
        'purchase_order_title_en' => 'getPurchaseOrderTitleEn',
        'quotation_title_en' => 'getQuotationTitleEn',
        'billing_note_title_en' => 'getBillingNoteTitleEn',
        'invoice_title_en' => 'getInvoiceTitleEn',
        'receipt_title_en' => 'getReceiptTitleEn',
        'payment_slip_title_en' => 'getPaymentSlipTitleEn',
        'purchase_order_title_th' => 'getPurchaseOrderTitleTh',
        'quotation_title_th' => 'getQuotationTitleTh',
        'billing_note_title_th' => 'getBillingNoteTitleTh',
        'invoice_title_th' => 'getInvoiceTitleTh',
        'receipt_title_th' => 'getReceiptTitleTh',
        'payment_slip_title_th' => 'getPaymentSlipTitleTh',
        'business_type' => 'getBusinessType',
        'terms_agreement' => 'getTermsAgreement',
        'default_remarks' => 'getDefaultRemarks',
        'invoice_starting_number' => 'getInvoiceStartingNumber',
        'cash_invoice_title_en' => 'getCashInvoiceTitleEn',
        'cash_invoice_title_th' => 'getCashInvoiceTitleTh',
        'receivable_invoice_title_th' => 'getReceivableInvoiceTitleTh',
        'receivable_invoice_title_en' => 'getReceivableInvoiceTitleEn',
        'running_number_type' => 'getRunningNumberType',
        'purchase_order_starting_year' => 'getPurchaseOrderStartingYear',
        'quotation_starting_year' => 'getQuotationStartingYear',
        'billing_note_starting_year' => 'getBillingNoteStartingYear',
        'invoice_starting_year' => 'getInvoiceStartingYear',
        'cash_invoice_starting_year' => 'getCashInvoiceStartingYear',
        'receipt_starting_year' => 'getReceiptStartingYear',
        'purchase_order_starting_month' => 'getPurchaseOrderStartingMonth',
        'quotation_starting_month' => 'getQuotationStartingMonth',
        'billing_note_starting_month' => 'getBillingNoteStartingMonth',
        'invoice_starting_month' => 'getInvoiceStartingMonth',
        'cash_invoice_starting_month' => 'getCashInvoiceStartingMonth',
        'receipt_starting_month' => 'getReceiptStartingMonth',
        'settings_initiated' => 'getSettingsInitiated',
        'running_number_settings_modified_on' => 'getRunningNumberSettingsModifiedOn',
        'with_holding_tax_prefix' => 'getWithHoldingTaxPrefix',
        'with_holding_tax_starting_number' => 'getWithHoldingTaxStartingNumber',
        'with_holding_tax_starting_month' => 'getWithHoldingTaxStartingMonth',
        'with_holding_tax_starting_year' => 'getWithHoldingTaxStartingYear',
        'document_templates' => 'getDocumentTemplates',
        'print_color' => 'getPrintColor',
        'template_font' => 'getTemplateFont',
        'print_one_invoice' => 'getPrintOneInvoice',
        'remarks' => 'getRemarks',
        'email_message_template' => 'getEmailMessageTemplate',
        'purchase_prefix' => 'getPurchasePrefix',
        'purchase_starting_number' => 'getPurchaseStartingNumber',
        'purchase_title_en' => 'getPurchaseTitleEn',
        'purchase_title_th' => 'getPurchaseTitleTh',
        'purchase_starting_year' => 'getPurchaseStartingYear',
        'purchase_starting_month' => 'getPurchaseStartingMonth',
        'adjust_inventory_prefix' => 'getAdjustInventoryPrefix',
        'adjust_inventory_starting_number' => 'getAdjustInventoryStartingNumber',
        'adjust_inventory_starting_month' => 'getAdjustInventoryStartingMonth',
        'adjust_inventory_starting_year' => 'getAdjustInventoryStartingYear',
        'expense_prefix' => 'getExpensePrefix',
        'expense_starting_number' => 'getExpenseStartingNumber',
        'expense_starting_month' => 'getExpenseStartingMonth',
        'expense_starting_year' => 'getExpenseStartingYear',
        'payment_slip_prefix' => 'getPaymentSlipPrefix',
        'payment_slip_starting_number' => 'getPaymentSlipStartingNumber',
        'payment_slip_starting_year' => 'getPaymentSlipStartingYear',
        'payment_slip_starting_month' => 'getPaymentSlipStartingMonth',
        'cash_invoice_running_number_modified_on' => 'getCashInvoiceRunningNumberModifiedOn',
        'purchase_order_running_number_modified_on' => 'getPurchaseOrderRunningNumberModifiedOn',
        'quotation_running_number_modified_on' => 'getQuotationRunningNumberModifiedOn',
        'billing_note_running_number_modified_on' => 'getBillingNoteRunningNumberModifiedOn',
        'invoice_running_number_modified_on' => 'getInvoiceRunningNumberModifiedOn',
        'purchase_running_number_modified_on' => 'getPurchaseRunningNumberModifiedOn',
        'receivable_invoice_running_number_modified_on' => 'getReceivableInvoiceRunningNumberModifiedOn',
        'payment_slip_running_number_modified_on' => 'getPaymentSlipRunningNumberModifiedOn',
        'rubber_stamp_url' => 'getRubberStampUrl',
        'credit_note_prefix' => 'getCreditNotePrefix',
        'credit_note_starting_number' => 'getCreditNoteStartingNumber',
        'credit_note_starting_month' => 'getCreditNoteStartingMonth',
        'credit_note_starting_year' => 'getCreditNoteStartingYear',
        'credit_note_running_number_modified_on' => 'getCreditNoteRunningNumberModifiedOn',
        'credit_note_title_en' => 'getCreditNoteTitleEn',
        'credit_note_title_th' => 'getCreditNoteTitleTh',
        'debit_note_prefix' => 'getDebitNotePrefix',
        'debit_note_starting_number' => 'getDebitNoteStartingNumber',
        'debit_note_starting_month' => 'getDebitNoteStartingMonth',
        'debit_note_starting_year' => 'getDebitNoteStartingYear',
        'debit_note_running_number_modified_on' => 'getDebitNoteRunningNumberModifiedOn',
        'debit_note_title_en' => 'getDebitNoteTitleEn',
        'debit_note_title_th' => 'getDebitNoteTitleTh',
        'receipt_running_number_modified_on' => 'getReceiptRunningNumberModifiedOn',
        'receivable_invoice_starting_number' => 'getReceivableInvoiceStartingNumber',
        'receivable_invoice_starting_month' => 'getReceivableInvoiceStartingMonth',
        'receivable_invoice_starting_year' => 'getReceivableInvoiceStartingYear',
        'use_partial_receipt' => 'getUsePartialReceipt',
        'use_cash_invoice' => 'getUseCashInvoice',
        'use_short_cash_invoice' => 'getUseShortCashInvoice',
        'general_ledger_running_number_type' => 'getGeneralLedgerRunningNumberType',
        'journal_voucher_prefix' => 'getJournalVoucherPrefix',
        'purchase_voucher_prefix' => 'getPurchaseVoucherPrefix',
        'purchase_voucher_running_number_modified_on' => 'getPurchaseVoucherRunningNumberModifiedOn',
        'sales_voucher_prefix' => 'getSalesVoucherPrefix',
        'sales_voucher_running_number_modified_on' => 'getSalesVoucherRunningNumberModifiedOn',
        'payment_voucher_prefix' => 'getPaymentVoucherPrefix',
        'payment_voucher_running_number_modified_on' => 'getPaymentVoucherRunningNumberModifiedOn',
        'received_voucher_prefix' => 'getReceivedVoucherPrefix',
        'received_voucher_running_number_modified_on' => 'getReceivedVoucherRunningNumberModifiedOn',
        'conversion_balance_prefix' => 'getConversionBalancePrefix',
        'conversion_balance_running_number_modified_on' => 'getConversionBalanceRunningNumberModifiedOn',
        'e_tax_email' => 'getETaxEmail',
        'short_cash_invoice_templates' => 'getShortCashInvoiceTemplates',
        'use_billing_note_accounting_rule' => 'getUseBillingNoteAccountingRule',
        'billing_note_accounting_rule_modified_on' => 'getBillingNoteAccountingRuleModifiedOn',
        'template_font_size' => 'getTemplateFontSize',
        'use_multi_currency' => 'getUseMultiCurrency',
        'expense_title_th' => 'getExpenseTitleTh',
        'expense_title_en' => 'getExpenseTitleEn',
        'with_holding_tax_title_th' => 'getWithHoldingTaxTitleTh',
        'with_holding_tax_title_en' => 'getWithHoldingTaxTitleEn'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['company_id'] = $data['company_id'] ?? null;
        $this->container['show_with_holding'] = $data['show_with_holding'] ?? false;
        $this->container['invoice_prefix'] = $data['invoice_prefix'] ?? null;
        $this->container['quotation_prefix'] = $data['quotation_prefix'] ?? null;
        $this->container['billing_note_prefix'] = $data['billing_note_prefix'] ?? null;
        $this->container['receipt_prefix'] = $data['receipt_prefix'] ?? null;
        $this->container['purchase_order_prefix'] = $data['purchase_order_prefix'] ?? null;
        $this->container['cash_invoice_prefix'] = $data['cash_invoice_prefix'] ?? null;
        $this->container['receivable_invoice_prefix'] = $data['receivable_invoice_prefix'] ?? null;
        $this->container['cash_invoice_starting_number'] = $data['cash_invoice_starting_number'] ?? null;
        $this->container['receipt_starting_number'] = $data['receipt_starting_number'] ?? null;
        $this->container['quotation_starting_number'] = $data['quotation_starting_number'] ?? null;
        $this->container['billing_note_starting_number'] = $data['billing_note_starting_number'] ?? null;
        $this->container['purchase_order_starting_number'] = $data['purchase_order_starting_number'] ?? null;
        $this->container['purchase_order_title_en'] = $data['purchase_order_title_en'] ?? null;
        $this->container['quotation_title_en'] = $data['quotation_title_en'] ?? null;
        $this->container['billing_note_title_en'] = $data['billing_note_title_en'] ?? null;
        $this->container['invoice_title_en'] = $data['invoice_title_en'] ?? null;
        $this->container['receipt_title_en'] = $data['receipt_title_en'] ?? null;
        $this->container['payment_slip_title_en'] = $data['payment_slip_title_en'] ?? null;
        $this->container['purchase_order_title_th'] = $data['purchase_order_title_th'] ?? null;
        $this->container['quotation_title_th'] = $data['quotation_title_th'] ?? null;
        $this->container['billing_note_title_th'] = $data['billing_note_title_th'] ?? null;
        $this->container['invoice_title_th'] = $data['invoice_title_th'] ?? null;
        $this->container['receipt_title_th'] = $data['receipt_title_th'] ?? null;
        $this->container['payment_slip_title_th'] = $data['payment_slip_title_th'] ?? null;
        $this->container['business_type'] = $data['business_type'] ?? null;
        $this->container['terms_agreement'] = $data['terms_agreement'] ?? null;
        $this->container['default_remarks'] = $data['default_remarks'] ?? null;
        $this->container['invoice_starting_number'] = $data['invoice_starting_number'] ?? null;
        $this->container['cash_invoice_title_en'] = $data['cash_invoice_title_en'] ?? null;
        $this->container['cash_invoice_title_th'] = $data['cash_invoice_title_th'] ?? null;
        $this->container['receivable_invoice_title_th'] = $data['receivable_invoice_title_th'] ?? null;
        $this->container['receivable_invoice_title_en'] = $data['receivable_invoice_title_en'] ?? null;
        $this->container['running_number_type'] = $data['running_number_type'] ?? null;
        $this->container['purchase_order_starting_year'] = $data['purchase_order_starting_year'] ?? null;
        $this->container['quotation_starting_year'] = $data['quotation_starting_year'] ?? null;
        $this->container['billing_note_starting_year'] = $data['billing_note_starting_year'] ?? null;
        $this->container['invoice_starting_year'] = $data['invoice_starting_year'] ?? null;
        $this->container['cash_invoice_starting_year'] = $data['cash_invoice_starting_year'] ?? null;
        $this->container['receipt_starting_year'] = $data['receipt_starting_year'] ?? null;
        $this->container['purchase_order_starting_month'] = $data['purchase_order_starting_month'] ?? null;
        $this->container['quotation_starting_month'] = $data['quotation_starting_month'] ?? null;
        $this->container['billing_note_starting_month'] = $data['billing_note_starting_month'] ?? null;
        $this->container['invoice_starting_month'] = $data['invoice_starting_month'] ?? null;
        $this->container['cash_invoice_starting_month'] = $data['cash_invoice_starting_month'] ?? null;
        $this->container['receipt_starting_month'] = $data['receipt_starting_month'] ?? null;
        $this->container['settings_initiated'] = $data['settings_initiated'] ?? false;
        $this->container['running_number_settings_modified_on'] = $data['running_number_settings_modified_on'] ?? null;
        $this->container['with_holding_tax_prefix'] = $data['with_holding_tax_prefix'] ?? null;
        $this->container['with_holding_tax_starting_number'] = $data['with_holding_tax_starting_number'] ?? null;
        $this->container['with_holding_tax_starting_month'] = $data['with_holding_tax_starting_month'] ?? null;
        $this->container['with_holding_tax_starting_year'] = $data['with_holding_tax_starting_year'] ?? null;
        $this->container['document_templates'] = $data['document_templates'] ?? null;
        $this->container['print_color'] = $data['print_color'] ?? null;
        $this->container['template_font'] = $data['template_font'] ?? null;
        $this->container['print_one_invoice'] = $data['print_one_invoice'] ?? null;
        $this->container['remarks'] = $data['remarks'] ?? null;
        $this->container['email_message_template'] = $data['email_message_template'] ?? null;
        $this->container['purchase_prefix'] = $data['purchase_prefix'] ?? null;
        $this->container['purchase_starting_number'] = $data['purchase_starting_number'] ?? null;
        $this->container['purchase_title_en'] = $data['purchase_title_en'] ?? null;
        $this->container['purchase_title_th'] = $data['purchase_title_th'] ?? null;
        $this->container['purchase_starting_year'] = $data['purchase_starting_year'] ?? null;
        $this->container['purchase_starting_month'] = $data['purchase_starting_month'] ?? null;
        $this->container['adjust_inventory_prefix'] = $data['adjust_inventory_prefix'] ?? null;
        $this->container['adjust_inventory_starting_number'] = $data['adjust_inventory_starting_number'] ?? null;
        $this->container['adjust_inventory_starting_month'] = $data['adjust_inventory_starting_month'] ?? null;
        $this->container['adjust_inventory_starting_year'] = $data['adjust_inventory_starting_year'] ?? null;
        $this->container['expense_prefix'] = $data['expense_prefix'] ?? null;
        $this->container['expense_starting_number'] = $data['expense_starting_number'] ?? null;
        $this->container['expense_starting_month'] = $data['expense_starting_month'] ?? null;
        $this->container['expense_starting_year'] = $data['expense_starting_year'] ?? null;
        $this->container['payment_slip_prefix'] = $data['payment_slip_prefix'] ?? null;
        $this->container['payment_slip_starting_number'] = $data['payment_slip_starting_number'] ?? null;
        $this->container['payment_slip_starting_year'] = $data['payment_slip_starting_year'] ?? null;
        $this->container['payment_slip_starting_month'] = $data['payment_slip_starting_month'] ?? null;
        $this->container['cash_invoice_running_number_modified_on'] = $data['cash_invoice_running_number_modified_on'] ?? null;
        $this->container['purchase_order_running_number_modified_on'] = $data['purchase_order_running_number_modified_on'] ?? null;
        $this->container['quotation_running_number_modified_on'] = $data['quotation_running_number_modified_on'] ?? null;
        $this->container['billing_note_running_number_modified_on'] = $data['billing_note_running_number_modified_on'] ?? null;
        $this->container['invoice_running_number_modified_on'] = $data['invoice_running_number_modified_on'] ?? null;
        $this->container['purchase_running_number_modified_on'] = $data['purchase_running_number_modified_on'] ?? null;
        $this->container['receivable_invoice_running_number_modified_on'] = $data['receivable_invoice_running_number_modified_on'] ?? null;
        $this->container['payment_slip_running_number_modified_on'] = $data['payment_slip_running_number_modified_on'] ?? null;
        $this->container['rubber_stamp_url'] = $data['rubber_stamp_url'] ?? null;
        $this->container['credit_note_prefix'] = $data['credit_note_prefix'] ?? null;
        $this->container['credit_note_starting_number'] = $data['credit_note_starting_number'] ?? null;
        $this->container['credit_note_starting_month'] = $data['credit_note_starting_month'] ?? null;
        $this->container['credit_note_starting_year'] = $data['credit_note_starting_year'] ?? null;
        $this->container['credit_note_running_number_modified_on'] = $data['credit_note_running_number_modified_on'] ?? null;
        $this->container['credit_note_title_en'] = $data['credit_note_title_en'] ?? null;
        $this->container['credit_note_title_th'] = $data['credit_note_title_th'] ?? null;
        $this->container['debit_note_prefix'] = $data['debit_note_prefix'] ?? null;
        $this->container['debit_note_starting_number'] = $data['debit_note_starting_number'] ?? null;
        $this->container['debit_note_starting_month'] = $data['debit_note_starting_month'] ?? null;
        $this->container['debit_note_starting_year'] = $data['debit_note_starting_year'] ?? null;
        $this->container['debit_note_running_number_modified_on'] = $data['debit_note_running_number_modified_on'] ?? null;
        $this->container['debit_note_title_en'] = $data['debit_note_title_en'] ?? null;
        $this->container['debit_note_title_th'] = $data['debit_note_title_th'] ?? null;
        $this->container['receipt_running_number_modified_on'] = $data['receipt_running_number_modified_on'] ?? null;
        $this->container['receivable_invoice_starting_number'] = $data['receivable_invoice_starting_number'] ?? null;
        $this->container['receivable_invoice_starting_month'] = $data['receivable_invoice_starting_month'] ?? null;
        $this->container['receivable_invoice_starting_year'] = $data['receivable_invoice_starting_year'] ?? null;
        $this->container['use_partial_receipt'] = $data['use_partial_receipt'] ?? null;
        $this->container['use_cash_invoice'] = $data['use_cash_invoice'] ?? null;
        $this->container['use_short_cash_invoice'] = $data['use_short_cash_invoice'] ?? null;
        $this->container['general_ledger_running_number_type'] = $data['general_ledger_running_number_type'] ?? null;
        $this->container['journal_voucher_prefix'] = $data['journal_voucher_prefix'] ?? null;
        $this->container['purchase_voucher_prefix'] = $data['purchase_voucher_prefix'] ?? null;
        $this->container['purchase_voucher_running_number_modified_on'] = $data['purchase_voucher_running_number_modified_on'] ?? null;
        $this->container['sales_voucher_prefix'] = $data['sales_voucher_prefix'] ?? null;
        $this->container['sales_voucher_running_number_modified_on'] = $data['sales_voucher_running_number_modified_on'] ?? null;
        $this->container['payment_voucher_prefix'] = $data['payment_voucher_prefix'] ?? null;
        $this->container['payment_voucher_running_number_modified_on'] = $data['payment_voucher_running_number_modified_on'] ?? null;
        $this->container['received_voucher_prefix'] = $data['received_voucher_prefix'] ?? null;
        $this->container['received_voucher_running_number_modified_on'] = $data['received_voucher_running_number_modified_on'] ?? null;
        $this->container['conversion_balance_prefix'] = $data['conversion_balance_prefix'] ?? null;
        $this->container['conversion_balance_running_number_modified_on'] = $data['conversion_balance_running_number_modified_on'] ?? null;
        $this->container['e_tax_email'] = $data['e_tax_email'] ?? null;
        $this->container['short_cash_invoice_templates'] = $data['short_cash_invoice_templates'] ?? null;
        $this->container['use_billing_note_accounting_rule'] = $data['use_billing_note_accounting_rule'] ?? null;
        $this->container['billing_note_accounting_rule_modified_on'] = $data['billing_note_accounting_rule_modified_on'] ?? null;
        $this->container['template_font_size'] = $data['template_font_size'] ?? null;
        $this->container['use_multi_currency'] = $data['use_multi_currency'] ?? null;
        $this->container['expense_title_th'] = $data['expense_title_th'] ?? null;
        $this->container['expense_title_en'] = $data['expense_title_en'] ?? null;
        $this->container['with_holding_tax_title_th'] = $data['with_holding_tax_title_th'] ?? null;
        $this->container['with_holding_tax_title_en'] = $data['with_holding_tax_title_en'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['invoice_prefix'] === null) {
            $invalidProperties[] = "'invoice_prefix' can't be null";
        }
        if ((mb_strlen($this->container['invoice_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'invoice_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['invoice_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'invoice_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['quotation_prefix'] === null) {
            $invalidProperties[] = "'quotation_prefix' can't be null";
        }
        if ((mb_strlen($this->container['quotation_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'quotation_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['quotation_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'quotation_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['billing_note_prefix'] === null) {
            $invalidProperties[] = "'billing_note_prefix' can't be null";
        }
        if ((mb_strlen($this->container['billing_note_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'billing_note_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['billing_note_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'billing_note_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['receipt_prefix'] === null) {
            $invalidProperties[] = "'receipt_prefix' can't be null";
        }
        if ((mb_strlen($this->container['receipt_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'receipt_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['receipt_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'receipt_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['purchase_order_prefix'] === null) {
            $invalidProperties[] = "'purchase_order_prefix' can't be null";
        }
        if ((mb_strlen($this->container['purchase_order_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'purchase_order_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['purchase_order_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'purchase_order_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['cash_invoice_prefix'] === null) {
            $invalidProperties[] = "'cash_invoice_prefix' can't be null";
        }
        if ((mb_strlen($this->container['cash_invoice_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'cash_invoice_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['cash_invoice_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'cash_invoice_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['receivable_invoice_prefix'] === null) {
            $invalidProperties[] = "'receivable_invoice_prefix' can't be null";
        }
        if ((mb_strlen($this->container['receivable_invoice_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'receivable_invoice_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['receivable_invoice_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'receivable_invoice_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['purchase_order_title_en'] === null) {
            $invalidProperties[] = "'purchase_order_title_en' can't be null";
        }
        if ((mb_strlen($this->container['purchase_order_title_en']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'purchase_order_title_en', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['purchase_order_title_en']) < 0)) {
            $invalidProperties[] = "invalid value for 'purchase_order_title_en', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['quotation_title_en'] === null) {
            $invalidProperties[] = "'quotation_title_en' can't be null";
        }
        if ((mb_strlen($this->container['quotation_title_en']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'quotation_title_en', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['quotation_title_en']) < 0)) {
            $invalidProperties[] = "invalid value for 'quotation_title_en', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['billing_note_title_en'] === null) {
            $invalidProperties[] = "'billing_note_title_en' can't be null";
        }
        if ((mb_strlen($this->container['billing_note_title_en']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'billing_note_title_en', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['billing_note_title_en']) < 0)) {
            $invalidProperties[] = "invalid value for 'billing_note_title_en', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['invoice_title_en'] === null) {
            $invalidProperties[] = "'invoice_title_en' can't be null";
        }
        if ((mb_strlen($this->container['invoice_title_en']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'invoice_title_en', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['invoice_title_en']) < 0)) {
            $invalidProperties[] = "invalid value for 'invoice_title_en', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['receipt_title_en'] === null) {
            $invalidProperties[] = "'receipt_title_en' can't be null";
        }
        if ((mb_strlen($this->container['receipt_title_en']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'receipt_title_en', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['receipt_title_en']) < 0)) {
            $invalidProperties[] = "invalid value for 'receipt_title_en', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['payment_slip_title_en'] === null) {
            $invalidProperties[] = "'payment_slip_title_en' can't be null";
        }
        if ((mb_strlen($this->container['payment_slip_title_en']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'payment_slip_title_en', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['payment_slip_title_en']) < 0)) {
            $invalidProperties[] = "invalid value for 'payment_slip_title_en', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['purchase_order_title_th'] === null) {
            $invalidProperties[] = "'purchase_order_title_th' can't be null";
        }
        if ((mb_strlen($this->container['purchase_order_title_th']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'purchase_order_title_th', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['purchase_order_title_th']) < 0)) {
            $invalidProperties[] = "invalid value for 'purchase_order_title_th', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['quotation_title_th'] === null) {
            $invalidProperties[] = "'quotation_title_th' can't be null";
        }
        if ((mb_strlen($this->container['quotation_title_th']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'quotation_title_th', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['quotation_title_th']) < 0)) {
            $invalidProperties[] = "invalid value for 'quotation_title_th', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['billing_note_title_th'] === null) {
            $invalidProperties[] = "'billing_note_title_th' can't be null";
        }
        if ((mb_strlen($this->container['billing_note_title_th']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'billing_note_title_th', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['billing_note_title_th']) < 0)) {
            $invalidProperties[] = "invalid value for 'billing_note_title_th', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['invoice_title_th'] === null) {
            $invalidProperties[] = "'invoice_title_th' can't be null";
        }
        if ((mb_strlen($this->container['invoice_title_th']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'invoice_title_th', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['invoice_title_th']) < 0)) {
            $invalidProperties[] = "invalid value for 'invoice_title_th', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['receipt_title_th'] === null) {
            $invalidProperties[] = "'receipt_title_th' can't be null";
        }
        if ((mb_strlen($this->container['receipt_title_th']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'receipt_title_th', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['receipt_title_th']) < 0)) {
            $invalidProperties[] = "invalid value for 'receipt_title_th', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['payment_slip_title_th'] === null) {
            $invalidProperties[] = "'payment_slip_title_th' can't be null";
        }
        if ((mb_strlen($this->container['payment_slip_title_th']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'payment_slip_title_th', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['payment_slip_title_th']) < 0)) {
            $invalidProperties[] = "invalid value for 'payment_slip_title_th', the character length must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['terms_agreement']) && (mb_strlen($this->container['terms_agreement']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'terms_agreement', the character length must be smaller than or equal to 2147483647.";
        }

        if (!is_null($this->container['terms_agreement']) && (mb_strlen($this->container['terms_agreement']) < 0)) {
            $invalidProperties[] = "invalid value for 'terms_agreement', the character length must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['default_remarks']) && (mb_strlen($this->container['default_remarks']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'default_remarks', the character length must be smaller than or equal to 2147483647.";
        }

        if (!is_null($this->container['default_remarks']) && (mb_strlen($this->container['default_remarks']) < 0)) {
            $invalidProperties[] = "invalid value for 'default_remarks', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['cash_invoice_title_en'] === null) {
            $invalidProperties[] = "'cash_invoice_title_en' can't be null";
        }
        if ((mb_strlen($this->container['cash_invoice_title_en']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'cash_invoice_title_en', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['cash_invoice_title_en']) < 0)) {
            $invalidProperties[] = "invalid value for 'cash_invoice_title_en', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['cash_invoice_title_th'] === null) {
            $invalidProperties[] = "'cash_invoice_title_th' can't be null";
        }
        if ((mb_strlen($this->container['cash_invoice_title_th']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'cash_invoice_title_th', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['cash_invoice_title_th']) < 0)) {
            $invalidProperties[] = "invalid value for 'cash_invoice_title_th', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['receivable_invoice_title_th'] === null) {
            $invalidProperties[] = "'receivable_invoice_title_th' can't be null";
        }
        if ((mb_strlen($this->container['receivable_invoice_title_th']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'receivable_invoice_title_th', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['receivable_invoice_title_th']) < 0)) {
            $invalidProperties[] = "invalid value for 'receivable_invoice_title_th', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['receivable_invoice_title_en'] === null) {
            $invalidProperties[] = "'receivable_invoice_title_en' can't be null";
        }
        if ((mb_strlen($this->container['receivable_invoice_title_en']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'receivable_invoice_title_en', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['receivable_invoice_title_en']) < 0)) {
            $invalidProperties[] = "invalid value for 'receivable_invoice_title_en', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['with_holding_tax_prefix'] === null) {
            $invalidProperties[] = "'with_holding_tax_prefix' can't be null";
        }
        if ((mb_strlen($this->container['with_holding_tax_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'with_holding_tax_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['with_holding_tax_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'with_holding_tax_prefix', the character length must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['remarks']) && (mb_strlen($this->container['remarks']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'remarks', the character length must be smaller than or equal to 2147483647.";
        }

        if (!is_null($this->container['remarks']) && (mb_strlen($this->container['remarks']) < 0)) {
            $invalidProperties[] = "invalid value for 'remarks', the character length must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['email_message_template']) && (mb_strlen($this->container['email_message_template']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'email_message_template', the character length must be smaller than or equal to 2147483647.";
        }

        if (!is_null($this->container['email_message_template']) && (mb_strlen($this->container['email_message_template']) < 0)) {
            $invalidProperties[] = "invalid value for 'email_message_template', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['purchase_prefix'] === null) {
            $invalidProperties[] = "'purchase_prefix' can't be null";
        }
        if ((mb_strlen($this->container['purchase_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'purchase_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['purchase_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'purchase_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['purchase_title_en'] === null) {
            $invalidProperties[] = "'purchase_title_en' can't be null";
        }
        if ((mb_strlen($this->container['purchase_title_en']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'purchase_title_en', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['purchase_title_en']) < 0)) {
            $invalidProperties[] = "invalid value for 'purchase_title_en', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['purchase_title_th'] === null) {
            $invalidProperties[] = "'purchase_title_th' can't be null";
        }
        if ((mb_strlen($this->container['purchase_title_th']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'purchase_title_th', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['purchase_title_th']) < 0)) {
            $invalidProperties[] = "invalid value for 'purchase_title_th', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['adjust_inventory_prefix'] === null) {
            $invalidProperties[] = "'adjust_inventory_prefix' can't be null";
        }
        if ((mb_strlen($this->container['adjust_inventory_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'adjust_inventory_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['adjust_inventory_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'adjust_inventory_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['expense_prefix'] === null) {
            $invalidProperties[] = "'expense_prefix' can't be null";
        }
        if ((mb_strlen($this->container['expense_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'expense_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['expense_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'expense_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['payment_slip_prefix'] === null) {
            $invalidProperties[] = "'payment_slip_prefix' can't be null";
        }
        if ((mb_strlen($this->container['payment_slip_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'payment_slip_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['payment_slip_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'payment_slip_prefix', the character length must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['rubber_stamp_url']) && (mb_strlen($this->container['rubber_stamp_url']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'rubber_stamp_url', the character length must be smaller than or equal to 2147483647.";
        }

        if (!is_null($this->container['rubber_stamp_url']) && (mb_strlen($this->container['rubber_stamp_url']) < 0)) {
            $invalidProperties[] = "invalid value for 'rubber_stamp_url', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['credit_note_prefix'] === null) {
            $invalidProperties[] = "'credit_note_prefix' can't be null";
        }
        if ((mb_strlen($this->container['credit_note_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'credit_note_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['credit_note_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'credit_note_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['credit_note_title_en'] === null) {
            $invalidProperties[] = "'credit_note_title_en' can't be null";
        }
        if ((mb_strlen($this->container['credit_note_title_en']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'credit_note_title_en', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['credit_note_title_en']) < 0)) {
            $invalidProperties[] = "invalid value for 'credit_note_title_en', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['credit_note_title_th'] === null) {
            $invalidProperties[] = "'credit_note_title_th' can't be null";
        }
        if ((mb_strlen($this->container['credit_note_title_th']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'credit_note_title_th', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['credit_note_title_th']) < 0)) {
            $invalidProperties[] = "invalid value for 'credit_note_title_th', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['debit_note_prefix'] === null) {
            $invalidProperties[] = "'debit_note_prefix' can't be null";
        }
        if ((mb_strlen($this->container['debit_note_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'debit_note_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['debit_note_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'debit_note_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['debit_note_title_en'] === null) {
            $invalidProperties[] = "'debit_note_title_en' can't be null";
        }
        if ((mb_strlen($this->container['debit_note_title_en']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'debit_note_title_en', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['debit_note_title_en']) < 0)) {
            $invalidProperties[] = "invalid value for 'debit_note_title_en', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['debit_note_title_th'] === null) {
            $invalidProperties[] = "'debit_note_title_th' can't be null";
        }
        if ((mb_strlen($this->container['debit_note_title_th']) > 2147483647)) {
            $invalidProperties[] = "invalid value for 'debit_note_title_th', the character length must be smaller than or equal to 2147483647.";
        }

        if ((mb_strlen($this->container['debit_note_title_th']) < 0)) {
            $invalidProperties[] = "invalid value for 'debit_note_title_th', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['journal_voucher_prefix'] === null) {
            $invalidProperties[] = "'journal_voucher_prefix' can't be null";
        }
        if ((mb_strlen($this->container['journal_voucher_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'journal_voucher_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['journal_voucher_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'journal_voucher_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['purchase_voucher_prefix'] === null) {
            $invalidProperties[] = "'purchase_voucher_prefix' can't be null";
        }
        if ((mb_strlen($this->container['purchase_voucher_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'purchase_voucher_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['purchase_voucher_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'purchase_voucher_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['sales_voucher_prefix'] === null) {
            $invalidProperties[] = "'sales_voucher_prefix' can't be null";
        }
        if ((mb_strlen($this->container['sales_voucher_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'sales_voucher_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['sales_voucher_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'sales_voucher_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['payment_voucher_prefix'] === null) {
            $invalidProperties[] = "'payment_voucher_prefix' can't be null";
        }
        if ((mb_strlen($this->container['payment_voucher_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'payment_voucher_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['payment_voucher_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'payment_voucher_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['received_voucher_prefix'] === null) {
            $invalidProperties[] = "'received_voucher_prefix' can't be null";
        }
        if ((mb_strlen($this->container['received_voucher_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'received_voucher_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['received_voucher_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'received_voucher_prefix', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['conversion_balance_prefix'] === null) {
            $invalidProperties[] = "'conversion_balance_prefix' can't be null";
        }
        if ((mb_strlen($this->container['conversion_balance_prefix']) > 6)) {
            $invalidProperties[] = "invalid value for 'conversion_balance_prefix', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['conversion_balance_prefix']) < 0)) {
            $invalidProperties[] = "invalid value for 'conversion_balance_prefix', the character length must be bigger than or equal to 0.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets company_id
     *
     * @return int|null
     */
    public function getCompanyId()
    {
        return $this->container['company_id'];
    }

    /**
     * Sets company_id
     *
     * @param int|null $company_id company_id
     *
     * @return self
     */
    public function setCompanyId($company_id)
    {
        $this->container['company_id'] = $company_id;

        return $this;
    }

    /**
     * Gets show_with_holding
     *
     * @return bool|null
     */
    public function getShowWithHolding()
    {
        return $this->container['show_with_holding'];
    }

    /**
     * Sets show_with_holding
     *
     * @param bool|null $show_with_holding show_with_holding
     *
     * @return self
     */
    public function setShowWithHolding($show_with_holding)
    {
        $this->container['show_with_holding'] = $show_with_holding;

        return $this;
    }

    /**
     * Gets invoice_prefix
     *
     * @return string
     */
    public function getInvoicePrefix()
    {
        return $this->container['invoice_prefix'];
    }

    /**
     * Sets invoice_prefix
     *
     * @param string $invoice_prefix invoice_prefix
     *
     * @return self
     */
    public function setInvoicePrefix($invoice_prefix)
    {
        if ((mb_strlen($invoice_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $invoice_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($invoice_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $invoice_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['invoice_prefix'] = $invoice_prefix;

        return $this;
    }

    /**
     * Gets quotation_prefix
     *
     * @return string
     */
    public function getQuotationPrefix()
    {
        return $this->container['quotation_prefix'];
    }

    /**
     * Sets quotation_prefix
     *
     * @param string $quotation_prefix quotation_prefix
     *
     * @return self
     */
    public function setQuotationPrefix($quotation_prefix)
    {
        if ((mb_strlen($quotation_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $quotation_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($quotation_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $quotation_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['quotation_prefix'] = $quotation_prefix;

        return $this;
    }

    /**
     * Gets billing_note_prefix
     *
     * @return string
     */
    public function getBillingNotePrefix()
    {
        return $this->container['billing_note_prefix'];
    }

    /**
     * Sets billing_note_prefix
     *
     * @param string $billing_note_prefix billing_note_prefix
     *
     * @return self
     */
    public function setBillingNotePrefix($billing_note_prefix)
    {
        if ((mb_strlen($billing_note_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $billing_note_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($billing_note_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $billing_note_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['billing_note_prefix'] = $billing_note_prefix;

        return $this;
    }

    /**
     * Gets receipt_prefix
     *
     * @return string
     */
    public function getReceiptPrefix()
    {
        return $this->container['receipt_prefix'];
    }

    /**
     * Sets receipt_prefix
     *
     * @param string $receipt_prefix receipt_prefix
     *
     * @return self
     */
    public function setReceiptPrefix($receipt_prefix)
    {
        if ((mb_strlen($receipt_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $receipt_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($receipt_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $receipt_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['receipt_prefix'] = $receipt_prefix;

        return $this;
    }

    /**
     * Gets purchase_order_prefix
     *
     * @return string
     */
    public function getPurchaseOrderPrefix()
    {
        return $this->container['purchase_order_prefix'];
    }

    /**
     * Sets purchase_order_prefix
     *
     * @param string $purchase_order_prefix purchase_order_prefix
     *
     * @return self
     */
    public function setPurchaseOrderPrefix($purchase_order_prefix)
    {
        if ((mb_strlen($purchase_order_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $purchase_order_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($purchase_order_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $purchase_order_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['purchase_order_prefix'] = $purchase_order_prefix;

        return $this;
    }

    /**
     * Gets cash_invoice_prefix
     *
     * @return string
     */
    public function getCashInvoicePrefix()
    {
        return $this->container['cash_invoice_prefix'];
    }

    /**
     * Sets cash_invoice_prefix
     *
     * @param string $cash_invoice_prefix cash_invoice_prefix
     *
     * @return self
     */
    public function setCashInvoicePrefix($cash_invoice_prefix)
    {
        if ((mb_strlen($cash_invoice_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $cash_invoice_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($cash_invoice_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $cash_invoice_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['cash_invoice_prefix'] = $cash_invoice_prefix;

        return $this;
    }

    /**
     * Gets receivable_invoice_prefix
     *
     * @return string
     */
    public function getReceivableInvoicePrefix()
    {
        return $this->container['receivable_invoice_prefix'];
    }

    /**
     * Sets receivable_invoice_prefix
     *
     * @param string $receivable_invoice_prefix receivable_invoice_prefix
     *
     * @return self
     */
    public function setReceivableInvoicePrefix($receivable_invoice_prefix)
    {
        if ((mb_strlen($receivable_invoice_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $receivable_invoice_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($receivable_invoice_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $receivable_invoice_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['receivable_invoice_prefix'] = $receivable_invoice_prefix;

        return $this;
    }

    /**
     * Gets cash_invoice_starting_number
     *
     * @return int|null
     */
    public function getCashInvoiceStartingNumber()
    {
        return $this->container['cash_invoice_starting_number'];
    }

    /**
     * Sets cash_invoice_starting_number
     *
     * @param int|null $cash_invoice_starting_number cash_invoice_starting_number
     *
     * @return self
     */
    public function setCashInvoiceStartingNumber($cash_invoice_starting_number)
    {
        $this->container['cash_invoice_starting_number'] = $cash_invoice_starting_number;

        return $this;
    }

    /**
     * Gets receipt_starting_number
     *
     * @return int|null
     */
    public function getReceiptStartingNumber()
    {
        return $this->container['receipt_starting_number'];
    }

    /**
     * Sets receipt_starting_number
     *
     * @param int|null $receipt_starting_number receipt_starting_number
     *
     * @return self
     */
    public function setReceiptStartingNumber($receipt_starting_number)
    {
        $this->container['receipt_starting_number'] = $receipt_starting_number;

        return $this;
    }

    /**
     * Gets quotation_starting_number
     *
     * @return int|null
     */
    public function getQuotationStartingNumber()
    {
        return $this->container['quotation_starting_number'];
    }

    /**
     * Sets quotation_starting_number
     *
     * @param int|null $quotation_starting_number quotation_starting_number
     *
     * @return self
     */
    public function setQuotationStartingNumber($quotation_starting_number)
    {
        $this->container['quotation_starting_number'] = $quotation_starting_number;

        return $this;
    }

    /**
     * Gets billing_note_starting_number
     *
     * @return int|null
     */
    public function getBillingNoteStartingNumber()
    {
        return $this->container['billing_note_starting_number'];
    }

    /**
     * Sets billing_note_starting_number
     *
     * @param int|null $billing_note_starting_number billing_note_starting_number
     *
     * @return self
     */
    public function setBillingNoteStartingNumber($billing_note_starting_number)
    {
        $this->container['billing_note_starting_number'] = $billing_note_starting_number;

        return $this;
    }

    /**
     * Gets purchase_order_starting_number
     *
     * @return int|null
     */
    public function getPurchaseOrderStartingNumber()
    {
        return $this->container['purchase_order_starting_number'];
    }

    /**
     * Sets purchase_order_starting_number
     *
     * @param int|null $purchase_order_starting_number purchase_order_starting_number
     *
     * @return self
     */
    public function setPurchaseOrderStartingNumber($purchase_order_starting_number)
    {
        $this->container['purchase_order_starting_number'] = $purchase_order_starting_number;

        return $this;
    }

    /**
     * Gets purchase_order_title_en
     *
     * @return string
     */
    public function getPurchaseOrderTitleEn()
    {
        return $this->container['purchase_order_title_en'];
    }

    /**
     * Sets purchase_order_title_en
     *
     * @param string $purchase_order_title_en purchase_order_title_en
     *
     * @return self
     */
    public function setPurchaseOrderTitleEn($purchase_order_title_en)
    {
        if ((mb_strlen($purchase_order_title_en) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $purchase_order_title_en when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($purchase_order_title_en) < 0)) {
            throw new \InvalidArgumentException('invalid length for $purchase_order_title_en when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['purchase_order_title_en'] = $purchase_order_title_en;

        return $this;
    }

    /**
     * Gets quotation_title_en
     *
     * @return string
     */
    public function getQuotationTitleEn()
    {
        return $this->container['quotation_title_en'];
    }

    /**
     * Sets quotation_title_en
     *
     * @param string $quotation_title_en quotation_title_en
     *
     * @return self
     */
    public function setQuotationTitleEn($quotation_title_en)
    {
        if ((mb_strlen($quotation_title_en) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $quotation_title_en when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($quotation_title_en) < 0)) {
            throw new \InvalidArgumentException('invalid length for $quotation_title_en when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['quotation_title_en'] = $quotation_title_en;

        return $this;
    }

    /**
     * Gets billing_note_title_en
     *
     * @return string
     */
    public function getBillingNoteTitleEn()
    {
        return $this->container['billing_note_title_en'];
    }

    /**
     * Sets billing_note_title_en
     *
     * @param string $billing_note_title_en billing_note_title_en
     *
     * @return self
     */
    public function setBillingNoteTitleEn($billing_note_title_en)
    {
        if ((mb_strlen($billing_note_title_en) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $billing_note_title_en when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($billing_note_title_en) < 0)) {
            throw new \InvalidArgumentException('invalid length for $billing_note_title_en when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['billing_note_title_en'] = $billing_note_title_en;

        return $this;
    }

    /**
     * Gets invoice_title_en
     *
     * @return string
     */
    public function getInvoiceTitleEn()
    {
        return $this->container['invoice_title_en'];
    }

    /**
     * Sets invoice_title_en
     *
     * @param string $invoice_title_en invoice_title_en
     *
     * @return self
     */
    public function setInvoiceTitleEn($invoice_title_en)
    {
        if ((mb_strlen($invoice_title_en) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $invoice_title_en when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($invoice_title_en) < 0)) {
            throw new \InvalidArgumentException('invalid length for $invoice_title_en when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['invoice_title_en'] = $invoice_title_en;

        return $this;
    }

    /**
     * Gets receipt_title_en
     *
     * @return string
     */
    public function getReceiptTitleEn()
    {
        return $this->container['receipt_title_en'];
    }

    /**
     * Sets receipt_title_en
     *
     * @param string $receipt_title_en receipt_title_en
     *
     * @return self
     */
    public function setReceiptTitleEn($receipt_title_en)
    {
        if ((mb_strlen($receipt_title_en) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $receipt_title_en when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($receipt_title_en) < 0)) {
            throw new \InvalidArgumentException('invalid length for $receipt_title_en when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['receipt_title_en'] = $receipt_title_en;

        return $this;
    }

    /**
     * Gets payment_slip_title_en
     *
     * @return string
     */
    public function getPaymentSlipTitleEn()
    {
        return $this->container['payment_slip_title_en'];
    }

    /**
     * Sets payment_slip_title_en
     *
     * @param string $payment_slip_title_en payment_slip_title_en
     *
     * @return self
     */
    public function setPaymentSlipTitleEn($payment_slip_title_en)
    {
        if ((mb_strlen($payment_slip_title_en) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $payment_slip_title_en when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($payment_slip_title_en) < 0)) {
            throw new \InvalidArgumentException('invalid length for $payment_slip_title_en when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['payment_slip_title_en'] = $payment_slip_title_en;

        return $this;
    }

    /**
     * Gets purchase_order_title_th
     *
     * @return string
     */
    public function getPurchaseOrderTitleTh()
    {
        return $this->container['purchase_order_title_th'];
    }

    /**
     * Sets purchase_order_title_th
     *
     * @param string $purchase_order_title_th purchase_order_title_th
     *
     * @return self
     */
    public function setPurchaseOrderTitleTh($purchase_order_title_th)
    {
        if ((mb_strlen($purchase_order_title_th) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $purchase_order_title_th when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($purchase_order_title_th) < 0)) {
            throw new \InvalidArgumentException('invalid length for $purchase_order_title_th when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['purchase_order_title_th'] = $purchase_order_title_th;

        return $this;
    }

    /**
     * Gets quotation_title_th
     *
     * @return string
     */
    public function getQuotationTitleTh()
    {
        return $this->container['quotation_title_th'];
    }

    /**
     * Sets quotation_title_th
     *
     * @param string $quotation_title_th quotation_title_th
     *
     * @return self
     */
    public function setQuotationTitleTh($quotation_title_th)
    {
        if ((mb_strlen($quotation_title_th) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $quotation_title_th when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($quotation_title_th) < 0)) {
            throw new \InvalidArgumentException('invalid length for $quotation_title_th when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['quotation_title_th'] = $quotation_title_th;

        return $this;
    }

    /**
     * Gets billing_note_title_th
     *
     * @return string
     */
    public function getBillingNoteTitleTh()
    {
        return $this->container['billing_note_title_th'];
    }

    /**
     * Sets billing_note_title_th
     *
     * @param string $billing_note_title_th billing_note_title_th
     *
     * @return self
     */
    public function setBillingNoteTitleTh($billing_note_title_th)
    {
        if ((mb_strlen($billing_note_title_th) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $billing_note_title_th when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($billing_note_title_th) < 0)) {
            throw new \InvalidArgumentException('invalid length for $billing_note_title_th when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['billing_note_title_th'] = $billing_note_title_th;

        return $this;
    }

    /**
     * Gets invoice_title_th
     *
     * @return string
     */
    public function getInvoiceTitleTh()
    {
        return $this->container['invoice_title_th'];
    }

    /**
     * Sets invoice_title_th
     *
     * @param string $invoice_title_th invoice_title_th
     *
     * @return self
     */
    public function setInvoiceTitleTh($invoice_title_th)
    {
        if ((mb_strlen($invoice_title_th) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $invoice_title_th when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($invoice_title_th) < 0)) {
            throw new \InvalidArgumentException('invalid length for $invoice_title_th when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['invoice_title_th'] = $invoice_title_th;

        return $this;
    }

    /**
     * Gets receipt_title_th
     *
     * @return string
     */
    public function getReceiptTitleTh()
    {
        return $this->container['receipt_title_th'];
    }

    /**
     * Sets receipt_title_th
     *
     * @param string $receipt_title_th receipt_title_th
     *
     * @return self
     */
    public function setReceiptTitleTh($receipt_title_th)
    {
        if ((mb_strlen($receipt_title_th) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $receipt_title_th when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($receipt_title_th) < 0)) {
            throw new \InvalidArgumentException('invalid length for $receipt_title_th when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['receipt_title_th'] = $receipt_title_th;

        return $this;
    }

    /**
     * Gets payment_slip_title_th
     *
     * @return string
     */
    public function getPaymentSlipTitleTh()
    {
        return $this->container['payment_slip_title_th'];
    }

    /**
     * Sets payment_slip_title_th
     *
     * @param string $payment_slip_title_th payment_slip_title_th
     *
     * @return self
     */
    public function setPaymentSlipTitleTh($payment_slip_title_th)
    {
        if ((mb_strlen($payment_slip_title_th) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $payment_slip_title_th when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($payment_slip_title_th) < 0)) {
            throw new \InvalidArgumentException('invalid length for $payment_slip_title_th when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['payment_slip_title_th'] = $payment_slip_title_th;

        return $this;
    }

    /**
     * Gets business_type
     *
     * @return \OpenAPI\Client\Model\BusinessType|null
     */
    public function getBusinessType()
    {
        return $this->container['business_type'];
    }

    /**
     * Sets business_type
     *
     * @param \OpenAPI\Client\Model\BusinessType|null $business_type business_type
     *
     * @return self
     */
    public function setBusinessType($business_type)
    {
        $this->container['business_type'] = $business_type;

        return $this;
    }

    /**
     * Gets terms_agreement
     *
     * @return string|null
     */
    public function getTermsAgreement()
    {
        return $this->container['terms_agreement'];
    }

    /**
     * Sets terms_agreement
     *
     * @param string|null $terms_agreement terms_agreement
     *
     * @return self
     */
    public function setTermsAgreement($terms_agreement)
    {
        if (!is_null($terms_agreement) && (mb_strlen($terms_agreement) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $terms_agreement when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if (!is_null($terms_agreement) && (mb_strlen($terms_agreement) < 0)) {
            throw new \InvalidArgumentException('invalid length for $terms_agreement when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['terms_agreement'] = $terms_agreement;

        return $this;
    }

    /**
     * Gets default_remarks
     *
     * @return string|null
     */
    public function getDefaultRemarks()
    {
        return $this->container['default_remarks'];
    }

    /**
     * Sets default_remarks
     *
     * @param string|null $default_remarks default_remarks
     *
     * @return self
     */
    public function setDefaultRemarks($default_remarks)
    {
        if (!is_null($default_remarks) && (mb_strlen($default_remarks) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $default_remarks when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if (!is_null($default_remarks) && (mb_strlen($default_remarks) < 0)) {
            throw new \InvalidArgumentException('invalid length for $default_remarks when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['default_remarks'] = $default_remarks;

        return $this;
    }

    /**
     * Gets invoice_starting_number
     *
     * @return int|null
     */
    public function getInvoiceStartingNumber()
    {
        return $this->container['invoice_starting_number'];
    }

    /**
     * Sets invoice_starting_number
     *
     * @param int|null $invoice_starting_number invoice_starting_number
     *
     * @return self
     */
    public function setInvoiceStartingNumber($invoice_starting_number)
    {
        $this->container['invoice_starting_number'] = $invoice_starting_number;

        return $this;
    }

    /**
     * Gets cash_invoice_title_en
     *
     * @return string
     */
    public function getCashInvoiceTitleEn()
    {
        return $this->container['cash_invoice_title_en'];
    }

    /**
     * Sets cash_invoice_title_en
     *
     * @param string $cash_invoice_title_en cash_invoice_title_en
     *
     * @return self
     */
    public function setCashInvoiceTitleEn($cash_invoice_title_en)
    {
        if ((mb_strlen($cash_invoice_title_en) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $cash_invoice_title_en when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($cash_invoice_title_en) < 0)) {
            throw new \InvalidArgumentException('invalid length for $cash_invoice_title_en when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['cash_invoice_title_en'] = $cash_invoice_title_en;

        return $this;
    }

    /**
     * Gets cash_invoice_title_th
     *
     * @return string
     */
    public function getCashInvoiceTitleTh()
    {
        return $this->container['cash_invoice_title_th'];
    }

    /**
     * Sets cash_invoice_title_th
     *
     * @param string $cash_invoice_title_th cash_invoice_title_th
     *
     * @return self
     */
    public function setCashInvoiceTitleTh($cash_invoice_title_th)
    {
        if ((mb_strlen($cash_invoice_title_th) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $cash_invoice_title_th when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($cash_invoice_title_th) < 0)) {
            throw new \InvalidArgumentException('invalid length for $cash_invoice_title_th when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['cash_invoice_title_th'] = $cash_invoice_title_th;

        return $this;
    }

    /**
     * Gets receivable_invoice_title_th
     *
     * @return string
     */
    public function getReceivableInvoiceTitleTh()
    {
        return $this->container['receivable_invoice_title_th'];
    }

    /**
     * Sets receivable_invoice_title_th
     *
     * @param string $receivable_invoice_title_th receivable_invoice_title_th
     *
     * @return self
     */
    public function setReceivableInvoiceTitleTh($receivable_invoice_title_th)
    {
        if ((mb_strlen($receivable_invoice_title_th) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $receivable_invoice_title_th when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($receivable_invoice_title_th) < 0)) {
            throw new \InvalidArgumentException('invalid length for $receivable_invoice_title_th when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['receivable_invoice_title_th'] = $receivable_invoice_title_th;

        return $this;
    }

    /**
     * Gets receivable_invoice_title_en
     *
     * @return string
     */
    public function getReceivableInvoiceTitleEn()
    {
        return $this->container['receivable_invoice_title_en'];
    }

    /**
     * Sets receivable_invoice_title_en
     *
     * @param string $receivable_invoice_title_en receivable_invoice_title_en
     *
     * @return self
     */
    public function setReceivableInvoiceTitleEn($receivable_invoice_title_en)
    {
        if ((mb_strlen($receivable_invoice_title_en) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $receivable_invoice_title_en when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($receivable_invoice_title_en) < 0)) {
            throw new \InvalidArgumentException('invalid length for $receivable_invoice_title_en when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['receivable_invoice_title_en'] = $receivable_invoice_title_en;

        return $this;
    }

    /**
     * Gets running_number_type
     *
     * @return \OpenAPI\Client\Model\RunningNumberType|null
     */
    public function getRunningNumberType()
    {
        return $this->container['running_number_type'];
    }

    /**
     * Sets running_number_type
     *
     * @param \OpenAPI\Client\Model\RunningNumberType|null $running_number_type running_number_type
     *
     * @return self
     */
    public function setRunningNumberType($running_number_type)
    {
        $this->container['running_number_type'] = $running_number_type;

        return $this;
    }

    /**
     * Gets purchase_order_starting_year
     *
     * @return int|null
     */
    public function getPurchaseOrderStartingYear()
    {
        return $this->container['purchase_order_starting_year'];
    }

    /**
     * Sets purchase_order_starting_year
     *
     * @param int|null $purchase_order_starting_year purchase_order_starting_year
     *
     * @return self
     */
    public function setPurchaseOrderStartingYear($purchase_order_starting_year)
    {
        $this->container['purchase_order_starting_year'] = $purchase_order_starting_year;

        return $this;
    }

    /**
     * Gets quotation_starting_year
     *
     * @return int|null
     */
    public function getQuotationStartingYear()
    {
        return $this->container['quotation_starting_year'];
    }

    /**
     * Sets quotation_starting_year
     *
     * @param int|null $quotation_starting_year quotation_starting_year
     *
     * @return self
     */
    public function setQuotationStartingYear($quotation_starting_year)
    {
        $this->container['quotation_starting_year'] = $quotation_starting_year;

        return $this;
    }

    /**
     * Gets billing_note_starting_year
     *
     * @return int|null
     */
    public function getBillingNoteStartingYear()
    {
        return $this->container['billing_note_starting_year'];
    }

    /**
     * Sets billing_note_starting_year
     *
     * @param int|null $billing_note_starting_year billing_note_starting_year
     *
     * @return self
     */
    public function setBillingNoteStartingYear($billing_note_starting_year)
    {
        $this->container['billing_note_starting_year'] = $billing_note_starting_year;

        return $this;
    }

    /**
     * Gets invoice_starting_year
     *
     * @return int|null
     */
    public function getInvoiceStartingYear()
    {
        return $this->container['invoice_starting_year'];
    }

    /**
     * Sets invoice_starting_year
     *
     * @param int|null $invoice_starting_year invoice_starting_year
     *
     * @return self
     */
    public function setInvoiceStartingYear($invoice_starting_year)
    {
        $this->container['invoice_starting_year'] = $invoice_starting_year;

        return $this;
    }

    /**
     * Gets cash_invoice_starting_year
     *
     * @return int|null
     */
    public function getCashInvoiceStartingYear()
    {
        return $this->container['cash_invoice_starting_year'];
    }

    /**
     * Sets cash_invoice_starting_year
     *
     * @param int|null $cash_invoice_starting_year cash_invoice_starting_year
     *
     * @return self
     */
    public function setCashInvoiceStartingYear($cash_invoice_starting_year)
    {
        $this->container['cash_invoice_starting_year'] = $cash_invoice_starting_year;

        return $this;
    }

    /**
     * Gets receipt_starting_year
     *
     * @return int|null
     */
    public function getReceiptStartingYear()
    {
        return $this->container['receipt_starting_year'];
    }

    /**
     * Sets receipt_starting_year
     *
     * @param int|null $receipt_starting_year receipt_starting_year
     *
     * @return self
     */
    public function setReceiptStartingYear($receipt_starting_year)
    {
        $this->container['receipt_starting_year'] = $receipt_starting_year;

        return $this;
    }

    /**
     * Gets purchase_order_starting_month
     *
     * @return int|null
     */
    public function getPurchaseOrderStartingMonth()
    {
        return $this->container['purchase_order_starting_month'];
    }

    /**
     * Sets purchase_order_starting_month
     *
     * @param int|null $purchase_order_starting_month purchase_order_starting_month
     *
     * @return self
     */
    public function setPurchaseOrderStartingMonth($purchase_order_starting_month)
    {
        $this->container['purchase_order_starting_month'] = $purchase_order_starting_month;

        return $this;
    }

    /**
     * Gets quotation_starting_month
     *
     * @return int|null
     */
    public function getQuotationStartingMonth()
    {
        return $this->container['quotation_starting_month'];
    }

    /**
     * Sets quotation_starting_month
     *
     * @param int|null $quotation_starting_month quotation_starting_month
     *
     * @return self
     */
    public function setQuotationStartingMonth($quotation_starting_month)
    {
        $this->container['quotation_starting_month'] = $quotation_starting_month;

        return $this;
    }

    /**
     * Gets billing_note_starting_month
     *
     * @return int|null
     */
    public function getBillingNoteStartingMonth()
    {
        return $this->container['billing_note_starting_month'];
    }

    /**
     * Sets billing_note_starting_month
     *
     * @param int|null $billing_note_starting_month billing_note_starting_month
     *
     * @return self
     */
    public function setBillingNoteStartingMonth($billing_note_starting_month)
    {
        $this->container['billing_note_starting_month'] = $billing_note_starting_month;

        return $this;
    }

    /**
     * Gets invoice_starting_month
     *
     * @return int|null
     */
    public function getInvoiceStartingMonth()
    {
        return $this->container['invoice_starting_month'];
    }

    /**
     * Sets invoice_starting_month
     *
     * @param int|null $invoice_starting_month invoice_starting_month
     *
     * @return self
     */
    public function setInvoiceStartingMonth($invoice_starting_month)
    {
        $this->container['invoice_starting_month'] = $invoice_starting_month;

        return $this;
    }

    /**
     * Gets cash_invoice_starting_month
     *
     * @return int|null
     */
    public function getCashInvoiceStartingMonth()
    {
        return $this->container['cash_invoice_starting_month'];
    }

    /**
     * Sets cash_invoice_starting_month
     *
     * @param int|null $cash_invoice_starting_month cash_invoice_starting_month
     *
     * @return self
     */
    public function setCashInvoiceStartingMonth($cash_invoice_starting_month)
    {
        $this->container['cash_invoice_starting_month'] = $cash_invoice_starting_month;

        return $this;
    }

    /**
     * Gets receipt_starting_month
     *
     * @return int|null
     */
    public function getReceiptStartingMonth()
    {
        return $this->container['receipt_starting_month'];
    }

    /**
     * Sets receipt_starting_month
     *
     * @param int|null $receipt_starting_month receipt_starting_month
     *
     * @return self
     */
    public function setReceiptStartingMonth($receipt_starting_month)
    {
        $this->container['receipt_starting_month'] = $receipt_starting_month;

        return $this;
    }

    /**
     * Gets settings_initiated
     *
     * @return bool|null
     */
    public function getSettingsInitiated()
    {
        return $this->container['settings_initiated'];
    }

    /**
     * Sets settings_initiated
     *
     * @param bool|null $settings_initiated settings_initiated
     *
     * @return self
     */
    public function setSettingsInitiated($settings_initiated)
    {
        $this->container['settings_initiated'] = $settings_initiated;

        return $this;
    }

    /**
     * Gets running_number_settings_modified_on
     *
     * @return \DateTime|null
     */
    public function getRunningNumberSettingsModifiedOn()
    {
        return $this->container['running_number_settings_modified_on'];
    }

    /**
     * Sets running_number_settings_modified_on
     *
     * @param \DateTime|null $running_number_settings_modified_on running_number_settings_modified_on
     *
     * @return self
     */
    public function setRunningNumberSettingsModifiedOn($running_number_settings_modified_on)
    {
        $this->container['running_number_settings_modified_on'] = $running_number_settings_modified_on;

        return $this;
    }

    /**
     * Gets with_holding_tax_prefix
     *
     * @return string
     */
    public function getWithHoldingTaxPrefix()
    {
        return $this->container['with_holding_tax_prefix'];
    }

    /**
     * Sets with_holding_tax_prefix
     *
     * @param string $with_holding_tax_prefix with_holding_tax_prefix
     *
     * @return self
     */
    public function setWithHoldingTaxPrefix($with_holding_tax_prefix)
    {
        if ((mb_strlen($with_holding_tax_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $with_holding_tax_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($with_holding_tax_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $with_holding_tax_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['with_holding_tax_prefix'] = $with_holding_tax_prefix;

        return $this;
    }

    /**
     * Gets with_holding_tax_starting_number
     *
     * @return int|null
     */
    public function getWithHoldingTaxStartingNumber()
    {
        return $this->container['with_holding_tax_starting_number'];
    }

    /**
     * Sets with_holding_tax_starting_number
     *
     * @param int|null $with_holding_tax_starting_number with_holding_tax_starting_number
     *
     * @return self
     */
    public function setWithHoldingTaxStartingNumber($with_holding_tax_starting_number)
    {
        $this->container['with_holding_tax_starting_number'] = $with_holding_tax_starting_number;

        return $this;
    }

    /**
     * Gets with_holding_tax_starting_month
     *
     * @return int|null
     */
    public function getWithHoldingTaxStartingMonth()
    {
        return $this->container['with_holding_tax_starting_month'];
    }

    /**
     * Sets with_holding_tax_starting_month
     *
     * @param int|null $with_holding_tax_starting_month with_holding_tax_starting_month
     *
     * @return self
     */
    public function setWithHoldingTaxStartingMonth($with_holding_tax_starting_month)
    {
        $this->container['with_holding_tax_starting_month'] = $with_holding_tax_starting_month;

        return $this;
    }

    /**
     * Gets with_holding_tax_starting_year
     *
     * @return int|null
     */
    public function getWithHoldingTaxStartingYear()
    {
        return $this->container['with_holding_tax_starting_year'];
    }

    /**
     * Sets with_holding_tax_starting_year
     *
     * @param int|null $with_holding_tax_starting_year with_holding_tax_starting_year
     *
     * @return self
     */
    public function setWithHoldingTaxStartingYear($with_holding_tax_starting_year)
    {
        $this->container['with_holding_tax_starting_year'] = $with_holding_tax_starting_year;

        return $this;
    }

    /**
     * Gets document_templates
     *
     * @return \OpenAPI\Client\Model\DocumentTemplates|null
     */
    public function getDocumentTemplates()
    {
        return $this->container['document_templates'];
    }

    /**
     * Sets document_templates
     *
     * @param \OpenAPI\Client\Model\DocumentTemplates|null $document_templates document_templates
     *
     * @return self
     */
    public function setDocumentTemplates($document_templates)
    {
        $this->container['document_templates'] = $document_templates;

        return $this;
    }

    /**
     * Gets print_color
     *
     * @return bool|null
     */
    public function getPrintColor()
    {
        return $this->container['print_color'];
    }

    /**
     * Sets print_color
     *
     * @param bool|null $print_color print_color
     *
     * @return self
     */
    public function setPrintColor($print_color)
    {
        $this->container['print_color'] = $print_color;

        return $this;
    }

    /**
     * Gets template_font
     *
     * @return \OpenAPI\Client\Model\TemplateFont|null
     */
    public function getTemplateFont()
    {
        return $this->container['template_font'];
    }

    /**
     * Sets template_font
     *
     * @param \OpenAPI\Client\Model\TemplateFont|null $template_font template_font
     *
     * @return self
     */
    public function setTemplateFont($template_font)
    {
        $this->container['template_font'] = $template_font;

        return $this;
    }

    /**
     * Gets print_one_invoice
     *
     * @return bool|null
     */
    public function getPrintOneInvoice()
    {
        return $this->container['print_one_invoice'];
    }

    /**
     * Sets print_one_invoice
     *
     * @param bool|null $print_one_invoice print_one_invoice
     *
     * @return self
     */
    public function setPrintOneInvoice($print_one_invoice)
    {
        $this->container['print_one_invoice'] = $print_one_invoice;

        return $this;
    }

    /**
     * Gets remarks
     *
     * @return string|null
     */
    public function getRemarks()
    {
        return $this->container['remarks'];
    }

    /**
     * Sets remarks
     *
     * @param string|null $remarks remarks
     *
     * @return self
     */
    public function setRemarks($remarks)
    {
        if (!is_null($remarks) && (mb_strlen($remarks) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $remarks when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if (!is_null($remarks) && (mb_strlen($remarks) < 0)) {
            throw new \InvalidArgumentException('invalid length for $remarks when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['remarks'] = $remarks;

        return $this;
    }

    /**
     * Gets email_message_template
     *
     * @return string|null
     */
    public function getEmailMessageTemplate()
    {
        return $this->container['email_message_template'];
    }

    /**
     * Sets email_message_template
     *
     * @param string|null $email_message_template email_message_template
     *
     * @return self
     */
    public function setEmailMessageTemplate($email_message_template)
    {
        if (!is_null($email_message_template) && (mb_strlen($email_message_template) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $email_message_template when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if (!is_null($email_message_template) && (mb_strlen($email_message_template) < 0)) {
            throw new \InvalidArgumentException('invalid length for $email_message_template when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['email_message_template'] = $email_message_template;

        return $this;
    }

    /**
     * Gets purchase_prefix
     *
     * @return string
     */
    public function getPurchasePrefix()
    {
        return $this->container['purchase_prefix'];
    }

    /**
     * Sets purchase_prefix
     *
     * @param string $purchase_prefix purchase_prefix
     *
     * @return self
     */
    public function setPurchasePrefix($purchase_prefix)
    {
        if ((mb_strlen($purchase_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $purchase_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($purchase_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $purchase_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['purchase_prefix'] = $purchase_prefix;

        return $this;
    }

    /**
     * Gets purchase_starting_number
     *
     * @return int|null
     */
    public function getPurchaseStartingNumber()
    {
        return $this->container['purchase_starting_number'];
    }

    /**
     * Sets purchase_starting_number
     *
     * @param int|null $purchase_starting_number purchase_starting_number
     *
     * @return self
     */
    public function setPurchaseStartingNumber($purchase_starting_number)
    {
        $this->container['purchase_starting_number'] = $purchase_starting_number;

        return $this;
    }

    /**
     * Gets purchase_title_en
     *
     * @return string
     */
    public function getPurchaseTitleEn()
    {
        return $this->container['purchase_title_en'];
    }

    /**
     * Sets purchase_title_en
     *
     * @param string $purchase_title_en purchase_title_en
     *
     * @return self
     */
    public function setPurchaseTitleEn($purchase_title_en)
    {
        if ((mb_strlen($purchase_title_en) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $purchase_title_en when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($purchase_title_en) < 0)) {
            throw new \InvalidArgumentException('invalid length for $purchase_title_en when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['purchase_title_en'] = $purchase_title_en;

        return $this;
    }

    /**
     * Gets purchase_title_th
     *
     * @return string
     */
    public function getPurchaseTitleTh()
    {
        return $this->container['purchase_title_th'];
    }

    /**
     * Sets purchase_title_th
     *
     * @param string $purchase_title_th purchase_title_th
     *
     * @return self
     */
    public function setPurchaseTitleTh($purchase_title_th)
    {
        if ((mb_strlen($purchase_title_th) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $purchase_title_th when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($purchase_title_th) < 0)) {
            throw new \InvalidArgumentException('invalid length for $purchase_title_th when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['purchase_title_th'] = $purchase_title_th;

        return $this;
    }

    /**
     * Gets purchase_starting_year
     *
     * @return int|null
     */
    public function getPurchaseStartingYear()
    {
        return $this->container['purchase_starting_year'];
    }

    /**
     * Sets purchase_starting_year
     *
     * @param int|null $purchase_starting_year purchase_starting_year
     *
     * @return self
     */
    public function setPurchaseStartingYear($purchase_starting_year)
    {
        $this->container['purchase_starting_year'] = $purchase_starting_year;

        return $this;
    }

    /**
     * Gets purchase_starting_month
     *
     * @return int|null
     */
    public function getPurchaseStartingMonth()
    {
        return $this->container['purchase_starting_month'];
    }

    /**
     * Sets purchase_starting_month
     *
     * @param int|null $purchase_starting_month purchase_starting_month
     *
     * @return self
     */
    public function setPurchaseStartingMonth($purchase_starting_month)
    {
        $this->container['purchase_starting_month'] = $purchase_starting_month;

        return $this;
    }

    /**
     * Gets adjust_inventory_prefix
     *
     * @return string
     */
    public function getAdjustInventoryPrefix()
    {
        return $this->container['adjust_inventory_prefix'];
    }

    /**
     * Sets adjust_inventory_prefix
     *
     * @param string $adjust_inventory_prefix adjust_inventory_prefix
     *
     * @return self
     */
    public function setAdjustInventoryPrefix($adjust_inventory_prefix)
    {
        if ((mb_strlen($adjust_inventory_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $adjust_inventory_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($adjust_inventory_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $adjust_inventory_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['adjust_inventory_prefix'] = $adjust_inventory_prefix;

        return $this;
    }

    /**
     * Gets adjust_inventory_starting_number
     *
     * @return int|null
     */
    public function getAdjustInventoryStartingNumber()
    {
        return $this->container['adjust_inventory_starting_number'];
    }

    /**
     * Sets adjust_inventory_starting_number
     *
     * @param int|null $adjust_inventory_starting_number adjust_inventory_starting_number
     *
     * @return self
     */
    public function setAdjustInventoryStartingNumber($adjust_inventory_starting_number)
    {
        $this->container['adjust_inventory_starting_number'] = $adjust_inventory_starting_number;

        return $this;
    }

    /**
     * Gets adjust_inventory_starting_month
     *
     * @return int|null
     */
    public function getAdjustInventoryStartingMonth()
    {
        return $this->container['adjust_inventory_starting_month'];
    }

    /**
     * Sets adjust_inventory_starting_month
     *
     * @param int|null $adjust_inventory_starting_month adjust_inventory_starting_month
     *
     * @return self
     */
    public function setAdjustInventoryStartingMonth($adjust_inventory_starting_month)
    {
        $this->container['adjust_inventory_starting_month'] = $adjust_inventory_starting_month;

        return $this;
    }

    /**
     * Gets adjust_inventory_starting_year
     *
     * @return int|null
     */
    public function getAdjustInventoryStartingYear()
    {
        return $this->container['adjust_inventory_starting_year'];
    }

    /**
     * Sets adjust_inventory_starting_year
     *
     * @param int|null $adjust_inventory_starting_year adjust_inventory_starting_year
     *
     * @return self
     */
    public function setAdjustInventoryStartingYear($adjust_inventory_starting_year)
    {
        $this->container['adjust_inventory_starting_year'] = $adjust_inventory_starting_year;

        return $this;
    }

    /**
     * Gets expense_prefix
     *
     * @return string
     */
    public function getExpensePrefix()
    {
        return $this->container['expense_prefix'];
    }

    /**
     * Sets expense_prefix
     *
     * @param string $expense_prefix expense_prefix
     *
     * @return self
     */
    public function setExpensePrefix($expense_prefix)
    {
        if ((mb_strlen($expense_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $expense_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($expense_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $expense_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['expense_prefix'] = $expense_prefix;

        return $this;
    }

    /**
     * Gets expense_starting_number
     *
     * @return int|null
     */
    public function getExpenseStartingNumber()
    {
        return $this->container['expense_starting_number'];
    }

    /**
     * Sets expense_starting_number
     *
     * @param int|null $expense_starting_number expense_starting_number
     *
     * @return self
     */
    public function setExpenseStartingNumber($expense_starting_number)
    {
        $this->container['expense_starting_number'] = $expense_starting_number;

        return $this;
    }

    /**
     * Gets expense_starting_month
     *
     * @return int|null
     */
    public function getExpenseStartingMonth()
    {
        return $this->container['expense_starting_month'];
    }

    /**
     * Sets expense_starting_month
     *
     * @param int|null $expense_starting_month expense_starting_month
     *
     * @return self
     */
    public function setExpenseStartingMonth($expense_starting_month)
    {
        $this->container['expense_starting_month'] = $expense_starting_month;

        return $this;
    }

    /**
     * Gets expense_starting_year
     *
     * @return int|null
     */
    public function getExpenseStartingYear()
    {
        return $this->container['expense_starting_year'];
    }

    /**
     * Sets expense_starting_year
     *
     * @param int|null $expense_starting_year expense_starting_year
     *
     * @return self
     */
    public function setExpenseStartingYear($expense_starting_year)
    {
        $this->container['expense_starting_year'] = $expense_starting_year;

        return $this;
    }

    /**
     * Gets payment_slip_prefix
     *
     * @return string
     */
    public function getPaymentSlipPrefix()
    {
        return $this->container['payment_slip_prefix'];
    }

    /**
     * Sets payment_slip_prefix
     *
     * @param string $payment_slip_prefix payment_slip_prefix
     *
     * @return self
     */
    public function setPaymentSlipPrefix($payment_slip_prefix)
    {
        if ((mb_strlen($payment_slip_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $payment_slip_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($payment_slip_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $payment_slip_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['payment_slip_prefix'] = $payment_slip_prefix;

        return $this;
    }

    /**
     * Gets payment_slip_starting_number
     *
     * @return int|null
     */
    public function getPaymentSlipStartingNumber()
    {
        return $this->container['payment_slip_starting_number'];
    }

    /**
     * Sets payment_slip_starting_number
     *
     * @param int|null $payment_slip_starting_number payment_slip_starting_number
     *
     * @return self
     */
    public function setPaymentSlipStartingNumber($payment_slip_starting_number)
    {
        $this->container['payment_slip_starting_number'] = $payment_slip_starting_number;

        return $this;
    }

    /**
     * Gets payment_slip_starting_year
     *
     * @return int|null
     */
    public function getPaymentSlipStartingYear()
    {
        return $this->container['payment_slip_starting_year'];
    }

    /**
     * Sets payment_slip_starting_year
     *
     * @param int|null $payment_slip_starting_year payment_slip_starting_year
     *
     * @return self
     */
    public function setPaymentSlipStartingYear($payment_slip_starting_year)
    {
        $this->container['payment_slip_starting_year'] = $payment_slip_starting_year;

        return $this;
    }

    /**
     * Gets payment_slip_starting_month
     *
     * @return int|null
     */
    public function getPaymentSlipStartingMonth()
    {
        return $this->container['payment_slip_starting_month'];
    }

    /**
     * Sets payment_slip_starting_month
     *
     * @param int|null $payment_slip_starting_month payment_slip_starting_month
     *
     * @return self
     */
    public function setPaymentSlipStartingMonth($payment_slip_starting_month)
    {
        $this->container['payment_slip_starting_month'] = $payment_slip_starting_month;

        return $this;
    }

    /**
     * Gets cash_invoice_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getCashInvoiceRunningNumberModifiedOn()
    {
        return $this->container['cash_invoice_running_number_modified_on'];
    }

    /**
     * Sets cash_invoice_running_number_modified_on
     *
     * @param \DateTime|null $cash_invoice_running_number_modified_on cash_invoice_running_number_modified_on
     *
     * @return self
     */
    public function setCashInvoiceRunningNumberModifiedOn($cash_invoice_running_number_modified_on)
    {
        $this->container['cash_invoice_running_number_modified_on'] = $cash_invoice_running_number_modified_on;

        return $this;
    }

    /**
     * Gets purchase_order_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getPurchaseOrderRunningNumberModifiedOn()
    {
        return $this->container['purchase_order_running_number_modified_on'];
    }

    /**
     * Sets purchase_order_running_number_modified_on
     *
     * @param \DateTime|null $purchase_order_running_number_modified_on purchase_order_running_number_modified_on
     *
     * @return self
     */
    public function setPurchaseOrderRunningNumberModifiedOn($purchase_order_running_number_modified_on)
    {
        $this->container['purchase_order_running_number_modified_on'] = $purchase_order_running_number_modified_on;

        return $this;
    }

    /**
     * Gets quotation_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getQuotationRunningNumberModifiedOn()
    {
        return $this->container['quotation_running_number_modified_on'];
    }

    /**
     * Sets quotation_running_number_modified_on
     *
     * @param \DateTime|null $quotation_running_number_modified_on quotation_running_number_modified_on
     *
     * @return self
     */
    public function setQuotationRunningNumberModifiedOn($quotation_running_number_modified_on)
    {
        $this->container['quotation_running_number_modified_on'] = $quotation_running_number_modified_on;

        return $this;
    }

    /**
     * Gets billing_note_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getBillingNoteRunningNumberModifiedOn()
    {
        return $this->container['billing_note_running_number_modified_on'];
    }

    /**
     * Sets billing_note_running_number_modified_on
     *
     * @param \DateTime|null $billing_note_running_number_modified_on billing_note_running_number_modified_on
     *
     * @return self
     */
    public function setBillingNoteRunningNumberModifiedOn($billing_note_running_number_modified_on)
    {
        $this->container['billing_note_running_number_modified_on'] = $billing_note_running_number_modified_on;

        return $this;
    }

    /**
     * Gets invoice_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getInvoiceRunningNumberModifiedOn()
    {
        return $this->container['invoice_running_number_modified_on'];
    }

    /**
     * Sets invoice_running_number_modified_on
     *
     * @param \DateTime|null $invoice_running_number_modified_on invoice_running_number_modified_on
     *
     * @return self
     */
    public function setInvoiceRunningNumberModifiedOn($invoice_running_number_modified_on)
    {
        $this->container['invoice_running_number_modified_on'] = $invoice_running_number_modified_on;

        return $this;
    }

    /**
     * Gets purchase_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getPurchaseRunningNumberModifiedOn()
    {
        return $this->container['purchase_running_number_modified_on'];
    }

    /**
     * Sets purchase_running_number_modified_on
     *
     * @param \DateTime|null $purchase_running_number_modified_on purchase_running_number_modified_on
     *
     * @return self
     */
    public function setPurchaseRunningNumberModifiedOn($purchase_running_number_modified_on)
    {
        $this->container['purchase_running_number_modified_on'] = $purchase_running_number_modified_on;

        return $this;
    }

    /**
     * Gets receivable_invoice_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getReceivableInvoiceRunningNumberModifiedOn()
    {
        return $this->container['receivable_invoice_running_number_modified_on'];
    }

    /**
     * Sets receivable_invoice_running_number_modified_on
     *
     * @param \DateTime|null $receivable_invoice_running_number_modified_on receivable_invoice_running_number_modified_on
     *
     * @return self
     */
    public function setReceivableInvoiceRunningNumberModifiedOn($receivable_invoice_running_number_modified_on)
    {
        $this->container['receivable_invoice_running_number_modified_on'] = $receivable_invoice_running_number_modified_on;

        return $this;
    }

    /**
     * Gets payment_slip_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getPaymentSlipRunningNumberModifiedOn()
    {
        return $this->container['payment_slip_running_number_modified_on'];
    }

    /**
     * Sets payment_slip_running_number_modified_on
     *
     * @param \DateTime|null $payment_slip_running_number_modified_on payment_slip_running_number_modified_on
     *
     * @return self
     */
    public function setPaymentSlipRunningNumberModifiedOn($payment_slip_running_number_modified_on)
    {
        $this->container['payment_slip_running_number_modified_on'] = $payment_slip_running_number_modified_on;

        return $this;
    }

    /**
     * Gets rubber_stamp_url
     *
     * @return string|null
     */
    public function getRubberStampUrl()
    {
        return $this->container['rubber_stamp_url'];
    }

    /**
     * Sets rubber_stamp_url
     *
     * @param string|null $rubber_stamp_url rubber_stamp_url
     *
     * @return self
     */
    public function setRubberStampUrl($rubber_stamp_url)
    {
        if (!is_null($rubber_stamp_url) && (mb_strlen($rubber_stamp_url) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $rubber_stamp_url when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if (!is_null($rubber_stamp_url) && (mb_strlen($rubber_stamp_url) < 0)) {
            throw new \InvalidArgumentException('invalid length for $rubber_stamp_url when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['rubber_stamp_url'] = $rubber_stamp_url;

        return $this;
    }

    /**
     * Gets credit_note_prefix
     *
     * @return string
     */
    public function getCreditNotePrefix()
    {
        return $this->container['credit_note_prefix'];
    }

    /**
     * Sets credit_note_prefix
     *
     * @param string $credit_note_prefix credit_note_prefix
     *
     * @return self
     */
    public function setCreditNotePrefix($credit_note_prefix)
    {
        if ((mb_strlen($credit_note_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $credit_note_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($credit_note_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $credit_note_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['credit_note_prefix'] = $credit_note_prefix;

        return $this;
    }

    /**
     * Gets credit_note_starting_number
     *
     * @return int|null
     */
    public function getCreditNoteStartingNumber()
    {
        return $this->container['credit_note_starting_number'];
    }

    /**
     * Sets credit_note_starting_number
     *
     * @param int|null $credit_note_starting_number credit_note_starting_number
     *
     * @return self
     */
    public function setCreditNoteStartingNumber($credit_note_starting_number)
    {
        $this->container['credit_note_starting_number'] = $credit_note_starting_number;

        return $this;
    }

    /**
     * Gets credit_note_starting_month
     *
     * @return int|null
     */
    public function getCreditNoteStartingMonth()
    {
        return $this->container['credit_note_starting_month'];
    }

    /**
     * Sets credit_note_starting_month
     *
     * @param int|null $credit_note_starting_month credit_note_starting_month
     *
     * @return self
     */
    public function setCreditNoteStartingMonth($credit_note_starting_month)
    {
        $this->container['credit_note_starting_month'] = $credit_note_starting_month;

        return $this;
    }

    /**
     * Gets credit_note_starting_year
     *
     * @return int|null
     */
    public function getCreditNoteStartingYear()
    {
        return $this->container['credit_note_starting_year'];
    }

    /**
     * Sets credit_note_starting_year
     *
     * @param int|null $credit_note_starting_year credit_note_starting_year
     *
     * @return self
     */
    public function setCreditNoteStartingYear($credit_note_starting_year)
    {
        $this->container['credit_note_starting_year'] = $credit_note_starting_year;

        return $this;
    }

    /**
     * Gets credit_note_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getCreditNoteRunningNumberModifiedOn()
    {
        return $this->container['credit_note_running_number_modified_on'];
    }

    /**
     * Sets credit_note_running_number_modified_on
     *
     * @param \DateTime|null $credit_note_running_number_modified_on credit_note_running_number_modified_on
     *
     * @return self
     */
    public function setCreditNoteRunningNumberModifiedOn($credit_note_running_number_modified_on)
    {
        $this->container['credit_note_running_number_modified_on'] = $credit_note_running_number_modified_on;

        return $this;
    }

    /**
     * Gets credit_note_title_en
     *
     * @return string
     */
    public function getCreditNoteTitleEn()
    {
        return $this->container['credit_note_title_en'];
    }

    /**
     * Sets credit_note_title_en
     *
     * @param string $credit_note_title_en credit_note_title_en
     *
     * @return self
     */
    public function setCreditNoteTitleEn($credit_note_title_en)
    {
        if ((mb_strlen($credit_note_title_en) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $credit_note_title_en when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($credit_note_title_en) < 0)) {
            throw new \InvalidArgumentException('invalid length for $credit_note_title_en when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['credit_note_title_en'] = $credit_note_title_en;

        return $this;
    }

    /**
     * Gets credit_note_title_th
     *
     * @return string
     */
    public function getCreditNoteTitleTh()
    {
        return $this->container['credit_note_title_th'];
    }

    /**
     * Sets credit_note_title_th
     *
     * @param string $credit_note_title_th credit_note_title_th
     *
     * @return self
     */
    public function setCreditNoteTitleTh($credit_note_title_th)
    {
        if ((mb_strlen($credit_note_title_th) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $credit_note_title_th when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($credit_note_title_th) < 0)) {
            throw new \InvalidArgumentException('invalid length for $credit_note_title_th when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['credit_note_title_th'] = $credit_note_title_th;

        return $this;
    }

    /**
     * Gets debit_note_prefix
     *
     * @return string
     */
    public function getDebitNotePrefix()
    {
        return $this->container['debit_note_prefix'];
    }

    /**
     * Sets debit_note_prefix
     *
     * @param string $debit_note_prefix debit_note_prefix
     *
     * @return self
     */
    public function setDebitNotePrefix($debit_note_prefix)
    {
        if ((mb_strlen($debit_note_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $debit_note_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($debit_note_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $debit_note_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['debit_note_prefix'] = $debit_note_prefix;

        return $this;
    }

    /**
     * Gets debit_note_starting_number
     *
     * @return int|null
     */
    public function getDebitNoteStartingNumber()
    {
        return $this->container['debit_note_starting_number'];
    }

    /**
     * Sets debit_note_starting_number
     *
     * @param int|null $debit_note_starting_number debit_note_starting_number
     *
     * @return self
     */
    public function setDebitNoteStartingNumber($debit_note_starting_number)
    {
        $this->container['debit_note_starting_number'] = $debit_note_starting_number;

        return $this;
    }

    /**
     * Gets debit_note_starting_month
     *
     * @return int|null
     */
    public function getDebitNoteStartingMonth()
    {
        return $this->container['debit_note_starting_month'];
    }

    /**
     * Sets debit_note_starting_month
     *
     * @param int|null $debit_note_starting_month debit_note_starting_month
     *
     * @return self
     */
    public function setDebitNoteStartingMonth($debit_note_starting_month)
    {
        $this->container['debit_note_starting_month'] = $debit_note_starting_month;

        return $this;
    }

    /**
     * Gets debit_note_starting_year
     *
     * @return int|null
     */
    public function getDebitNoteStartingYear()
    {
        return $this->container['debit_note_starting_year'];
    }

    /**
     * Sets debit_note_starting_year
     *
     * @param int|null $debit_note_starting_year debit_note_starting_year
     *
     * @return self
     */
    public function setDebitNoteStartingYear($debit_note_starting_year)
    {
        $this->container['debit_note_starting_year'] = $debit_note_starting_year;

        return $this;
    }

    /**
     * Gets debit_note_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getDebitNoteRunningNumberModifiedOn()
    {
        return $this->container['debit_note_running_number_modified_on'];
    }

    /**
     * Sets debit_note_running_number_modified_on
     *
     * @param \DateTime|null $debit_note_running_number_modified_on debit_note_running_number_modified_on
     *
     * @return self
     */
    public function setDebitNoteRunningNumberModifiedOn($debit_note_running_number_modified_on)
    {
        $this->container['debit_note_running_number_modified_on'] = $debit_note_running_number_modified_on;

        return $this;
    }

    /**
     * Gets debit_note_title_en
     *
     * @return string
     */
    public function getDebitNoteTitleEn()
    {
        return $this->container['debit_note_title_en'];
    }

    /**
     * Sets debit_note_title_en
     *
     * @param string $debit_note_title_en debit_note_title_en
     *
     * @return self
     */
    public function setDebitNoteTitleEn($debit_note_title_en)
    {
        if ((mb_strlen($debit_note_title_en) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $debit_note_title_en when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($debit_note_title_en) < 0)) {
            throw new \InvalidArgumentException('invalid length for $debit_note_title_en when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['debit_note_title_en'] = $debit_note_title_en;

        return $this;
    }

    /**
     * Gets debit_note_title_th
     *
     * @return string
     */
    public function getDebitNoteTitleTh()
    {
        return $this->container['debit_note_title_th'];
    }

    /**
     * Sets debit_note_title_th
     *
     * @param string $debit_note_title_th debit_note_title_th
     *
     * @return self
     */
    public function setDebitNoteTitleTh($debit_note_title_th)
    {
        if ((mb_strlen($debit_note_title_th) > 2147483647)) {
            throw new \InvalidArgumentException('invalid length for $debit_note_title_th when calling CompanyPreferences., must be smaller than or equal to 2147483647.');
        }
        if ((mb_strlen($debit_note_title_th) < 0)) {
            throw new \InvalidArgumentException('invalid length for $debit_note_title_th when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['debit_note_title_th'] = $debit_note_title_th;

        return $this;
    }

    /**
     * Gets receipt_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getReceiptRunningNumberModifiedOn()
    {
        return $this->container['receipt_running_number_modified_on'];
    }

    /**
     * Sets receipt_running_number_modified_on
     *
     * @param \DateTime|null $receipt_running_number_modified_on receipt_running_number_modified_on
     *
     * @return self
     */
    public function setReceiptRunningNumberModifiedOn($receipt_running_number_modified_on)
    {
        $this->container['receipt_running_number_modified_on'] = $receipt_running_number_modified_on;

        return $this;
    }

    /**
     * Gets receivable_invoice_starting_number
     *
     * @return int|null
     */
    public function getReceivableInvoiceStartingNumber()
    {
        return $this->container['receivable_invoice_starting_number'];
    }

    /**
     * Sets receivable_invoice_starting_number
     *
     * @param int|null $receivable_invoice_starting_number receivable_invoice_starting_number
     *
     * @return self
     */
    public function setReceivableInvoiceStartingNumber($receivable_invoice_starting_number)
    {
        $this->container['receivable_invoice_starting_number'] = $receivable_invoice_starting_number;

        return $this;
    }

    /**
     * Gets receivable_invoice_starting_month
     *
     * @return int|null
     */
    public function getReceivableInvoiceStartingMonth()
    {
        return $this->container['receivable_invoice_starting_month'];
    }

    /**
     * Sets receivable_invoice_starting_month
     *
     * @param int|null $receivable_invoice_starting_month receivable_invoice_starting_month
     *
     * @return self
     */
    public function setReceivableInvoiceStartingMonth($receivable_invoice_starting_month)
    {
        $this->container['receivable_invoice_starting_month'] = $receivable_invoice_starting_month;

        return $this;
    }

    /**
     * Gets receivable_invoice_starting_year
     *
     * @return int|null
     */
    public function getReceivableInvoiceStartingYear()
    {
        return $this->container['receivable_invoice_starting_year'];
    }

    /**
     * Sets receivable_invoice_starting_year
     *
     * @param int|null $receivable_invoice_starting_year receivable_invoice_starting_year
     *
     * @return self
     */
    public function setReceivableInvoiceStartingYear($receivable_invoice_starting_year)
    {
        $this->container['receivable_invoice_starting_year'] = $receivable_invoice_starting_year;

        return $this;
    }

    /**
     * Gets use_partial_receipt
     *
     * @return bool|null
     */
    public function getUsePartialReceipt()
    {
        return $this->container['use_partial_receipt'];
    }

    /**
     * Sets use_partial_receipt
     *
     * @param bool|null $use_partial_receipt use_partial_receipt
     *
     * @return self
     */
    public function setUsePartialReceipt($use_partial_receipt)
    {
        $this->container['use_partial_receipt'] = $use_partial_receipt;

        return $this;
    }

    /**
     * Gets use_cash_invoice
     *
     * @return bool|null
     */
    public function getUseCashInvoice()
    {
        return $this->container['use_cash_invoice'];
    }

    /**
     * Sets use_cash_invoice
     *
     * @param bool|null $use_cash_invoice use_cash_invoice
     *
     * @return self
     */
    public function setUseCashInvoice($use_cash_invoice)
    {
        $this->container['use_cash_invoice'] = $use_cash_invoice;

        return $this;
    }

    /**
     * Gets use_short_cash_invoice
     *
     * @return bool|null
     */
    public function getUseShortCashInvoice()
    {
        return $this->container['use_short_cash_invoice'];
    }

    /**
     * Sets use_short_cash_invoice
     *
     * @param bool|null $use_short_cash_invoice use_short_cash_invoice
     *
     * @return self
     */
    public function setUseShortCashInvoice($use_short_cash_invoice)
    {
        $this->container['use_short_cash_invoice'] = $use_short_cash_invoice;

        return $this;
    }

    /**
     * Gets general_ledger_running_number_type
     *
     * @return \OpenAPI\Client\Model\RunningNumberType|null
     */
    public function getGeneralLedgerRunningNumberType()
    {
        return $this->container['general_ledger_running_number_type'];
    }

    /**
     * Sets general_ledger_running_number_type
     *
     * @param \OpenAPI\Client\Model\RunningNumberType|null $general_ledger_running_number_type general_ledger_running_number_type
     *
     * @return self
     */
    public function setGeneralLedgerRunningNumberType($general_ledger_running_number_type)
    {
        $this->container['general_ledger_running_number_type'] = $general_ledger_running_number_type;

        return $this;
    }

    /**
     * Gets journal_voucher_prefix
     *
     * @return string
     */
    public function getJournalVoucherPrefix()
    {
        return $this->container['journal_voucher_prefix'];
    }

    /**
     * Sets journal_voucher_prefix
     *
     * @param string $journal_voucher_prefix journal_voucher_prefix
     *
     * @return self
     */
    public function setJournalVoucherPrefix($journal_voucher_prefix)
    {
        if ((mb_strlen($journal_voucher_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $journal_voucher_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($journal_voucher_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $journal_voucher_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['journal_voucher_prefix'] = $journal_voucher_prefix;

        return $this;
    }

    /**
     * Gets purchase_voucher_prefix
     *
     * @return string
     */
    public function getPurchaseVoucherPrefix()
    {
        return $this->container['purchase_voucher_prefix'];
    }

    /**
     * Sets purchase_voucher_prefix
     *
     * @param string $purchase_voucher_prefix purchase_voucher_prefix
     *
     * @return self
     */
    public function setPurchaseVoucherPrefix($purchase_voucher_prefix)
    {
        if ((mb_strlen($purchase_voucher_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $purchase_voucher_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($purchase_voucher_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $purchase_voucher_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['purchase_voucher_prefix'] = $purchase_voucher_prefix;

        return $this;
    }

    /**
     * Gets purchase_voucher_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getPurchaseVoucherRunningNumberModifiedOn()
    {
        return $this->container['purchase_voucher_running_number_modified_on'];
    }

    /**
     * Sets purchase_voucher_running_number_modified_on
     *
     * @param \DateTime|null $purchase_voucher_running_number_modified_on purchase_voucher_running_number_modified_on
     *
     * @return self
     */
    public function setPurchaseVoucherRunningNumberModifiedOn($purchase_voucher_running_number_modified_on)
    {
        $this->container['purchase_voucher_running_number_modified_on'] = $purchase_voucher_running_number_modified_on;

        return $this;
    }

    /**
     * Gets sales_voucher_prefix
     *
     * @return string
     */
    public function getSalesVoucherPrefix()
    {
        return $this->container['sales_voucher_prefix'];
    }

    /**
     * Sets sales_voucher_prefix
     *
     * @param string $sales_voucher_prefix sales_voucher_prefix
     *
     * @return self
     */
    public function setSalesVoucherPrefix($sales_voucher_prefix)
    {
        if ((mb_strlen($sales_voucher_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $sales_voucher_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($sales_voucher_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $sales_voucher_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['sales_voucher_prefix'] = $sales_voucher_prefix;

        return $this;
    }

    /**
     * Gets sales_voucher_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getSalesVoucherRunningNumberModifiedOn()
    {
        return $this->container['sales_voucher_running_number_modified_on'];
    }

    /**
     * Sets sales_voucher_running_number_modified_on
     *
     * @param \DateTime|null $sales_voucher_running_number_modified_on sales_voucher_running_number_modified_on
     *
     * @return self
     */
    public function setSalesVoucherRunningNumberModifiedOn($sales_voucher_running_number_modified_on)
    {
        $this->container['sales_voucher_running_number_modified_on'] = $sales_voucher_running_number_modified_on;

        return $this;
    }

    /**
     * Gets payment_voucher_prefix
     *
     * @return string
     */
    public function getPaymentVoucherPrefix()
    {
        return $this->container['payment_voucher_prefix'];
    }

    /**
     * Sets payment_voucher_prefix
     *
     * @param string $payment_voucher_prefix payment_voucher_prefix
     *
     * @return self
     */
    public function setPaymentVoucherPrefix($payment_voucher_prefix)
    {
        if ((mb_strlen($payment_voucher_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $payment_voucher_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($payment_voucher_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $payment_voucher_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['payment_voucher_prefix'] = $payment_voucher_prefix;

        return $this;
    }

    /**
     * Gets payment_voucher_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getPaymentVoucherRunningNumberModifiedOn()
    {
        return $this->container['payment_voucher_running_number_modified_on'];
    }

    /**
     * Sets payment_voucher_running_number_modified_on
     *
     * @param \DateTime|null $payment_voucher_running_number_modified_on payment_voucher_running_number_modified_on
     *
     * @return self
     */
    public function setPaymentVoucherRunningNumberModifiedOn($payment_voucher_running_number_modified_on)
    {
        $this->container['payment_voucher_running_number_modified_on'] = $payment_voucher_running_number_modified_on;

        return $this;
    }

    /**
     * Gets received_voucher_prefix
     *
     * @return string
     */
    public function getReceivedVoucherPrefix()
    {
        return $this->container['received_voucher_prefix'];
    }

    /**
     * Sets received_voucher_prefix
     *
     * @param string $received_voucher_prefix received_voucher_prefix
     *
     * @return self
     */
    public function setReceivedVoucherPrefix($received_voucher_prefix)
    {
        if ((mb_strlen($received_voucher_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $received_voucher_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($received_voucher_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $received_voucher_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['received_voucher_prefix'] = $received_voucher_prefix;

        return $this;
    }

    /**
     * Gets received_voucher_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getReceivedVoucherRunningNumberModifiedOn()
    {
        return $this->container['received_voucher_running_number_modified_on'];
    }

    /**
     * Sets received_voucher_running_number_modified_on
     *
     * @param \DateTime|null $received_voucher_running_number_modified_on received_voucher_running_number_modified_on
     *
     * @return self
     */
    public function setReceivedVoucherRunningNumberModifiedOn($received_voucher_running_number_modified_on)
    {
        $this->container['received_voucher_running_number_modified_on'] = $received_voucher_running_number_modified_on;

        return $this;
    }

    /**
     * Gets conversion_balance_prefix
     *
     * @return string
     */
    public function getConversionBalancePrefix()
    {
        return $this->container['conversion_balance_prefix'];
    }

    /**
     * Sets conversion_balance_prefix
     *
     * @param string $conversion_balance_prefix conversion_balance_prefix
     *
     * @return self
     */
    public function setConversionBalancePrefix($conversion_balance_prefix)
    {
        if ((mb_strlen($conversion_balance_prefix) > 6)) {
            throw new \InvalidArgumentException('invalid length for $conversion_balance_prefix when calling CompanyPreferences., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($conversion_balance_prefix) < 0)) {
            throw new \InvalidArgumentException('invalid length for $conversion_balance_prefix when calling CompanyPreferences., must be bigger than or equal to 0.');
        }

        $this->container['conversion_balance_prefix'] = $conversion_balance_prefix;

        return $this;
    }

    /**
     * Gets conversion_balance_running_number_modified_on
     *
     * @return \DateTime|null
     */
    public function getConversionBalanceRunningNumberModifiedOn()
    {
        return $this->container['conversion_balance_running_number_modified_on'];
    }

    /**
     * Sets conversion_balance_running_number_modified_on
     *
     * @param \DateTime|null $conversion_balance_running_number_modified_on conversion_balance_running_number_modified_on
     *
     * @return self
     */
    public function setConversionBalanceRunningNumberModifiedOn($conversion_balance_running_number_modified_on)
    {
        $this->container['conversion_balance_running_number_modified_on'] = $conversion_balance_running_number_modified_on;

        return $this;
    }

    /**
     * Gets e_tax_email
     *
     * @return string|null
     */
    public function getETaxEmail()
    {
        return $this->container['e_tax_email'];
    }

    /**
     * Sets e_tax_email
     *
     * @param string|null $e_tax_email e_tax_email
     *
     * @return self
     */
    public function setETaxEmail($e_tax_email)
    {
        $this->container['e_tax_email'] = $e_tax_email;

        return $this;
    }

    /**
     * Gets short_cash_invoice_templates
     *
     * @return \OpenAPI\Client\Model\DocumentTemplates|null
     */
    public function getShortCashInvoiceTemplates()
    {
        return $this->container['short_cash_invoice_templates'];
    }

    /**
     * Sets short_cash_invoice_templates
     *
     * @param \OpenAPI\Client\Model\DocumentTemplates|null $short_cash_invoice_templates short_cash_invoice_templates
     *
     * @return self
     */
    public function setShortCashInvoiceTemplates($short_cash_invoice_templates)
    {
        $this->container['short_cash_invoice_templates'] = $short_cash_invoice_templates;

        return $this;
    }

    /**
     * Gets use_billing_note_accounting_rule
     *
     * @return bool|null
     */
    public function getUseBillingNoteAccountingRule()
    {
        return $this->container['use_billing_note_accounting_rule'];
    }

    /**
     * Sets use_billing_note_accounting_rule
     *
     * @param bool|null $use_billing_note_accounting_rule use_billing_note_accounting_rule
     *
     * @return self
     */
    public function setUseBillingNoteAccountingRule($use_billing_note_accounting_rule)
    {
        $this->container['use_billing_note_accounting_rule'] = $use_billing_note_accounting_rule;

        return $this;
    }

    /**
     * Gets billing_note_accounting_rule_modified_on
     *
     * @return \DateTime|null
     */
    public function getBillingNoteAccountingRuleModifiedOn()
    {
        return $this->container['billing_note_accounting_rule_modified_on'];
    }

    /**
     * Sets billing_note_accounting_rule_modified_on
     *
     * @param \DateTime|null $billing_note_accounting_rule_modified_on billing_note_accounting_rule_modified_on
     *
     * @return self
     */
    public function setBillingNoteAccountingRuleModifiedOn($billing_note_accounting_rule_modified_on)
    {
        $this->container['billing_note_accounting_rule_modified_on'] = $billing_note_accounting_rule_modified_on;

        return $this;
    }

    /**
     * Gets template_font_size
     *
     * @return float|null
     */
    public function getTemplateFontSize()
    {
        return $this->container['template_font_size'];
    }

    /**
     * Sets template_font_size
     *
     * @param float|null $template_font_size template_font_size
     *
     * @return self
     */
    public function setTemplateFontSize($template_font_size)
    {
        $this->container['template_font_size'] = $template_font_size;

        return $this;
    }

    /**
     * Gets use_multi_currency
     *
     * @return bool|null
     */
    public function getUseMultiCurrency()
    {
        return $this->container['use_multi_currency'];
    }

    /**
     * Sets use_multi_currency
     *
     * @param bool|null $use_multi_currency use_multi_currency
     *
     * @return self
     */
    public function setUseMultiCurrency($use_multi_currency)
    {
        $this->container['use_multi_currency'] = $use_multi_currency;

        return $this;
    }

    /**
     * Gets expense_title_th
     *
     * @return string|null
     */
    public function getExpenseTitleTh()
    {
        return $this->container['expense_title_th'];
    }

    /**
     * Sets expense_title_th
     *
     * @param string|null $expense_title_th expense_title_th
     *
     * @return self
     */
    public function setExpenseTitleTh($expense_title_th)
    {
        $this->container['expense_title_th'] = $expense_title_th;

        return $this;
    }

    /**
     * Gets expense_title_en
     *
     * @return string|null
     */
    public function getExpenseTitleEn()
    {
        return $this->container['expense_title_en'];
    }

    /**
     * Sets expense_title_en
     *
     * @param string|null $expense_title_en expense_title_en
     *
     * @return self
     */
    public function setExpenseTitleEn($expense_title_en)
    {
        $this->container['expense_title_en'] = $expense_title_en;

        return $this;
    }

    /**
     * Gets with_holding_tax_title_th
     *
     * @return string|null
     */
    public function getWithHoldingTaxTitleTh()
    {
        return $this->container['with_holding_tax_title_th'];
    }

    /**
     * Sets with_holding_tax_title_th
     *
     * @param string|null $with_holding_tax_title_th with_holding_tax_title_th
     *
     * @return self
     */
    public function setWithHoldingTaxTitleTh($with_holding_tax_title_th)
    {
        $this->container['with_holding_tax_title_th'] = $with_holding_tax_title_th;

        return $this;
    }

    /**
     * Gets with_holding_tax_title_en
     *
     * @return string|null
     */
    public function getWithHoldingTaxTitleEn()
    {
        return $this->container['with_holding_tax_title_en'];
    }

    /**
     * Sets with_holding_tax_title_en
     *
     * @param string|null $with_holding_tax_title_en with_holding_tax_title_en
     *
     * @return self
     */
    public function setWithHoldingTaxTitleEn($with_holding_tax_title_en)
    {
        $this->container['with_holding_tax_title_en'] = $with_holding_tax_title_en;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


