<?php
/**
 * Contact
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * FlowAccount Open API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Contact Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Contact implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Contact';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'name_local' => 'string',
        'name_foreign' => 'string',
        'address_local' => 'string',
        'address_foreign' => 'string',
        'address_local_line2' => 'string',
        'address_foreign_line2' => 'string',
        'address_local_line3' => 'string',
        'address_foreign_line3' => 'string',
        'branch' => 'string',
        'branch_foreign' => 'string',
        'company_tax_id' => 'string',
        'fax' => 'string',
        'phone1' => 'string',
        'phone2' => 'string',
        'phone3' => 'string',
        'websites' => 'string',
        'created_on' => '\DateTime',
        'modified_on' => '\DateTime',
        'modified_by' => 'int',
        'is_delete' => 'bool',
        'is_default' => 'bool',
        'logo_image' => 'string',
        'default_credit_days' => 'int',
        'vat_rate' => 'int',
        'email' => 'string',
        'contact_person' => 'string',
        'is_active' => 'bool',
        'contact_type' => '\OpenAPI\Client\Model\ContactTypes',
        'contact_group' => '\OpenAPI\Client\Model\ContactGroups',
        'remarks' => 'string',
        'gallery_id' => 'int',
        'branch_code' => 'string',
        'transaction_id' => 'string',
        'reset_transaction_id' => 'int',
        'contact_code' => 'string',
        'internal_notes' => 'string',
        'shipping_address' => 'string',
        'zip_code' => 'string',
        'swift_code' => 'string',
        'bank_address' => 'string',
        'use_foreign_bank' => 'bool',
        'is_migrate' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'name_local' => null,
        'name_foreign' => null,
        'address_local' => null,
        'address_foreign' => null,
        'address_local_line2' => null,
        'address_foreign_line2' => null,
        'address_local_line3' => null,
        'address_foreign_line3' => null,
        'branch' => null,
        'branch_foreign' => null,
        'company_tax_id' => null,
        'fax' => null,
        'phone1' => null,
        'phone2' => null,
        'phone3' => null,
        'websites' => null,
        'created_on' => 'date-time',
        'modified_on' => 'date-time',
        'modified_by' => 'int64',
        'is_delete' => null,
        'is_default' => null,
        'logo_image' => null,
        'default_credit_days' => 'int32',
        'vat_rate' => 'int32',
        'email' => null,
        'contact_person' => null,
        'is_active' => null,
        'contact_type' => null,
        'contact_group' => null,
        'remarks' => null,
        'gallery_id' => 'int64',
        'branch_code' => null,
        'transaction_id' => null,
        'reset_transaction_id' => 'int64',
        'contact_code' => null,
        'internal_notes' => null,
        'shipping_address' => null,
        'zip_code' => null,
        'swift_code' => null,
        'bank_address' => null,
        'use_foreign_bank' => null,
        'is_migrate' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name_local' => 'nameLocal',
        'name_foreign' => 'nameForeign',
        'address_local' => 'addressLocal',
        'address_foreign' => 'addressForeign',
        'address_local_line2' => 'addressLocalLine2',
        'address_foreign_line2' => 'addressForeignLine2',
        'address_local_line3' => 'addressLocalLine3',
        'address_foreign_line3' => 'addressForeignLine3',
        'branch' => 'branch',
        'branch_foreign' => 'branchForeign',
        'company_tax_id' => 'companyTaxId',
        'fax' => 'fax',
        'phone1' => 'phone1',
        'phone2' => 'phone2',
        'phone3' => 'phone3',
        'websites' => 'websites',
        'created_on' => 'createdOn',
        'modified_on' => 'modifiedOn',
        'modified_by' => 'modifiedBy',
        'is_delete' => 'isDelete',
        'is_default' => 'isDefault',
        'logo_image' => 'logoImage',
        'default_credit_days' => 'defaultCreditDays',
        'vat_rate' => 'vatRate',
        'email' => 'email',
        'contact_person' => 'contactPerson',
        'is_active' => 'isActive',
        'contact_type' => 'contactType',
        'contact_group' => 'contactGroup',
        'remarks' => 'remarks',
        'gallery_id' => 'galleryId',
        'branch_code' => 'branchCode',
        'transaction_id' => 'transactionId',
        'reset_transaction_id' => 'resetTransactionId',
        'contact_code' => 'contactCode',
        'internal_notes' => 'internalNotes',
        'shipping_address' => 'shippingAddress',
        'zip_code' => 'zipCode',
        'swift_code' => 'swiftCode',
        'bank_address' => 'bankAddress',
        'use_foreign_bank' => 'useForeignBank',
        'is_migrate' => 'isMigrate'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name_local' => 'setNameLocal',
        'name_foreign' => 'setNameForeign',
        'address_local' => 'setAddressLocal',
        'address_foreign' => 'setAddressForeign',
        'address_local_line2' => 'setAddressLocalLine2',
        'address_foreign_line2' => 'setAddressForeignLine2',
        'address_local_line3' => 'setAddressLocalLine3',
        'address_foreign_line3' => 'setAddressForeignLine3',
        'branch' => 'setBranch',
        'branch_foreign' => 'setBranchForeign',
        'company_tax_id' => 'setCompanyTaxId',
        'fax' => 'setFax',
        'phone1' => 'setPhone1',
        'phone2' => 'setPhone2',
        'phone3' => 'setPhone3',
        'websites' => 'setWebsites',
        'created_on' => 'setCreatedOn',
        'modified_on' => 'setModifiedOn',
        'modified_by' => 'setModifiedBy',
        'is_delete' => 'setIsDelete',
        'is_default' => 'setIsDefault',
        'logo_image' => 'setLogoImage',
        'default_credit_days' => 'setDefaultCreditDays',
        'vat_rate' => 'setVatRate',
        'email' => 'setEmail',
        'contact_person' => 'setContactPerson',
        'is_active' => 'setIsActive',
        'contact_type' => 'setContactType',
        'contact_group' => 'setContactGroup',
        'remarks' => 'setRemarks',
        'gallery_id' => 'setGalleryId',
        'branch_code' => 'setBranchCode',
        'transaction_id' => 'setTransactionId',
        'reset_transaction_id' => 'setResetTransactionId',
        'contact_code' => 'setContactCode',
        'internal_notes' => 'setInternalNotes',
        'shipping_address' => 'setShippingAddress',
        'zip_code' => 'setZipCode',
        'swift_code' => 'setSwiftCode',
        'bank_address' => 'setBankAddress',
        'use_foreign_bank' => 'setUseForeignBank',
        'is_migrate' => 'setIsMigrate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name_local' => 'getNameLocal',
        'name_foreign' => 'getNameForeign',
        'address_local' => 'getAddressLocal',
        'address_foreign' => 'getAddressForeign',
        'address_local_line2' => 'getAddressLocalLine2',
        'address_foreign_line2' => 'getAddressForeignLine2',
        'address_local_line3' => 'getAddressLocalLine3',
        'address_foreign_line3' => 'getAddressForeignLine3',
        'branch' => 'getBranch',
        'branch_foreign' => 'getBranchForeign',
        'company_tax_id' => 'getCompanyTaxId',
        'fax' => 'getFax',
        'phone1' => 'getPhone1',
        'phone2' => 'getPhone2',
        'phone3' => 'getPhone3',
        'websites' => 'getWebsites',
        'created_on' => 'getCreatedOn',
        'modified_on' => 'getModifiedOn',
        'modified_by' => 'getModifiedBy',
        'is_delete' => 'getIsDelete',
        'is_default' => 'getIsDefault',
        'logo_image' => 'getLogoImage',
        'default_credit_days' => 'getDefaultCreditDays',
        'vat_rate' => 'getVatRate',
        'email' => 'getEmail',
        'contact_person' => 'getContactPerson',
        'is_active' => 'getIsActive',
        'contact_type' => 'getContactType',
        'contact_group' => 'getContactGroup',
        'remarks' => 'getRemarks',
        'gallery_id' => 'getGalleryId',
        'branch_code' => 'getBranchCode',
        'transaction_id' => 'getTransactionId',
        'reset_transaction_id' => 'getResetTransactionId',
        'contact_code' => 'getContactCode',
        'internal_notes' => 'getInternalNotes',
        'shipping_address' => 'getShippingAddress',
        'zip_code' => 'getZipCode',
        'swift_code' => 'getSwiftCode',
        'bank_address' => 'getBankAddress',
        'use_foreign_bank' => 'getUseForeignBank',
        'is_migrate' => 'getIsMigrate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['name_local'] = $data['name_local'] ?? null;
        $this->container['name_foreign'] = $data['name_foreign'] ?? null;
        $this->container['address_local'] = $data['address_local'] ?? null;
        $this->container['address_foreign'] = $data['address_foreign'] ?? null;
        $this->container['address_local_line2'] = $data['address_local_line2'] ?? null;
        $this->container['address_foreign_line2'] = $data['address_foreign_line2'] ?? null;
        $this->container['address_local_line3'] = $data['address_local_line3'] ?? null;
        $this->container['address_foreign_line3'] = $data['address_foreign_line3'] ?? null;
        $this->container['branch'] = $data['branch'] ?? null;
        $this->container['branch_foreign'] = $data['branch_foreign'] ?? null;
        $this->container['company_tax_id'] = $data['company_tax_id'] ?? null;
        $this->container['fax'] = $data['fax'] ?? null;
        $this->container['phone1'] = $data['phone1'] ?? null;
        $this->container['phone2'] = $data['phone2'] ?? null;
        $this->container['phone3'] = $data['phone3'] ?? null;
        $this->container['websites'] = $data['websites'] ?? null;
        $this->container['created_on'] = $data['created_on'] ?? null;
        $this->container['modified_on'] = $data['modified_on'] ?? null;
        $this->container['modified_by'] = $data['modified_by'] ?? null;
        $this->container['is_delete'] = $data['is_delete'] ?? null;
        $this->container['is_default'] = $data['is_default'] ?? null;
        $this->container['logo_image'] = $data['logo_image'] ?? null;
        $this->container['default_credit_days'] = $data['default_credit_days'] ?? null;
        $this->container['vat_rate'] = $data['vat_rate'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['contact_person'] = $data['contact_person'] ?? null;
        $this->container['is_active'] = $data['is_active'] ?? null;
        $this->container['contact_type'] = $data['contact_type'] ?? null;
        $this->container['contact_group'] = $data['contact_group'] ?? null;
        $this->container['remarks'] = $data['remarks'] ?? null;
        $this->container['gallery_id'] = $data['gallery_id'] ?? null;
        $this->container['branch_code'] = $data['branch_code'] ?? null;
        $this->container['transaction_id'] = $data['transaction_id'] ?? null;
        $this->container['reset_transaction_id'] = $data['reset_transaction_id'] ?? null;
        $this->container['contact_code'] = $data['contact_code'] ?? null;
        $this->container['internal_notes'] = $data['internal_notes'] ?? null;
        $this->container['shipping_address'] = $data['shipping_address'] ?? null;
        $this->container['zip_code'] = $data['zip_code'] ?? null;
        $this->container['swift_code'] = $data['swift_code'] ?? null;
        $this->container['bank_address'] = $data['bank_address'] ?? null;
        $this->container['use_foreign_bank'] = $data['use_foreign_bank'] ?? null;
        $this->container['is_migrate'] = $data['is_migrate'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['branch_code']) && (mb_strlen($this->container['branch_code']) > 50)) {
            $invalidProperties[] = "invalid value for 'branch_code', the character length must be smaller than or equal to 50.";
        }

        if (!is_null($this->container['branch_code']) && (mb_strlen($this->container['branch_code']) < 0)) {
            $invalidProperties[] = "invalid value for 'branch_code', the character length must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['transaction_id']) && (mb_strlen($this->container['transaction_id']) > 50)) {
            $invalidProperties[] = "invalid value for 'transaction_id', the character length must be smaller than or equal to 50.";
        }

        if (!is_null($this->container['transaction_id']) && (mb_strlen($this->container['transaction_id']) < 0)) {
            $invalidProperties[] = "invalid value for 'transaction_id', the character length must be bigger than or equal to 0.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name_local
     *
     * @return string|null
     */
    public function getNameLocal()
    {
        return $this->container['name_local'];
    }

    /**
     * Sets name_local
     *
     * @param string|null $name_local name_local
     *
     * @return self
     */
    public function setNameLocal($name_local)
    {
        $this->container['name_local'] = $name_local;

        return $this;
    }

    /**
     * Gets name_foreign
     *
     * @return string|null
     */
    public function getNameForeign()
    {
        return $this->container['name_foreign'];
    }

    /**
     * Sets name_foreign
     *
     * @param string|null $name_foreign name_foreign
     *
     * @return self
     */
    public function setNameForeign($name_foreign)
    {
        $this->container['name_foreign'] = $name_foreign;

        return $this;
    }

    /**
     * Gets address_local
     *
     * @return string|null
     */
    public function getAddressLocal()
    {
        return $this->container['address_local'];
    }

    /**
     * Sets address_local
     *
     * @param string|null $address_local address_local
     *
     * @return self
     */
    public function setAddressLocal($address_local)
    {
        $this->container['address_local'] = $address_local;

        return $this;
    }

    /**
     * Gets address_foreign
     *
     * @return string|null
     */
    public function getAddressForeign()
    {
        return $this->container['address_foreign'];
    }

    /**
     * Sets address_foreign
     *
     * @param string|null $address_foreign address_foreign
     *
     * @return self
     */
    public function setAddressForeign($address_foreign)
    {
        $this->container['address_foreign'] = $address_foreign;

        return $this;
    }

    /**
     * Gets address_local_line2
     *
     * @return string|null
     */
    public function getAddressLocalLine2()
    {
        return $this->container['address_local_line2'];
    }

    /**
     * Sets address_local_line2
     *
     * @param string|null $address_local_line2 address_local_line2
     *
     * @return self
     */
    public function setAddressLocalLine2($address_local_line2)
    {
        $this->container['address_local_line2'] = $address_local_line2;

        return $this;
    }

    /**
     * Gets address_foreign_line2
     *
     * @return string|null
     */
    public function getAddressForeignLine2()
    {
        return $this->container['address_foreign_line2'];
    }

    /**
     * Sets address_foreign_line2
     *
     * @param string|null $address_foreign_line2 address_foreign_line2
     *
     * @return self
     */
    public function setAddressForeignLine2($address_foreign_line2)
    {
        $this->container['address_foreign_line2'] = $address_foreign_line2;

        return $this;
    }

    /**
     * Gets address_local_line3
     *
     * @return string|null
     */
    public function getAddressLocalLine3()
    {
        return $this->container['address_local_line3'];
    }

    /**
     * Sets address_local_line3
     *
     * @param string|null $address_local_line3 address_local_line3
     *
     * @return self
     */
    public function setAddressLocalLine3($address_local_line3)
    {
        $this->container['address_local_line3'] = $address_local_line3;

        return $this;
    }

    /**
     * Gets address_foreign_line3
     *
     * @return string|null
     */
    public function getAddressForeignLine3()
    {
        return $this->container['address_foreign_line3'];
    }

    /**
     * Sets address_foreign_line3
     *
     * @param string|null $address_foreign_line3 address_foreign_line3
     *
     * @return self
     */
    public function setAddressForeignLine3($address_foreign_line3)
    {
        $this->container['address_foreign_line3'] = $address_foreign_line3;

        return $this;
    }

    /**
     * Gets branch
     *
     * @return string|null
     */
    public function getBranch()
    {
        return $this->container['branch'];
    }

    /**
     * Sets branch
     *
     * @param string|null $branch branch
     *
     * @return self
     */
    public function setBranch($branch)
    {
        $this->container['branch'] = $branch;

        return $this;
    }

    /**
     * Gets branch_foreign
     *
     * @return string|null
     */
    public function getBranchForeign()
    {
        return $this->container['branch_foreign'];
    }

    /**
     * Sets branch_foreign
     *
     * @param string|null $branch_foreign branch_foreign
     *
     * @return self
     */
    public function setBranchForeign($branch_foreign)
    {
        $this->container['branch_foreign'] = $branch_foreign;

        return $this;
    }

    /**
     * Gets company_tax_id
     *
     * @return string|null
     */
    public function getCompanyTaxId()
    {
        return $this->container['company_tax_id'];
    }

    /**
     * Sets company_tax_id
     *
     * @param string|null $company_tax_id company_tax_id
     *
     * @return self
     */
    public function setCompanyTaxId($company_tax_id)
    {
        $this->container['company_tax_id'] = $company_tax_id;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string|null
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string|null $fax fax
     *
     * @return self
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets phone1
     *
     * @return string|null
     */
    public function getPhone1()
    {
        return $this->container['phone1'];
    }

    /**
     * Sets phone1
     *
     * @param string|null $phone1 phone1
     *
     * @return self
     */
    public function setPhone1($phone1)
    {
        $this->container['phone1'] = $phone1;

        return $this;
    }

    /**
     * Gets phone2
     *
     * @return string|null
     */
    public function getPhone2()
    {
        return $this->container['phone2'];
    }

    /**
     * Sets phone2
     *
     * @param string|null $phone2 phone2
     *
     * @return self
     */
    public function setPhone2($phone2)
    {
        $this->container['phone2'] = $phone2;

        return $this;
    }

    /**
     * Gets phone3
     *
     * @return string|null
     */
    public function getPhone3()
    {
        return $this->container['phone3'];
    }

    /**
     * Sets phone3
     *
     * @param string|null $phone3 phone3
     *
     * @return self
     */
    public function setPhone3($phone3)
    {
        $this->container['phone3'] = $phone3;

        return $this;
    }

    /**
     * Gets websites
     *
     * @return string|null
     */
    public function getWebsites()
    {
        return $this->container['websites'];
    }

    /**
     * Sets websites
     *
     * @param string|null $websites websites
     *
     * @return self
     */
    public function setWebsites($websites)
    {
        $this->container['websites'] = $websites;

        return $this;
    }

    /**
     * Gets created_on
     *
     * @return \DateTime|null
     */
    public function getCreatedOn()
    {
        return $this->container['created_on'];
    }

    /**
     * Sets created_on
     *
     * @param \DateTime|null $created_on created_on
     *
     * @return self
     */
    public function setCreatedOn($created_on)
    {
        $this->container['created_on'] = $created_on;

        return $this;
    }

    /**
     * Gets modified_on
     *
     * @return \DateTime|null
     */
    public function getModifiedOn()
    {
        return $this->container['modified_on'];
    }

    /**
     * Sets modified_on
     *
     * @param \DateTime|null $modified_on modified_on
     *
     * @return self
     */
    public function setModifiedOn($modified_on)
    {
        $this->container['modified_on'] = $modified_on;

        return $this;
    }

    /**
     * Gets modified_by
     *
     * @return int|null
     */
    public function getModifiedBy()
    {
        return $this->container['modified_by'];
    }

    /**
     * Sets modified_by
     *
     * @param int|null $modified_by modified_by
     *
     * @return self
     */
    public function setModifiedBy($modified_by)
    {
        $this->container['modified_by'] = $modified_by;

        return $this;
    }

    /**
     * Gets is_delete
     *
     * @return bool|null
     */
    public function getIsDelete()
    {
        return $this->container['is_delete'];
    }

    /**
     * Sets is_delete
     *
     * @param bool|null $is_delete is_delete
     *
     * @return self
     */
    public function setIsDelete($is_delete)
    {
        $this->container['is_delete'] = $is_delete;

        return $this;
    }

    /**
     * Gets is_default
     *
     * @return bool|null
     */
    public function getIsDefault()
    {
        return $this->container['is_default'];
    }

    /**
     * Sets is_default
     *
     * @param bool|null $is_default is_default
     *
     * @return self
     */
    public function setIsDefault($is_default)
    {
        $this->container['is_default'] = $is_default;

        return $this;
    }

    /**
     * Gets logo_image
     *
     * @return string|null
     */
    public function getLogoImage()
    {
        return $this->container['logo_image'];
    }

    /**
     * Sets logo_image
     *
     * @param string|null $logo_image logo_image
     *
     * @return self
     */
    public function setLogoImage($logo_image)
    {
        $this->container['logo_image'] = $logo_image;

        return $this;
    }

    /**
     * Gets default_credit_days
     *
     * @return int|null
     */
    public function getDefaultCreditDays()
    {
        return $this->container['default_credit_days'];
    }

    /**
     * Sets default_credit_days
     *
     * @param int|null $default_credit_days default_credit_days
     *
     * @return self
     */
    public function setDefaultCreditDays($default_credit_days)
    {
        $this->container['default_credit_days'] = $default_credit_days;

        return $this;
    }

    /**
     * Gets vat_rate
     *
     * @return int|null
     */
    public function getVatRate()
    {
        return $this->container['vat_rate'];
    }

    /**
     * Sets vat_rate
     *
     * @param int|null $vat_rate vat_rate
     *
     * @return self
     */
    public function setVatRate($vat_rate)
    {
        $this->container['vat_rate'] = $vat_rate;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets contact_person
     *
     * @return string|null
     */
    public function getContactPerson()
    {
        return $this->container['contact_person'];
    }

    /**
     * Sets contact_person
     *
     * @param string|null $contact_person contact_person
     *
     * @return self
     */
    public function setContactPerson($contact_person)
    {
        $this->container['contact_person'] = $contact_person;

        return $this;
    }

    /**
     * Gets is_active
     *
     * @return bool|null
     */
    public function getIsActive()
    {
        return $this->container['is_active'];
    }

    /**
     * Sets is_active
     *
     * @param bool|null $is_active is_active
     *
     * @return self
     */
    public function setIsActive($is_active)
    {
        $this->container['is_active'] = $is_active;

        return $this;
    }

    /**
     * Gets contact_type
     *
     * @return \OpenAPI\Client\Model\ContactTypes|null
     */
    public function getContactType()
    {
        return $this->container['contact_type'];
    }

    /**
     * Sets contact_type
     *
     * @param \OpenAPI\Client\Model\ContactTypes|null $contact_type contact_type
     *
     * @return self
     */
    public function setContactType($contact_type)
    {
        $this->container['contact_type'] = $contact_type;

        return $this;
    }

    /**
     * Gets contact_group
     *
     * @return \OpenAPI\Client\Model\ContactGroups|null
     */
    public function getContactGroup()
    {
        return $this->container['contact_group'];
    }

    /**
     * Sets contact_group
     *
     * @param \OpenAPI\Client\Model\ContactGroups|null $contact_group contact_group
     *
     * @return self
     */
    public function setContactGroup($contact_group)
    {
        $this->container['contact_group'] = $contact_group;

        return $this;
    }

    /**
     * Gets remarks
     *
     * @return string|null
     */
    public function getRemarks()
    {
        return $this->container['remarks'];
    }

    /**
     * Sets remarks
     *
     * @param string|null $remarks remarks
     *
     * @return self
     */
    public function setRemarks($remarks)
    {
        $this->container['remarks'] = $remarks;

        return $this;
    }

    /**
     * Gets gallery_id
     *
     * @return int|null
     */
    public function getGalleryId()
    {
        return $this->container['gallery_id'];
    }

    /**
     * Sets gallery_id
     *
     * @param int|null $gallery_id gallery_id
     *
     * @return self
     */
    public function setGalleryId($gallery_id)
    {
        $this->container['gallery_id'] = $gallery_id;

        return $this;
    }

    /**
     * Gets branch_code
     *
     * @return string|null
     */
    public function getBranchCode()
    {
        return $this->container['branch_code'];
    }

    /**
     * Sets branch_code
     *
     * @param string|null $branch_code branch_code
     *
     * @return self
     */
    public function setBranchCode($branch_code)
    {
        if (!is_null($branch_code) && (mb_strlen($branch_code) > 50)) {
            throw new \InvalidArgumentException('invalid length for $branch_code when calling Contact., must be smaller than or equal to 50.');
        }
        if (!is_null($branch_code) && (mb_strlen($branch_code) < 0)) {
            throw new \InvalidArgumentException('invalid length for $branch_code when calling Contact., must be bigger than or equal to 0.');
        }

        $this->container['branch_code'] = $branch_code;

        return $this;
    }

    /**
     * Gets transaction_id
     *
     * @return string|null
     */
    public function getTransactionId()
    {
        return $this->container['transaction_id'];
    }

    /**
     * Sets transaction_id
     *
     * @param string|null $transaction_id transaction_id
     *
     * @return self
     */
    public function setTransactionId($transaction_id)
    {
        if (!is_null($transaction_id) && (mb_strlen($transaction_id) > 50)) {
            throw new \InvalidArgumentException('invalid length for $transaction_id when calling Contact., must be smaller than or equal to 50.');
        }
        if (!is_null($transaction_id) && (mb_strlen($transaction_id) < 0)) {
            throw new \InvalidArgumentException('invalid length for $transaction_id when calling Contact., must be bigger than or equal to 0.');
        }

        $this->container['transaction_id'] = $transaction_id;

        return $this;
    }

    /**
     * Gets reset_transaction_id
     *
     * @return int|null
     */
    public function getResetTransactionId()
    {
        return $this->container['reset_transaction_id'];
    }

    /**
     * Sets reset_transaction_id
     *
     * @param int|null $reset_transaction_id reset_transaction_id
     *
     * @return self
     */
    public function setResetTransactionId($reset_transaction_id)
    {
        $this->container['reset_transaction_id'] = $reset_transaction_id;

        return $this;
    }

    /**
     * Gets contact_code
     *
     * @return string|null
     */
    public function getContactCode()
    {
        return $this->container['contact_code'];
    }

    /**
     * Sets contact_code
     *
     * @param string|null $contact_code contact_code
     *
     * @return self
     */
    public function setContactCode($contact_code)
    {
        $this->container['contact_code'] = $contact_code;

        return $this;
    }

    /**
     * Gets internal_notes
     *
     * @return string|null
     */
    public function getInternalNotes()
    {
        return $this->container['internal_notes'];
    }

    /**
     * Sets internal_notes
     *
     * @param string|null $internal_notes internal_notes
     *
     * @return self
     */
    public function setInternalNotes($internal_notes)
    {
        $this->container['internal_notes'] = $internal_notes;

        return $this;
    }

    /**
     * Gets shipping_address
     *
     * @return string|null
     */
    public function getShippingAddress()
    {
        return $this->container['shipping_address'];
    }

    /**
     * Sets shipping_address
     *
     * @param string|null $shipping_address shipping_address
     *
     * @return self
     */
    public function setShippingAddress($shipping_address)
    {
        $this->container['shipping_address'] = $shipping_address;

        return $this;
    }

    /**
     * Gets zip_code
     *
     * @return string|null
     */
    public function getZipCode()
    {
        return $this->container['zip_code'];
    }

    /**
     * Sets zip_code
     *
     * @param string|null $zip_code zip_code
     *
     * @return self
     */
    public function setZipCode($zip_code)
    {
        $this->container['zip_code'] = $zip_code;

        return $this;
    }

    /**
     * Gets swift_code
     *
     * @return string|null
     */
    public function getSwiftCode()
    {
        return $this->container['swift_code'];
    }

    /**
     * Sets swift_code
     *
     * @param string|null $swift_code swift_code
     *
     * @return self
     */
    public function setSwiftCode($swift_code)
    {
        $this->container['swift_code'] = $swift_code;

        return $this;
    }

    /**
     * Gets bank_address
     *
     * @return string|null
     */
    public function getBankAddress()
    {
        return $this->container['bank_address'];
    }

    /**
     * Sets bank_address
     *
     * @param string|null $bank_address bank_address
     *
     * @return self
     */
    public function setBankAddress($bank_address)
    {
        $this->container['bank_address'] = $bank_address;

        return $this;
    }

    /**
     * Gets use_foreign_bank
     *
     * @return bool|null
     */
    public function getUseForeignBank()
    {
        return $this->container['use_foreign_bank'];
    }

    /**
     * Sets use_foreign_bank
     *
     * @param bool|null $use_foreign_bank use_foreign_bank
     *
     * @return self
     */
    public function setUseForeignBank($use_foreign_bank)
    {
        $this->container['use_foreign_bank'] = $use_foreign_bank;

        return $this;
    }

    /**
     * Gets is_migrate
     *
     * @return bool|null
     */
    public function getIsMigrate()
    {
        return $this->container['is_migrate'];
    }

    /**
     * Sets is_migrate
     *
     * @param bool|null $is_migrate is_migrate
     *
     * @return self
     */
    public function setIsMigrate($is_migrate)
    {
        $this->container['is_migrate'] = $is_migrate;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


