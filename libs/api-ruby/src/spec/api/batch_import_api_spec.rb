=begin
#FlowAccount Open API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::BatchImportApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BatchImportApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::BatchImportApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BatchImportApi' do
    it 'should create an instance of BatchImportApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::BatchImportApi)
    end
  end

  # unit tests for batch_import_delete_custom_template
  # Delete custom template
  # @param template_id 
  # @param culture 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'batch_import_delete_custom_template test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for batch_import_generate_bacth_id_metadata
  # To get details of a document
  # @param culture 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :file_name 
  # @return [BatchImportMetadata]
  describe 'batch_import_generate_bacth_id_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for batch_import_get_batch_s3_data
  # Get data from Storage
  # @param batch_id 
  # @param culture 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'batch_import_get_batch_s3_data test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for batch_import_get_custom_template
  # Get custom template
  # @param template_id 
  # @param culture 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'batch_import_get_custom_template test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for batch_import_get_orgingal_file
  # Get Original File
  # @param batch_id 
  # @param culture 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'batch_import_get_orgingal_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for batch_import_get_presign
  # Get presign url to upload the file with payloads
  # @param culture 
  # @param batch_import_payload 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id 
  # @return [File]
  describe 'batch_import_get_presign test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for batch_import_mark_viewed
  # Mark the batch as viewed in notification.
  # @param culture 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :user_id 
  # @option opts [String] :batch_id 
  # @return [Boolean]
  describe 'batch_import_mark_viewed test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for batch_import_query_batch
  # Query the batch by id and status
  # @param culture 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @option opts [BatchImportStatus] :status 
  # @return [BatchStatus]
  describe 'batch_import_query_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for batch_import_query_batch_history
  # @param culture 
  # @param [Hash] opts the optional parameters
  # @return [BatchHistory]
  describe 'batch_import_query_batch_history test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for batch_import_retry_simple_documents
  # @param culture 
  # @param batch_import_retry 
  # @param [Hash] opts the optional parameters
  # @return [Boolean]
  describe 'batch_import_retry_simple_documents test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for batch_import_upsert_custom_template
  # Create or Update (Upsert) custom template
  # @param culture 
  # @param custom_template 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'batch_import_upsert_custom_template test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
