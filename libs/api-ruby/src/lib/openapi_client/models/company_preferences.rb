=begin
#FlowAccount Open API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'date'
require 'time'

module OpenapiClient
  class CompanyPreferences
    attr_accessor :company_id

    attr_accessor :show_with_holding

    attr_accessor :invoice_prefix

    attr_accessor :quotation_prefix

    attr_accessor :billing_note_prefix

    attr_accessor :receipt_prefix

    attr_accessor :purchase_order_prefix

    attr_accessor :cash_invoice_prefix

    attr_accessor :receivable_invoice_prefix

    attr_accessor :cash_invoice_starting_number

    attr_accessor :receipt_starting_number

    attr_accessor :quotation_starting_number

    attr_accessor :billing_note_starting_number

    attr_accessor :purchase_order_starting_number

    attr_accessor :purchase_order_title_en

    attr_accessor :quotation_title_en

    attr_accessor :billing_note_title_en

    attr_accessor :invoice_title_en

    attr_accessor :receipt_title_en

    attr_accessor :payment_slip_title_en

    attr_accessor :purchase_order_title_th

    attr_accessor :quotation_title_th

    attr_accessor :billing_note_title_th

    attr_accessor :invoice_title_th

    attr_accessor :receipt_title_th

    attr_accessor :payment_slip_title_th

    attr_accessor :business_type

    attr_accessor :terms_agreement

    attr_accessor :default_remarks

    attr_accessor :invoice_starting_number

    attr_accessor :cash_invoice_title_en

    attr_accessor :cash_invoice_title_th

    attr_accessor :receivable_invoice_title_th

    attr_accessor :receivable_invoice_title_en

    attr_accessor :running_number_type

    attr_accessor :purchase_order_starting_year

    attr_accessor :quotation_starting_year

    attr_accessor :billing_note_starting_year

    attr_accessor :invoice_starting_year

    attr_accessor :cash_invoice_starting_year

    attr_accessor :receipt_starting_year

    attr_accessor :purchase_order_starting_month

    attr_accessor :quotation_starting_month

    attr_accessor :billing_note_starting_month

    attr_accessor :invoice_starting_month

    attr_accessor :cash_invoice_starting_month

    attr_accessor :receipt_starting_month

    attr_accessor :settings_initiated

    attr_accessor :running_number_settings_modified_on

    attr_accessor :with_holding_tax_prefix

    attr_accessor :with_holding_tax_starting_number

    attr_accessor :with_holding_tax_starting_month

    attr_accessor :with_holding_tax_starting_year

    attr_accessor :document_templates

    attr_accessor :print_color

    attr_accessor :template_font

    attr_accessor :print_one_invoice

    attr_accessor :remarks

    attr_accessor :email_message_template

    attr_accessor :purchase_prefix

    attr_accessor :purchase_starting_number

    attr_accessor :purchase_title_en

    attr_accessor :purchase_title_th

    attr_accessor :purchase_starting_year

    attr_accessor :purchase_starting_month

    attr_accessor :adjust_inventory_prefix

    attr_accessor :adjust_inventory_starting_number

    attr_accessor :adjust_inventory_starting_month

    attr_accessor :adjust_inventory_starting_year

    attr_accessor :expense_prefix

    attr_accessor :expense_starting_number

    attr_accessor :expense_starting_month

    attr_accessor :expense_starting_year

    attr_accessor :payment_slip_prefix

    attr_accessor :payment_slip_starting_number

    attr_accessor :payment_slip_starting_year

    attr_accessor :payment_slip_starting_month

    attr_accessor :cash_invoice_running_number_modified_on

    attr_accessor :purchase_order_running_number_modified_on

    attr_accessor :quotation_running_number_modified_on

    attr_accessor :billing_note_running_number_modified_on

    attr_accessor :invoice_running_number_modified_on

    attr_accessor :purchase_running_number_modified_on

    attr_accessor :receivable_invoice_running_number_modified_on

    attr_accessor :payment_slip_running_number_modified_on

    attr_accessor :rubber_stamp_url

    attr_accessor :credit_note_prefix

    attr_accessor :credit_note_starting_number

    attr_accessor :credit_note_starting_month

    attr_accessor :credit_note_starting_year

    attr_accessor :credit_note_running_number_modified_on

    attr_accessor :credit_note_title_en

    attr_accessor :credit_note_title_th

    attr_accessor :debit_note_prefix

    attr_accessor :debit_note_starting_number

    attr_accessor :debit_note_starting_month

    attr_accessor :debit_note_starting_year

    attr_accessor :debit_note_running_number_modified_on

    attr_accessor :debit_note_title_en

    attr_accessor :debit_note_title_th

    attr_accessor :receipt_running_number_modified_on

    attr_accessor :receivable_invoice_starting_number

    attr_accessor :receivable_invoice_starting_month

    attr_accessor :receivable_invoice_starting_year

    attr_accessor :use_partial_receipt

    attr_accessor :use_cash_invoice

    attr_accessor :use_short_cash_invoice

    attr_accessor :general_ledger_running_number_type

    attr_accessor :journal_voucher_prefix

    attr_accessor :purchase_voucher_prefix

    attr_accessor :purchase_voucher_running_number_modified_on

    attr_accessor :sales_voucher_prefix

    attr_accessor :sales_voucher_running_number_modified_on

    attr_accessor :payment_voucher_prefix

    attr_accessor :payment_voucher_running_number_modified_on

    attr_accessor :received_voucher_prefix

    attr_accessor :received_voucher_running_number_modified_on

    attr_accessor :conversion_balance_prefix

    attr_accessor :conversion_balance_running_number_modified_on

    attr_accessor :e_tax_email

    attr_accessor :short_cash_invoice_templates

    attr_accessor :use_billing_note_accounting_rule

    attr_accessor :billing_note_accounting_rule_modified_on

    attr_accessor :template_font_size

    attr_accessor :use_multi_currency

    attr_accessor :expense_title_th

    attr_accessor :expense_title_en

    attr_accessor :with_holding_tax_title_th

    attr_accessor :with_holding_tax_title_en

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'company_id' => :'companyId',
        :'show_with_holding' => :'showWithHolding',
        :'invoice_prefix' => :'invoicePrefix',
        :'quotation_prefix' => :'quotationPrefix',
        :'billing_note_prefix' => :'billingNotePrefix',
        :'receipt_prefix' => :'receiptPrefix',
        :'purchase_order_prefix' => :'purchaseOrderPrefix',
        :'cash_invoice_prefix' => :'cashInvoicePrefix',
        :'receivable_invoice_prefix' => :'receivableInvoicePrefix',
        :'cash_invoice_starting_number' => :'cashInvoiceStartingNumber',
        :'receipt_starting_number' => :'receiptStartingNumber',
        :'quotation_starting_number' => :'quotationStartingNumber',
        :'billing_note_starting_number' => :'billingNoteStartingNumber',
        :'purchase_order_starting_number' => :'purchaseOrderStartingNumber',
        :'purchase_order_title_en' => :'purchaseOrderTitleEN',
        :'quotation_title_en' => :'quotationTitleEN',
        :'billing_note_title_en' => :'billingNoteTitleEN',
        :'invoice_title_en' => :'invoiceTitleEN',
        :'receipt_title_en' => :'receiptTitleEN',
        :'payment_slip_title_en' => :'paymentSlipTitleEN',
        :'purchase_order_title_th' => :'purchaseOrderTitleTH',
        :'quotation_title_th' => :'quotationTitleTH',
        :'billing_note_title_th' => :'billingNoteTitleTH',
        :'invoice_title_th' => :'invoiceTitleTH',
        :'receipt_title_th' => :'receiptTitleTH',
        :'payment_slip_title_th' => :'paymentSlipTitleTH',
        :'business_type' => :'businessType',
        :'terms_agreement' => :'termsAgreement',
        :'default_remarks' => :'defaultRemarks',
        :'invoice_starting_number' => :'invoiceStartingNumber',
        :'cash_invoice_title_en' => :'cashInvoiceTitleEN',
        :'cash_invoice_title_th' => :'cashInvoiceTitleTH',
        :'receivable_invoice_title_th' => :'receivableInvoiceTitleTH',
        :'receivable_invoice_title_en' => :'receivableInvoiceTitleEN',
        :'running_number_type' => :'runningNumberType',
        :'purchase_order_starting_year' => :'purchaseOrderStartingYear',
        :'quotation_starting_year' => :'quotationStartingYear',
        :'billing_note_starting_year' => :'billingNoteStartingYear',
        :'invoice_starting_year' => :'invoiceStartingYear',
        :'cash_invoice_starting_year' => :'cashInvoiceStartingYear',
        :'receipt_starting_year' => :'receiptStartingYear',
        :'purchase_order_starting_month' => :'purchaseOrderStartingMonth',
        :'quotation_starting_month' => :'quotationStartingMonth',
        :'billing_note_starting_month' => :'billingNoteStartingMonth',
        :'invoice_starting_month' => :'invoiceStartingMonth',
        :'cash_invoice_starting_month' => :'cashInvoiceStartingMonth',
        :'receipt_starting_month' => :'receiptStartingMonth',
        :'settings_initiated' => :'settingsInitiated',
        :'running_number_settings_modified_on' => :'runningNumberSettingsModifiedOn',
        :'with_holding_tax_prefix' => :'withHoldingTaxPrefix',
        :'with_holding_tax_starting_number' => :'withHoldingTaxStartingNumber',
        :'with_holding_tax_starting_month' => :'withHoldingTaxStartingMonth',
        :'with_holding_tax_starting_year' => :'withHoldingTaxStartingYear',
        :'document_templates' => :'documentTemplates',
        :'print_color' => :'printColor',
        :'template_font' => :'templateFont',
        :'print_one_invoice' => :'printOneInvoice',
        :'remarks' => :'remarks',
        :'email_message_template' => :'emailMessageTemplate',
        :'purchase_prefix' => :'purchasePrefix',
        :'purchase_starting_number' => :'purchaseStartingNumber',
        :'purchase_title_en' => :'purchaseTitleEN',
        :'purchase_title_th' => :'purchaseTitleTH',
        :'purchase_starting_year' => :'purchaseStartingYear',
        :'purchase_starting_month' => :'purchaseStartingMonth',
        :'adjust_inventory_prefix' => :'adjustInventoryPrefix',
        :'adjust_inventory_starting_number' => :'adjustInventoryStartingNumber',
        :'adjust_inventory_starting_month' => :'adjustInventoryStartingMonth',
        :'adjust_inventory_starting_year' => :'adjustInventoryStartingYear',
        :'expense_prefix' => :'expensePrefix',
        :'expense_starting_number' => :'expenseStartingNumber',
        :'expense_starting_month' => :'expenseStartingMonth',
        :'expense_starting_year' => :'expenseStartingYear',
        :'payment_slip_prefix' => :'paymentSlipPrefix',
        :'payment_slip_starting_number' => :'paymentSlipStartingNumber',
        :'payment_slip_starting_year' => :'paymentSlipStartingYear',
        :'payment_slip_starting_month' => :'paymentSlipStartingMonth',
        :'cash_invoice_running_number_modified_on' => :'cashInvoiceRunningNumberModifiedOn',
        :'purchase_order_running_number_modified_on' => :'purchaseOrderRunningNumberModifiedOn',
        :'quotation_running_number_modified_on' => :'quotationRunningNumberModifiedOn',
        :'billing_note_running_number_modified_on' => :'billingNoteRunningNumberModifiedOn',
        :'invoice_running_number_modified_on' => :'invoiceRunningNumberModifiedOn',
        :'purchase_running_number_modified_on' => :'purchaseRunningNumberModifiedOn',
        :'receivable_invoice_running_number_modified_on' => :'receivableInvoiceRunningNumberModifiedOn',
        :'payment_slip_running_number_modified_on' => :'paymentSlipRunningNumberModifiedOn',
        :'rubber_stamp_url' => :'rubberStampUrl',
        :'credit_note_prefix' => :'creditNotePrefix',
        :'credit_note_starting_number' => :'creditNoteStartingNumber',
        :'credit_note_starting_month' => :'creditNoteStartingMonth',
        :'credit_note_starting_year' => :'creditNoteStartingYear',
        :'credit_note_running_number_modified_on' => :'creditNoteRunningNumberModifiedOn',
        :'credit_note_title_en' => :'creditNoteTitleEN',
        :'credit_note_title_th' => :'creditNoteTitleTH',
        :'debit_note_prefix' => :'debitNotePrefix',
        :'debit_note_starting_number' => :'debitNoteStartingNumber',
        :'debit_note_starting_month' => :'debitNoteStartingMonth',
        :'debit_note_starting_year' => :'debitNoteStartingYear',
        :'debit_note_running_number_modified_on' => :'debitNoteRunningNumberModifiedOn',
        :'debit_note_title_en' => :'debitNoteTitleEN',
        :'debit_note_title_th' => :'debitNoteTitleTH',
        :'receipt_running_number_modified_on' => :'receiptRunningNumberModifiedOn',
        :'receivable_invoice_starting_number' => :'receivableInvoiceStartingNumber',
        :'receivable_invoice_starting_month' => :'receivableInvoiceStartingMonth',
        :'receivable_invoice_starting_year' => :'receivableInvoiceStartingYear',
        :'use_partial_receipt' => :'usePartialReceipt',
        :'use_cash_invoice' => :'useCashInvoice',
        :'use_short_cash_invoice' => :'useShortCashInvoice',
        :'general_ledger_running_number_type' => :'generalLedgerRunningNumberType',
        :'journal_voucher_prefix' => :'journalVoucherPrefix',
        :'purchase_voucher_prefix' => :'purchaseVoucherPrefix',
        :'purchase_voucher_running_number_modified_on' => :'purchaseVoucherRunningNumberModifiedOn',
        :'sales_voucher_prefix' => :'salesVoucherPrefix',
        :'sales_voucher_running_number_modified_on' => :'salesVoucherRunningNumberModifiedOn',
        :'payment_voucher_prefix' => :'paymentVoucherPrefix',
        :'payment_voucher_running_number_modified_on' => :'paymentVoucherRunningNumberModifiedOn',
        :'received_voucher_prefix' => :'receivedVoucherPrefix',
        :'received_voucher_running_number_modified_on' => :'receivedVoucherRunningNumberModifiedOn',
        :'conversion_balance_prefix' => :'conversionBalancePrefix',
        :'conversion_balance_running_number_modified_on' => :'conversionBalanceRunningNumberModifiedOn',
        :'e_tax_email' => :'eTaxEmail',
        :'short_cash_invoice_templates' => :'shortCashInvoiceTemplates',
        :'use_billing_note_accounting_rule' => :'useBillingNoteAccountingRule',
        :'billing_note_accounting_rule_modified_on' => :'billingNoteAccountingRuleModifiedOn',
        :'template_font_size' => :'templateFontSize',
        :'use_multi_currency' => :'useMultiCurrency',
        :'expense_title_th' => :'expenseTitleTH',
        :'expense_title_en' => :'expenseTitleEN',
        :'with_holding_tax_title_th' => :'withHoldingTaxTitleTH',
        :'with_holding_tax_title_en' => :'withHoldingTaxTitleEN'
      }
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'company_id' => :'Integer',
        :'show_with_holding' => :'Boolean',
        :'invoice_prefix' => :'String',
        :'quotation_prefix' => :'String',
        :'billing_note_prefix' => :'String',
        :'receipt_prefix' => :'String',
        :'purchase_order_prefix' => :'String',
        :'cash_invoice_prefix' => :'String',
        :'receivable_invoice_prefix' => :'String',
        :'cash_invoice_starting_number' => :'Integer',
        :'receipt_starting_number' => :'Integer',
        :'quotation_starting_number' => :'Integer',
        :'billing_note_starting_number' => :'Integer',
        :'purchase_order_starting_number' => :'Integer',
        :'purchase_order_title_en' => :'String',
        :'quotation_title_en' => :'String',
        :'billing_note_title_en' => :'String',
        :'invoice_title_en' => :'String',
        :'receipt_title_en' => :'String',
        :'payment_slip_title_en' => :'String',
        :'purchase_order_title_th' => :'String',
        :'quotation_title_th' => :'String',
        :'billing_note_title_th' => :'String',
        :'invoice_title_th' => :'String',
        :'receipt_title_th' => :'String',
        :'payment_slip_title_th' => :'String',
        :'business_type' => :'BusinessType',
        :'terms_agreement' => :'String',
        :'default_remarks' => :'String',
        :'invoice_starting_number' => :'Integer',
        :'cash_invoice_title_en' => :'String',
        :'cash_invoice_title_th' => :'String',
        :'receivable_invoice_title_th' => :'String',
        :'receivable_invoice_title_en' => :'String',
        :'running_number_type' => :'RunningNumberType',
        :'purchase_order_starting_year' => :'Integer',
        :'quotation_starting_year' => :'Integer',
        :'billing_note_starting_year' => :'Integer',
        :'invoice_starting_year' => :'Integer',
        :'cash_invoice_starting_year' => :'Integer',
        :'receipt_starting_year' => :'Integer',
        :'purchase_order_starting_month' => :'Integer',
        :'quotation_starting_month' => :'Integer',
        :'billing_note_starting_month' => :'Integer',
        :'invoice_starting_month' => :'Integer',
        :'cash_invoice_starting_month' => :'Integer',
        :'receipt_starting_month' => :'Integer',
        :'settings_initiated' => :'Boolean',
        :'running_number_settings_modified_on' => :'Time',
        :'with_holding_tax_prefix' => :'String',
        :'with_holding_tax_starting_number' => :'Integer',
        :'with_holding_tax_starting_month' => :'Integer',
        :'with_holding_tax_starting_year' => :'Integer',
        :'document_templates' => :'DocumentTemplates',
        :'print_color' => :'Boolean',
        :'template_font' => :'TemplateFont',
        :'print_one_invoice' => :'Boolean',
        :'remarks' => :'String',
        :'email_message_template' => :'String',
        :'purchase_prefix' => :'String',
        :'purchase_starting_number' => :'Integer',
        :'purchase_title_en' => :'String',
        :'purchase_title_th' => :'String',
        :'purchase_starting_year' => :'Integer',
        :'purchase_starting_month' => :'Integer',
        :'adjust_inventory_prefix' => :'String',
        :'adjust_inventory_starting_number' => :'Integer',
        :'adjust_inventory_starting_month' => :'Integer',
        :'adjust_inventory_starting_year' => :'Integer',
        :'expense_prefix' => :'String',
        :'expense_starting_number' => :'Integer',
        :'expense_starting_month' => :'Integer',
        :'expense_starting_year' => :'Integer',
        :'payment_slip_prefix' => :'String',
        :'payment_slip_starting_number' => :'Integer',
        :'payment_slip_starting_year' => :'Integer',
        :'payment_slip_starting_month' => :'Integer',
        :'cash_invoice_running_number_modified_on' => :'Time',
        :'purchase_order_running_number_modified_on' => :'Time',
        :'quotation_running_number_modified_on' => :'Time',
        :'billing_note_running_number_modified_on' => :'Time',
        :'invoice_running_number_modified_on' => :'Time',
        :'purchase_running_number_modified_on' => :'Time',
        :'receivable_invoice_running_number_modified_on' => :'Time',
        :'payment_slip_running_number_modified_on' => :'Time',
        :'rubber_stamp_url' => :'String',
        :'credit_note_prefix' => :'String',
        :'credit_note_starting_number' => :'Integer',
        :'credit_note_starting_month' => :'Integer',
        :'credit_note_starting_year' => :'Integer',
        :'credit_note_running_number_modified_on' => :'Time',
        :'credit_note_title_en' => :'String',
        :'credit_note_title_th' => :'String',
        :'debit_note_prefix' => :'String',
        :'debit_note_starting_number' => :'Integer',
        :'debit_note_starting_month' => :'Integer',
        :'debit_note_starting_year' => :'Integer',
        :'debit_note_running_number_modified_on' => :'Time',
        :'debit_note_title_en' => :'String',
        :'debit_note_title_th' => :'String',
        :'receipt_running_number_modified_on' => :'Time',
        :'receivable_invoice_starting_number' => :'Integer',
        :'receivable_invoice_starting_month' => :'Integer',
        :'receivable_invoice_starting_year' => :'Integer',
        :'use_partial_receipt' => :'Boolean',
        :'use_cash_invoice' => :'Boolean',
        :'use_short_cash_invoice' => :'Boolean',
        :'general_ledger_running_number_type' => :'RunningNumberType',
        :'journal_voucher_prefix' => :'String',
        :'purchase_voucher_prefix' => :'String',
        :'purchase_voucher_running_number_modified_on' => :'Time',
        :'sales_voucher_prefix' => :'String',
        :'sales_voucher_running_number_modified_on' => :'Time',
        :'payment_voucher_prefix' => :'String',
        :'payment_voucher_running_number_modified_on' => :'Time',
        :'received_voucher_prefix' => :'String',
        :'received_voucher_running_number_modified_on' => :'Time',
        :'conversion_balance_prefix' => :'String',
        :'conversion_balance_running_number_modified_on' => :'Time',
        :'e_tax_email' => :'String',
        :'short_cash_invoice_templates' => :'DocumentTemplates',
        :'use_billing_note_accounting_rule' => :'Boolean',
        :'billing_note_accounting_rule_modified_on' => :'Time',
        :'template_font_size' => :'Float',
        :'use_multi_currency' => :'Boolean',
        :'expense_title_th' => :'String',
        :'expense_title_en' => :'String',
        :'with_holding_tax_title_th' => :'String',
        :'with_holding_tax_title_en' => :'String'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
        :'terms_agreement',
        :'default_remarks',
        :'purchase_order_starting_year',
        :'quotation_starting_year',
        :'billing_note_starting_year',
        :'invoice_starting_year',
        :'cash_invoice_starting_year',
        :'receipt_starting_year',
        :'purchase_order_starting_month',
        :'quotation_starting_month',
        :'billing_note_starting_month',
        :'invoice_starting_month',
        :'cash_invoice_starting_month',
        :'receipt_starting_month',
        :'running_number_settings_modified_on',
        :'with_holding_tax_starting_month',
        :'with_holding_tax_starting_year',
        :'remarks',
        :'email_message_template',
        :'purchase_starting_year',
        :'purchase_starting_month',
        :'adjust_inventory_starting_month',
        :'adjust_inventory_starting_year',
        :'expense_starting_month',
        :'expense_starting_year',
        :'payment_slip_starting_year',
        :'payment_slip_starting_month',
        :'cash_invoice_running_number_modified_on',
        :'purchase_order_running_number_modified_on',
        :'quotation_running_number_modified_on',
        :'billing_note_running_number_modified_on',
        :'invoice_running_number_modified_on',
        :'purchase_running_number_modified_on',
        :'receivable_invoice_running_number_modified_on',
        :'payment_slip_running_number_modified_on',
        :'rubber_stamp_url',
        :'credit_note_starting_month',
        :'credit_note_starting_year',
        :'credit_note_running_number_modified_on',
        :'debit_note_starting_month',
        :'debit_note_starting_year',
        :'debit_note_running_number_modified_on',
        :'receipt_running_number_modified_on',
        :'receivable_invoice_starting_month',
        :'receivable_invoice_starting_year',
        :'purchase_voucher_running_number_modified_on',
        :'sales_voucher_running_number_modified_on',
        :'payment_voucher_running_number_modified_on',
        :'received_voucher_running_number_modified_on',
        :'conversion_balance_running_number_modified_on',
        :'e_tax_email',
        :'billing_note_accounting_rule_modified_on',
        :'template_font_size',
        :'expense_title_th',
        :'expense_title_en',
        :'with_holding_tax_title_th',
        :'with_holding_tax_title_en'
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `OpenapiClient::CompanyPreferences` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `OpenapiClient::CompanyPreferences`. Please check the name to make sure it's valid. List of attributes: " + self.class.attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'company_id')
        self.company_id = attributes[:'company_id']
      end

      if attributes.key?(:'show_with_holding')
        self.show_with_holding = attributes[:'show_with_holding']
      else
        self.show_with_holding = false
      end

      if attributes.key?(:'invoice_prefix')
        self.invoice_prefix = attributes[:'invoice_prefix']
      end

      if attributes.key?(:'quotation_prefix')
        self.quotation_prefix = attributes[:'quotation_prefix']
      end

      if attributes.key?(:'billing_note_prefix')
        self.billing_note_prefix = attributes[:'billing_note_prefix']
      end

      if attributes.key?(:'receipt_prefix')
        self.receipt_prefix = attributes[:'receipt_prefix']
      end

      if attributes.key?(:'purchase_order_prefix')
        self.purchase_order_prefix = attributes[:'purchase_order_prefix']
      end

      if attributes.key?(:'cash_invoice_prefix')
        self.cash_invoice_prefix = attributes[:'cash_invoice_prefix']
      end

      if attributes.key?(:'receivable_invoice_prefix')
        self.receivable_invoice_prefix = attributes[:'receivable_invoice_prefix']
      end

      if attributes.key?(:'cash_invoice_starting_number')
        self.cash_invoice_starting_number = attributes[:'cash_invoice_starting_number']
      end

      if attributes.key?(:'receipt_starting_number')
        self.receipt_starting_number = attributes[:'receipt_starting_number']
      end

      if attributes.key?(:'quotation_starting_number')
        self.quotation_starting_number = attributes[:'quotation_starting_number']
      end

      if attributes.key?(:'billing_note_starting_number')
        self.billing_note_starting_number = attributes[:'billing_note_starting_number']
      end

      if attributes.key?(:'purchase_order_starting_number')
        self.purchase_order_starting_number = attributes[:'purchase_order_starting_number']
      end

      if attributes.key?(:'purchase_order_title_en')
        self.purchase_order_title_en = attributes[:'purchase_order_title_en']
      end

      if attributes.key?(:'quotation_title_en')
        self.quotation_title_en = attributes[:'quotation_title_en']
      end

      if attributes.key?(:'billing_note_title_en')
        self.billing_note_title_en = attributes[:'billing_note_title_en']
      end

      if attributes.key?(:'invoice_title_en')
        self.invoice_title_en = attributes[:'invoice_title_en']
      end

      if attributes.key?(:'receipt_title_en')
        self.receipt_title_en = attributes[:'receipt_title_en']
      end

      if attributes.key?(:'payment_slip_title_en')
        self.payment_slip_title_en = attributes[:'payment_slip_title_en']
      end

      if attributes.key?(:'purchase_order_title_th')
        self.purchase_order_title_th = attributes[:'purchase_order_title_th']
      end

      if attributes.key?(:'quotation_title_th')
        self.quotation_title_th = attributes[:'quotation_title_th']
      end

      if attributes.key?(:'billing_note_title_th')
        self.billing_note_title_th = attributes[:'billing_note_title_th']
      end

      if attributes.key?(:'invoice_title_th')
        self.invoice_title_th = attributes[:'invoice_title_th']
      end

      if attributes.key?(:'receipt_title_th')
        self.receipt_title_th = attributes[:'receipt_title_th']
      end

      if attributes.key?(:'payment_slip_title_th')
        self.payment_slip_title_th = attributes[:'payment_slip_title_th']
      end

      if attributes.key?(:'business_type')
        self.business_type = attributes[:'business_type']
      end

      if attributes.key?(:'terms_agreement')
        self.terms_agreement = attributes[:'terms_agreement']
      end

      if attributes.key?(:'default_remarks')
        self.default_remarks = attributes[:'default_remarks']
      end

      if attributes.key?(:'invoice_starting_number')
        self.invoice_starting_number = attributes[:'invoice_starting_number']
      end

      if attributes.key?(:'cash_invoice_title_en')
        self.cash_invoice_title_en = attributes[:'cash_invoice_title_en']
      end

      if attributes.key?(:'cash_invoice_title_th')
        self.cash_invoice_title_th = attributes[:'cash_invoice_title_th']
      end

      if attributes.key?(:'receivable_invoice_title_th')
        self.receivable_invoice_title_th = attributes[:'receivable_invoice_title_th']
      end

      if attributes.key?(:'receivable_invoice_title_en')
        self.receivable_invoice_title_en = attributes[:'receivable_invoice_title_en']
      end

      if attributes.key?(:'running_number_type')
        self.running_number_type = attributes[:'running_number_type']
      end

      if attributes.key?(:'purchase_order_starting_year')
        self.purchase_order_starting_year = attributes[:'purchase_order_starting_year']
      end

      if attributes.key?(:'quotation_starting_year')
        self.quotation_starting_year = attributes[:'quotation_starting_year']
      end

      if attributes.key?(:'billing_note_starting_year')
        self.billing_note_starting_year = attributes[:'billing_note_starting_year']
      end

      if attributes.key?(:'invoice_starting_year')
        self.invoice_starting_year = attributes[:'invoice_starting_year']
      end

      if attributes.key?(:'cash_invoice_starting_year')
        self.cash_invoice_starting_year = attributes[:'cash_invoice_starting_year']
      end

      if attributes.key?(:'receipt_starting_year')
        self.receipt_starting_year = attributes[:'receipt_starting_year']
      end

      if attributes.key?(:'purchase_order_starting_month')
        self.purchase_order_starting_month = attributes[:'purchase_order_starting_month']
      end

      if attributes.key?(:'quotation_starting_month')
        self.quotation_starting_month = attributes[:'quotation_starting_month']
      end

      if attributes.key?(:'billing_note_starting_month')
        self.billing_note_starting_month = attributes[:'billing_note_starting_month']
      end

      if attributes.key?(:'invoice_starting_month')
        self.invoice_starting_month = attributes[:'invoice_starting_month']
      end

      if attributes.key?(:'cash_invoice_starting_month')
        self.cash_invoice_starting_month = attributes[:'cash_invoice_starting_month']
      end

      if attributes.key?(:'receipt_starting_month')
        self.receipt_starting_month = attributes[:'receipt_starting_month']
      end

      if attributes.key?(:'settings_initiated')
        self.settings_initiated = attributes[:'settings_initiated']
      else
        self.settings_initiated = false
      end

      if attributes.key?(:'running_number_settings_modified_on')
        self.running_number_settings_modified_on = attributes[:'running_number_settings_modified_on']
      end

      if attributes.key?(:'with_holding_tax_prefix')
        self.with_holding_tax_prefix = attributes[:'with_holding_tax_prefix']
      end

      if attributes.key?(:'with_holding_tax_starting_number')
        self.with_holding_tax_starting_number = attributes[:'with_holding_tax_starting_number']
      end

      if attributes.key?(:'with_holding_tax_starting_month')
        self.with_holding_tax_starting_month = attributes[:'with_holding_tax_starting_month']
      end

      if attributes.key?(:'with_holding_tax_starting_year')
        self.with_holding_tax_starting_year = attributes[:'with_holding_tax_starting_year']
      end

      if attributes.key?(:'document_templates')
        self.document_templates = attributes[:'document_templates']
      end

      if attributes.key?(:'print_color')
        self.print_color = attributes[:'print_color']
      end

      if attributes.key?(:'template_font')
        self.template_font = attributes[:'template_font']
      end

      if attributes.key?(:'print_one_invoice')
        self.print_one_invoice = attributes[:'print_one_invoice']
      end

      if attributes.key?(:'remarks')
        self.remarks = attributes[:'remarks']
      end

      if attributes.key?(:'email_message_template')
        self.email_message_template = attributes[:'email_message_template']
      end

      if attributes.key?(:'purchase_prefix')
        self.purchase_prefix = attributes[:'purchase_prefix']
      end

      if attributes.key?(:'purchase_starting_number')
        self.purchase_starting_number = attributes[:'purchase_starting_number']
      end

      if attributes.key?(:'purchase_title_en')
        self.purchase_title_en = attributes[:'purchase_title_en']
      end

      if attributes.key?(:'purchase_title_th')
        self.purchase_title_th = attributes[:'purchase_title_th']
      end

      if attributes.key?(:'purchase_starting_year')
        self.purchase_starting_year = attributes[:'purchase_starting_year']
      end

      if attributes.key?(:'purchase_starting_month')
        self.purchase_starting_month = attributes[:'purchase_starting_month']
      end

      if attributes.key?(:'adjust_inventory_prefix')
        self.adjust_inventory_prefix = attributes[:'adjust_inventory_prefix']
      end

      if attributes.key?(:'adjust_inventory_starting_number')
        self.adjust_inventory_starting_number = attributes[:'adjust_inventory_starting_number']
      end

      if attributes.key?(:'adjust_inventory_starting_month')
        self.adjust_inventory_starting_month = attributes[:'adjust_inventory_starting_month']
      end

      if attributes.key?(:'adjust_inventory_starting_year')
        self.adjust_inventory_starting_year = attributes[:'adjust_inventory_starting_year']
      end

      if attributes.key?(:'expense_prefix')
        self.expense_prefix = attributes[:'expense_prefix']
      end

      if attributes.key?(:'expense_starting_number')
        self.expense_starting_number = attributes[:'expense_starting_number']
      end

      if attributes.key?(:'expense_starting_month')
        self.expense_starting_month = attributes[:'expense_starting_month']
      end

      if attributes.key?(:'expense_starting_year')
        self.expense_starting_year = attributes[:'expense_starting_year']
      end

      if attributes.key?(:'payment_slip_prefix')
        self.payment_slip_prefix = attributes[:'payment_slip_prefix']
      end

      if attributes.key?(:'payment_slip_starting_number')
        self.payment_slip_starting_number = attributes[:'payment_slip_starting_number']
      end

      if attributes.key?(:'payment_slip_starting_year')
        self.payment_slip_starting_year = attributes[:'payment_slip_starting_year']
      end

      if attributes.key?(:'payment_slip_starting_month')
        self.payment_slip_starting_month = attributes[:'payment_slip_starting_month']
      end

      if attributes.key?(:'cash_invoice_running_number_modified_on')
        self.cash_invoice_running_number_modified_on = attributes[:'cash_invoice_running_number_modified_on']
      end

      if attributes.key?(:'purchase_order_running_number_modified_on')
        self.purchase_order_running_number_modified_on = attributes[:'purchase_order_running_number_modified_on']
      end

      if attributes.key?(:'quotation_running_number_modified_on')
        self.quotation_running_number_modified_on = attributes[:'quotation_running_number_modified_on']
      end

      if attributes.key?(:'billing_note_running_number_modified_on')
        self.billing_note_running_number_modified_on = attributes[:'billing_note_running_number_modified_on']
      end

      if attributes.key?(:'invoice_running_number_modified_on')
        self.invoice_running_number_modified_on = attributes[:'invoice_running_number_modified_on']
      end

      if attributes.key?(:'purchase_running_number_modified_on')
        self.purchase_running_number_modified_on = attributes[:'purchase_running_number_modified_on']
      end

      if attributes.key?(:'receivable_invoice_running_number_modified_on')
        self.receivable_invoice_running_number_modified_on = attributes[:'receivable_invoice_running_number_modified_on']
      end

      if attributes.key?(:'payment_slip_running_number_modified_on')
        self.payment_slip_running_number_modified_on = attributes[:'payment_slip_running_number_modified_on']
      end

      if attributes.key?(:'rubber_stamp_url')
        self.rubber_stamp_url = attributes[:'rubber_stamp_url']
      end

      if attributes.key?(:'credit_note_prefix')
        self.credit_note_prefix = attributes[:'credit_note_prefix']
      end

      if attributes.key?(:'credit_note_starting_number')
        self.credit_note_starting_number = attributes[:'credit_note_starting_number']
      end

      if attributes.key?(:'credit_note_starting_month')
        self.credit_note_starting_month = attributes[:'credit_note_starting_month']
      end

      if attributes.key?(:'credit_note_starting_year')
        self.credit_note_starting_year = attributes[:'credit_note_starting_year']
      end

      if attributes.key?(:'credit_note_running_number_modified_on')
        self.credit_note_running_number_modified_on = attributes[:'credit_note_running_number_modified_on']
      end

      if attributes.key?(:'credit_note_title_en')
        self.credit_note_title_en = attributes[:'credit_note_title_en']
      end

      if attributes.key?(:'credit_note_title_th')
        self.credit_note_title_th = attributes[:'credit_note_title_th']
      end

      if attributes.key?(:'debit_note_prefix')
        self.debit_note_prefix = attributes[:'debit_note_prefix']
      end

      if attributes.key?(:'debit_note_starting_number')
        self.debit_note_starting_number = attributes[:'debit_note_starting_number']
      end

      if attributes.key?(:'debit_note_starting_month')
        self.debit_note_starting_month = attributes[:'debit_note_starting_month']
      end

      if attributes.key?(:'debit_note_starting_year')
        self.debit_note_starting_year = attributes[:'debit_note_starting_year']
      end

      if attributes.key?(:'debit_note_running_number_modified_on')
        self.debit_note_running_number_modified_on = attributes[:'debit_note_running_number_modified_on']
      end

      if attributes.key?(:'debit_note_title_en')
        self.debit_note_title_en = attributes[:'debit_note_title_en']
      end

      if attributes.key?(:'debit_note_title_th')
        self.debit_note_title_th = attributes[:'debit_note_title_th']
      end

      if attributes.key?(:'receipt_running_number_modified_on')
        self.receipt_running_number_modified_on = attributes[:'receipt_running_number_modified_on']
      end

      if attributes.key?(:'receivable_invoice_starting_number')
        self.receivable_invoice_starting_number = attributes[:'receivable_invoice_starting_number']
      end

      if attributes.key?(:'receivable_invoice_starting_month')
        self.receivable_invoice_starting_month = attributes[:'receivable_invoice_starting_month']
      end

      if attributes.key?(:'receivable_invoice_starting_year')
        self.receivable_invoice_starting_year = attributes[:'receivable_invoice_starting_year']
      end

      if attributes.key?(:'use_partial_receipt')
        self.use_partial_receipt = attributes[:'use_partial_receipt']
      end

      if attributes.key?(:'use_cash_invoice')
        self.use_cash_invoice = attributes[:'use_cash_invoice']
      end

      if attributes.key?(:'use_short_cash_invoice')
        self.use_short_cash_invoice = attributes[:'use_short_cash_invoice']
      end

      if attributes.key?(:'general_ledger_running_number_type')
        self.general_ledger_running_number_type = attributes[:'general_ledger_running_number_type']
      end

      if attributes.key?(:'journal_voucher_prefix')
        self.journal_voucher_prefix = attributes[:'journal_voucher_prefix']
      end

      if attributes.key?(:'purchase_voucher_prefix')
        self.purchase_voucher_prefix = attributes[:'purchase_voucher_prefix']
      end

      if attributes.key?(:'purchase_voucher_running_number_modified_on')
        self.purchase_voucher_running_number_modified_on = attributes[:'purchase_voucher_running_number_modified_on']
      end

      if attributes.key?(:'sales_voucher_prefix')
        self.sales_voucher_prefix = attributes[:'sales_voucher_prefix']
      end

      if attributes.key?(:'sales_voucher_running_number_modified_on')
        self.sales_voucher_running_number_modified_on = attributes[:'sales_voucher_running_number_modified_on']
      end

      if attributes.key?(:'payment_voucher_prefix')
        self.payment_voucher_prefix = attributes[:'payment_voucher_prefix']
      end

      if attributes.key?(:'payment_voucher_running_number_modified_on')
        self.payment_voucher_running_number_modified_on = attributes[:'payment_voucher_running_number_modified_on']
      end

      if attributes.key?(:'received_voucher_prefix')
        self.received_voucher_prefix = attributes[:'received_voucher_prefix']
      end

      if attributes.key?(:'received_voucher_running_number_modified_on')
        self.received_voucher_running_number_modified_on = attributes[:'received_voucher_running_number_modified_on']
      end

      if attributes.key?(:'conversion_balance_prefix')
        self.conversion_balance_prefix = attributes[:'conversion_balance_prefix']
      end

      if attributes.key?(:'conversion_balance_running_number_modified_on')
        self.conversion_balance_running_number_modified_on = attributes[:'conversion_balance_running_number_modified_on']
      end

      if attributes.key?(:'e_tax_email')
        self.e_tax_email = attributes[:'e_tax_email']
      end

      if attributes.key?(:'short_cash_invoice_templates')
        self.short_cash_invoice_templates = attributes[:'short_cash_invoice_templates']
      end

      if attributes.key?(:'use_billing_note_accounting_rule')
        self.use_billing_note_accounting_rule = attributes[:'use_billing_note_accounting_rule']
      end

      if attributes.key?(:'billing_note_accounting_rule_modified_on')
        self.billing_note_accounting_rule_modified_on = attributes[:'billing_note_accounting_rule_modified_on']
      end

      if attributes.key?(:'template_font_size')
        self.template_font_size = attributes[:'template_font_size']
      end

      if attributes.key?(:'use_multi_currency')
        self.use_multi_currency = attributes[:'use_multi_currency']
      end

      if attributes.key?(:'expense_title_th')
        self.expense_title_th = attributes[:'expense_title_th']
      end

      if attributes.key?(:'expense_title_en')
        self.expense_title_en = attributes[:'expense_title_en']
      end

      if attributes.key?(:'with_holding_tax_title_th')
        self.with_holding_tax_title_th = attributes[:'with_holding_tax_title_th']
      end

      if attributes.key?(:'with_holding_tax_title_en')
        self.with_holding_tax_title_en = attributes[:'with_holding_tax_title_en']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array.new
      if @invoice_prefix.nil?
        invalid_properties.push('invalid value for "invoice_prefix", invoice_prefix cannot be nil.')
      end

      if @invoice_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "invoice_prefix", the character length must be smaller than or equal to 6.')
      end

      if @invoice_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "invoice_prefix", the character length must be great than or equal to 0.')
      end

      if @quotation_prefix.nil?
        invalid_properties.push('invalid value for "quotation_prefix", quotation_prefix cannot be nil.')
      end

      if @quotation_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "quotation_prefix", the character length must be smaller than or equal to 6.')
      end

      if @quotation_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "quotation_prefix", the character length must be great than or equal to 0.')
      end

      if @billing_note_prefix.nil?
        invalid_properties.push('invalid value for "billing_note_prefix", billing_note_prefix cannot be nil.')
      end

      if @billing_note_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "billing_note_prefix", the character length must be smaller than or equal to 6.')
      end

      if @billing_note_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "billing_note_prefix", the character length must be great than or equal to 0.')
      end

      if @receipt_prefix.nil?
        invalid_properties.push('invalid value for "receipt_prefix", receipt_prefix cannot be nil.')
      end

      if @receipt_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "receipt_prefix", the character length must be smaller than or equal to 6.')
      end

      if @receipt_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "receipt_prefix", the character length must be great than or equal to 0.')
      end

      if @purchase_order_prefix.nil?
        invalid_properties.push('invalid value for "purchase_order_prefix", purchase_order_prefix cannot be nil.')
      end

      if @purchase_order_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "purchase_order_prefix", the character length must be smaller than or equal to 6.')
      end

      if @purchase_order_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "purchase_order_prefix", the character length must be great than or equal to 0.')
      end

      if @cash_invoice_prefix.nil?
        invalid_properties.push('invalid value for "cash_invoice_prefix", cash_invoice_prefix cannot be nil.')
      end

      if @cash_invoice_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "cash_invoice_prefix", the character length must be smaller than or equal to 6.')
      end

      if @cash_invoice_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "cash_invoice_prefix", the character length must be great than or equal to 0.')
      end

      if @receivable_invoice_prefix.nil?
        invalid_properties.push('invalid value for "receivable_invoice_prefix", receivable_invoice_prefix cannot be nil.')
      end

      if @receivable_invoice_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "receivable_invoice_prefix", the character length must be smaller than or equal to 6.')
      end

      if @receivable_invoice_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "receivable_invoice_prefix", the character length must be great than or equal to 0.')
      end

      if @purchase_order_title_en.nil?
        invalid_properties.push('invalid value for "purchase_order_title_en", purchase_order_title_en cannot be nil.')
      end

      if @purchase_order_title_en.to_s.length > 2147483647
        invalid_properties.push('invalid value for "purchase_order_title_en", the character length must be smaller than or equal to 2147483647.')
      end

      if @purchase_order_title_en.to_s.length < 0
        invalid_properties.push('invalid value for "purchase_order_title_en", the character length must be great than or equal to 0.')
      end

      if @quotation_title_en.nil?
        invalid_properties.push('invalid value for "quotation_title_en", quotation_title_en cannot be nil.')
      end

      if @quotation_title_en.to_s.length > 2147483647
        invalid_properties.push('invalid value for "quotation_title_en", the character length must be smaller than or equal to 2147483647.')
      end

      if @quotation_title_en.to_s.length < 0
        invalid_properties.push('invalid value for "quotation_title_en", the character length must be great than or equal to 0.')
      end

      if @billing_note_title_en.nil?
        invalid_properties.push('invalid value for "billing_note_title_en", billing_note_title_en cannot be nil.')
      end

      if @billing_note_title_en.to_s.length > 2147483647
        invalid_properties.push('invalid value for "billing_note_title_en", the character length must be smaller than or equal to 2147483647.')
      end

      if @billing_note_title_en.to_s.length < 0
        invalid_properties.push('invalid value for "billing_note_title_en", the character length must be great than or equal to 0.')
      end

      if @invoice_title_en.nil?
        invalid_properties.push('invalid value for "invoice_title_en", invoice_title_en cannot be nil.')
      end

      if @invoice_title_en.to_s.length > 2147483647
        invalid_properties.push('invalid value for "invoice_title_en", the character length must be smaller than or equal to 2147483647.')
      end

      if @invoice_title_en.to_s.length < 0
        invalid_properties.push('invalid value for "invoice_title_en", the character length must be great than or equal to 0.')
      end

      if @receipt_title_en.nil?
        invalid_properties.push('invalid value for "receipt_title_en", receipt_title_en cannot be nil.')
      end

      if @receipt_title_en.to_s.length > 2147483647
        invalid_properties.push('invalid value for "receipt_title_en", the character length must be smaller than or equal to 2147483647.')
      end

      if @receipt_title_en.to_s.length < 0
        invalid_properties.push('invalid value for "receipt_title_en", the character length must be great than or equal to 0.')
      end

      if @payment_slip_title_en.nil?
        invalid_properties.push('invalid value for "payment_slip_title_en", payment_slip_title_en cannot be nil.')
      end

      if @payment_slip_title_en.to_s.length > 2147483647
        invalid_properties.push('invalid value for "payment_slip_title_en", the character length must be smaller than or equal to 2147483647.')
      end

      if @payment_slip_title_en.to_s.length < 0
        invalid_properties.push('invalid value for "payment_slip_title_en", the character length must be great than or equal to 0.')
      end

      if @purchase_order_title_th.nil?
        invalid_properties.push('invalid value for "purchase_order_title_th", purchase_order_title_th cannot be nil.')
      end

      if @purchase_order_title_th.to_s.length > 2147483647
        invalid_properties.push('invalid value for "purchase_order_title_th", the character length must be smaller than or equal to 2147483647.')
      end

      if @purchase_order_title_th.to_s.length < 0
        invalid_properties.push('invalid value for "purchase_order_title_th", the character length must be great than or equal to 0.')
      end

      if @quotation_title_th.nil?
        invalid_properties.push('invalid value for "quotation_title_th", quotation_title_th cannot be nil.')
      end

      if @quotation_title_th.to_s.length > 2147483647
        invalid_properties.push('invalid value for "quotation_title_th", the character length must be smaller than or equal to 2147483647.')
      end

      if @quotation_title_th.to_s.length < 0
        invalid_properties.push('invalid value for "quotation_title_th", the character length must be great than or equal to 0.')
      end

      if @billing_note_title_th.nil?
        invalid_properties.push('invalid value for "billing_note_title_th", billing_note_title_th cannot be nil.')
      end

      if @billing_note_title_th.to_s.length > 2147483647
        invalid_properties.push('invalid value for "billing_note_title_th", the character length must be smaller than or equal to 2147483647.')
      end

      if @billing_note_title_th.to_s.length < 0
        invalid_properties.push('invalid value for "billing_note_title_th", the character length must be great than or equal to 0.')
      end

      if @invoice_title_th.nil?
        invalid_properties.push('invalid value for "invoice_title_th", invoice_title_th cannot be nil.')
      end

      if @invoice_title_th.to_s.length > 2147483647
        invalid_properties.push('invalid value for "invoice_title_th", the character length must be smaller than or equal to 2147483647.')
      end

      if @invoice_title_th.to_s.length < 0
        invalid_properties.push('invalid value for "invoice_title_th", the character length must be great than or equal to 0.')
      end

      if @receipt_title_th.nil?
        invalid_properties.push('invalid value for "receipt_title_th", receipt_title_th cannot be nil.')
      end

      if @receipt_title_th.to_s.length > 2147483647
        invalid_properties.push('invalid value for "receipt_title_th", the character length must be smaller than or equal to 2147483647.')
      end

      if @receipt_title_th.to_s.length < 0
        invalid_properties.push('invalid value for "receipt_title_th", the character length must be great than or equal to 0.')
      end

      if @payment_slip_title_th.nil?
        invalid_properties.push('invalid value for "payment_slip_title_th", payment_slip_title_th cannot be nil.')
      end

      if @payment_slip_title_th.to_s.length > 2147483647
        invalid_properties.push('invalid value for "payment_slip_title_th", the character length must be smaller than or equal to 2147483647.')
      end

      if @payment_slip_title_th.to_s.length < 0
        invalid_properties.push('invalid value for "payment_slip_title_th", the character length must be great than or equal to 0.')
      end

      if !@terms_agreement.nil? && @terms_agreement.to_s.length > 2147483647
        invalid_properties.push('invalid value for "terms_agreement", the character length must be smaller than or equal to 2147483647.')
      end

      if !@terms_agreement.nil? && @terms_agreement.to_s.length < 0
        invalid_properties.push('invalid value for "terms_agreement", the character length must be great than or equal to 0.')
      end

      if !@default_remarks.nil? && @default_remarks.to_s.length > 2147483647
        invalid_properties.push('invalid value for "default_remarks", the character length must be smaller than or equal to 2147483647.')
      end

      if !@default_remarks.nil? && @default_remarks.to_s.length < 0
        invalid_properties.push('invalid value for "default_remarks", the character length must be great than or equal to 0.')
      end

      if @cash_invoice_title_en.nil?
        invalid_properties.push('invalid value for "cash_invoice_title_en", cash_invoice_title_en cannot be nil.')
      end

      if @cash_invoice_title_en.to_s.length > 2147483647
        invalid_properties.push('invalid value for "cash_invoice_title_en", the character length must be smaller than or equal to 2147483647.')
      end

      if @cash_invoice_title_en.to_s.length < 0
        invalid_properties.push('invalid value for "cash_invoice_title_en", the character length must be great than or equal to 0.')
      end

      if @cash_invoice_title_th.nil?
        invalid_properties.push('invalid value for "cash_invoice_title_th", cash_invoice_title_th cannot be nil.')
      end

      if @cash_invoice_title_th.to_s.length > 2147483647
        invalid_properties.push('invalid value for "cash_invoice_title_th", the character length must be smaller than or equal to 2147483647.')
      end

      if @cash_invoice_title_th.to_s.length < 0
        invalid_properties.push('invalid value for "cash_invoice_title_th", the character length must be great than or equal to 0.')
      end

      if @receivable_invoice_title_th.nil?
        invalid_properties.push('invalid value for "receivable_invoice_title_th", receivable_invoice_title_th cannot be nil.')
      end

      if @receivable_invoice_title_th.to_s.length > 2147483647
        invalid_properties.push('invalid value for "receivable_invoice_title_th", the character length must be smaller than or equal to 2147483647.')
      end

      if @receivable_invoice_title_th.to_s.length < 0
        invalid_properties.push('invalid value for "receivable_invoice_title_th", the character length must be great than or equal to 0.')
      end

      if @receivable_invoice_title_en.nil?
        invalid_properties.push('invalid value for "receivable_invoice_title_en", receivable_invoice_title_en cannot be nil.')
      end

      if @receivable_invoice_title_en.to_s.length > 2147483647
        invalid_properties.push('invalid value for "receivable_invoice_title_en", the character length must be smaller than or equal to 2147483647.')
      end

      if @receivable_invoice_title_en.to_s.length < 0
        invalid_properties.push('invalid value for "receivable_invoice_title_en", the character length must be great than or equal to 0.')
      end

      if @with_holding_tax_prefix.nil?
        invalid_properties.push('invalid value for "with_holding_tax_prefix", with_holding_tax_prefix cannot be nil.')
      end

      if @with_holding_tax_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "with_holding_tax_prefix", the character length must be smaller than or equal to 6.')
      end

      if @with_holding_tax_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "with_holding_tax_prefix", the character length must be great than or equal to 0.')
      end

      if !@remarks.nil? && @remarks.to_s.length > 2147483647
        invalid_properties.push('invalid value for "remarks", the character length must be smaller than or equal to 2147483647.')
      end

      if !@remarks.nil? && @remarks.to_s.length < 0
        invalid_properties.push('invalid value for "remarks", the character length must be great than or equal to 0.')
      end

      if !@email_message_template.nil? && @email_message_template.to_s.length > 2147483647
        invalid_properties.push('invalid value for "email_message_template", the character length must be smaller than or equal to 2147483647.')
      end

      if !@email_message_template.nil? && @email_message_template.to_s.length < 0
        invalid_properties.push('invalid value for "email_message_template", the character length must be great than or equal to 0.')
      end

      if @purchase_prefix.nil?
        invalid_properties.push('invalid value for "purchase_prefix", purchase_prefix cannot be nil.')
      end

      if @purchase_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "purchase_prefix", the character length must be smaller than or equal to 6.')
      end

      if @purchase_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "purchase_prefix", the character length must be great than or equal to 0.')
      end

      if @purchase_title_en.nil?
        invalid_properties.push('invalid value for "purchase_title_en", purchase_title_en cannot be nil.')
      end

      if @purchase_title_en.to_s.length > 2147483647
        invalid_properties.push('invalid value for "purchase_title_en", the character length must be smaller than or equal to 2147483647.')
      end

      if @purchase_title_en.to_s.length < 0
        invalid_properties.push('invalid value for "purchase_title_en", the character length must be great than or equal to 0.')
      end

      if @purchase_title_th.nil?
        invalid_properties.push('invalid value for "purchase_title_th", purchase_title_th cannot be nil.')
      end

      if @purchase_title_th.to_s.length > 2147483647
        invalid_properties.push('invalid value for "purchase_title_th", the character length must be smaller than or equal to 2147483647.')
      end

      if @purchase_title_th.to_s.length < 0
        invalid_properties.push('invalid value for "purchase_title_th", the character length must be great than or equal to 0.')
      end

      if @adjust_inventory_prefix.nil?
        invalid_properties.push('invalid value for "adjust_inventory_prefix", adjust_inventory_prefix cannot be nil.')
      end

      if @adjust_inventory_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "adjust_inventory_prefix", the character length must be smaller than or equal to 6.')
      end

      if @adjust_inventory_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "adjust_inventory_prefix", the character length must be great than or equal to 0.')
      end

      if @expense_prefix.nil?
        invalid_properties.push('invalid value for "expense_prefix", expense_prefix cannot be nil.')
      end

      if @expense_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "expense_prefix", the character length must be smaller than or equal to 6.')
      end

      if @expense_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "expense_prefix", the character length must be great than or equal to 0.')
      end

      if @payment_slip_prefix.nil?
        invalid_properties.push('invalid value for "payment_slip_prefix", payment_slip_prefix cannot be nil.')
      end

      if @payment_slip_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "payment_slip_prefix", the character length must be smaller than or equal to 6.')
      end

      if @payment_slip_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "payment_slip_prefix", the character length must be great than or equal to 0.')
      end

      if !@rubber_stamp_url.nil? && @rubber_stamp_url.to_s.length > 2147483647
        invalid_properties.push('invalid value for "rubber_stamp_url", the character length must be smaller than or equal to 2147483647.')
      end

      if !@rubber_stamp_url.nil? && @rubber_stamp_url.to_s.length < 0
        invalid_properties.push('invalid value for "rubber_stamp_url", the character length must be great than or equal to 0.')
      end

      if @credit_note_prefix.nil?
        invalid_properties.push('invalid value for "credit_note_prefix", credit_note_prefix cannot be nil.')
      end

      if @credit_note_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "credit_note_prefix", the character length must be smaller than or equal to 6.')
      end

      if @credit_note_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "credit_note_prefix", the character length must be great than or equal to 0.')
      end

      if @credit_note_title_en.nil?
        invalid_properties.push('invalid value for "credit_note_title_en", credit_note_title_en cannot be nil.')
      end

      if @credit_note_title_en.to_s.length > 2147483647
        invalid_properties.push('invalid value for "credit_note_title_en", the character length must be smaller than or equal to 2147483647.')
      end

      if @credit_note_title_en.to_s.length < 0
        invalid_properties.push('invalid value for "credit_note_title_en", the character length must be great than or equal to 0.')
      end

      if @credit_note_title_th.nil?
        invalid_properties.push('invalid value for "credit_note_title_th", credit_note_title_th cannot be nil.')
      end

      if @credit_note_title_th.to_s.length > 2147483647
        invalid_properties.push('invalid value for "credit_note_title_th", the character length must be smaller than or equal to 2147483647.')
      end

      if @credit_note_title_th.to_s.length < 0
        invalid_properties.push('invalid value for "credit_note_title_th", the character length must be great than or equal to 0.')
      end

      if @debit_note_prefix.nil?
        invalid_properties.push('invalid value for "debit_note_prefix", debit_note_prefix cannot be nil.')
      end

      if @debit_note_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "debit_note_prefix", the character length must be smaller than or equal to 6.')
      end

      if @debit_note_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "debit_note_prefix", the character length must be great than or equal to 0.')
      end

      if @debit_note_title_en.nil?
        invalid_properties.push('invalid value for "debit_note_title_en", debit_note_title_en cannot be nil.')
      end

      if @debit_note_title_en.to_s.length > 2147483647
        invalid_properties.push('invalid value for "debit_note_title_en", the character length must be smaller than or equal to 2147483647.')
      end

      if @debit_note_title_en.to_s.length < 0
        invalid_properties.push('invalid value for "debit_note_title_en", the character length must be great than or equal to 0.')
      end

      if @debit_note_title_th.nil?
        invalid_properties.push('invalid value for "debit_note_title_th", debit_note_title_th cannot be nil.')
      end

      if @debit_note_title_th.to_s.length > 2147483647
        invalid_properties.push('invalid value for "debit_note_title_th", the character length must be smaller than or equal to 2147483647.')
      end

      if @debit_note_title_th.to_s.length < 0
        invalid_properties.push('invalid value for "debit_note_title_th", the character length must be great than or equal to 0.')
      end

      if @journal_voucher_prefix.nil?
        invalid_properties.push('invalid value for "journal_voucher_prefix", journal_voucher_prefix cannot be nil.')
      end

      if @journal_voucher_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "journal_voucher_prefix", the character length must be smaller than or equal to 6.')
      end

      if @journal_voucher_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "journal_voucher_prefix", the character length must be great than or equal to 0.')
      end

      if @purchase_voucher_prefix.nil?
        invalid_properties.push('invalid value for "purchase_voucher_prefix", purchase_voucher_prefix cannot be nil.')
      end

      if @purchase_voucher_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "purchase_voucher_prefix", the character length must be smaller than or equal to 6.')
      end

      if @purchase_voucher_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "purchase_voucher_prefix", the character length must be great than or equal to 0.')
      end

      if @sales_voucher_prefix.nil?
        invalid_properties.push('invalid value for "sales_voucher_prefix", sales_voucher_prefix cannot be nil.')
      end

      if @sales_voucher_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "sales_voucher_prefix", the character length must be smaller than or equal to 6.')
      end

      if @sales_voucher_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "sales_voucher_prefix", the character length must be great than or equal to 0.')
      end

      if @payment_voucher_prefix.nil?
        invalid_properties.push('invalid value for "payment_voucher_prefix", payment_voucher_prefix cannot be nil.')
      end

      if @payment_voucher_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "payment_voucher_prefix", the character length must be smaller than or equal to 6.')
      end

      if @payment_voucher_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "payment_voucher_prefix", the character length must be great than or equal to 0.')
      end

      if @received_voucher_prefix.nil?
        invalid_properties.push('invalid value for "received_voucher_prefix", received_voucher_prefix cannot be nil.')
      end

      if @received_voucher_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "received_voucher_prefix", the character length must be smaller than or equal to 6.')
      end

      if @received_voucher_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "received_voucher_prefix", the character length must be great than or equal to 0.')
      end

      if @conversion_balance_prefix.nil?
        invalid_properties.push('invalid value for "conversion_balance_prefix", conversion_balance_prefix cannot be nil.')
      end

      if @conversion_balance_prefix.to_s.length > 6
        invalid_properties.push('invalid value for "conversion_balance_prefix", the character length must be smaller than or equal to 6.')
      end

      if @conversion_balance_prefix.to_s.length < 0
        invalid_properties.push('invalid value for "conversion_balance_prefix", the character length must be great than or equal to 0.')
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return false if @invoice_prefix.nil?
      return false if @invoice_prefix.to_s.length > 6
      return false if @invoice_prefix.to_s.length < 0
      return false if @quotation_prefix.nil?
      return false if @quotation_prefix.to_s.length > 6
      return false if @quotation_prefix.to_s.length < 0
      return false if @billing_note_prefix.nil?
      return false if @billing_note_prefix.to_s.length > 6
      return false if @billing_note_prefix.to_s.length < 0
      return false if @receipt_prefix.nil?
      return false if @receipt_prefix.to_s.length > 6
      return false if @receipt_prefix.to_s.length < 0
      return false if @purchase_order_prefix.nil?
      return false if @purchase_order_prefix.to_s.length > 6
      return false if @purchase_order_prefix.to_s.length < 0
      return false if @cash_invoice_prefix.nil?
      return false if @cash_invoice_prefix.to_s.length > 6
      return false if @cash_invoice_prefix.to_s.length < 0
      return false if @receivable_invoice_prefix.nil?
      return false if @receivable_invoice_prefix.to_s.length > 6
      return false if @receivable_invoice_prefix.to_s.length < 0
      return false if @purchase_order_title_en.nil?
      return false if @purchase_order_title_en.to_s.length > 2147483647
      return false if @purchase_order_title_en.to_s.length < 0
      return false if @quotation_title_en.nil?
      return false if @quotation_title_en.to_s.length > 2147483647
      return false if @quotation_title_en.to_s.length < 0
      return false if @billing_note_title_en.nil?
      return false if @billing_note_title_en.to_s.length > 2147483647
      return false if @billing_note_title_en.to_s.length < 0
      return false if @invoice_title_en.nil?
      return false if @invoice_title_en.to_s.length > 2147483647
      return false if @invoice_title_en.to_s.length < 0
      return false if @receipt_title_en.nil?
      return false if @receipt_title_en.to_s.length > 2147483647
      return false if @receipt_title_en.to_s.length < 0
      return false if @payment_slip_title_en.nil?
      return false if @payment_slip_title_en.to_s.length > 2147483647
      return false if @payment_slip_title_en.to_s.length < 0
      return false if @purchase_order_title_th.nil?
      return false if @purchase_order_title_th.to_s.length > 2147483647
      return false if @purchase_order_title_th.to_s.length < 0
      return false if @quotation_title_th.nil?
      return false if @quotation_title_th.to_s.length > 2147483647
      return false if @quotation_title_th.to_s.length < 0
      return false if @billing_note_title_th.nil?
      return false if @billing_note_title_th.to_s.length > 2147483647
      return false if @billing_note_title_th.to_s.length < 0
      return false if @invoice_title_th.nil?
      return false if @invoice_title_th.to_s.length > 2147483647
      return false if @invoice_title_th.to_s.length < 0
      return false if @receipt_title_th.nil?
      return false if @receipt_title_th.to_s.length > 2147483647
      return false if @receipt_title_th.to_s.length < 0
      return false if @payment_slip_title_th.nil?
      return false if @payment_slip_title_th.to_s.length > 2147483647
      return false if @payment_slip_title_th.to_s.length < 0
      return false if !@terms_agreement.nil? && @terms_agreement.to_s.length > 2147483647
      return false if !@terms_agreement.nil? && @terms_agreement.to_s.length < 0
      return false if !@default_remarks.nil? && @default_remarks.to_s.length > 2147483647
      return false if !@default_remarks.nil? && @default_remarks.to_s.length < 0
      return false if @cash_invoice_title_en.nil?
      return false if @cash_invoice_title_en.to_s.length > 2147483647
      return false if @cash_invoice_title_en.to_s.length < 0
      return false if @cash_invoice_title_th.nil?
      return false if @cash_invoice_title_th.to_s.length > 2147483647
      return false if @cash_invoice_title_th.to_s.length < 0
      return false if @receivable_invoice_title_th.nil?
      return false if @receivable_invoice_title_th.to_s.length > 2147483647
      return false if @receivable_invoice_title_th.to_s.length < 0
      return false if @receivable_invoice_title_en.nil?
      return false if @receivable_invoice_title_en.to_s.length > 2147483647
      return false if @receivable_invoice_title_en.to_s.length < 0
      return false if @with_holding_tax_prefix.nil?
      return false if @with_holding_tax_prefix.to_s.length > 6
      return false if @with_holding_tax_prefix.to_s.length < 0
      return false if !@remarks.nil? && @remarks.to_s.length > 2147483647
      return false if !@remarks.nil? && @remarks.to_s.length < 0
      return false if !@email_message_template.nil? && @email_message_template.to_s.length > 2147483647
      return false if !@email_message_template.nil? && @email_message_template.to_s.length < 0
      return false if @purchase_prefix.nil?
      return false if @purchase_prefix.to_s.length > 6
      return false if @purchase_prefix.to_s.length < 0
      return false if @purchase_title_en.nil?
      return false if @purchase_title_en.to_s.length > 2147483647
      return false if @purchase_title_en.to_s.length < 0
      return false if @purchase_title_th.nil?
      return false if @purchase_title_th.to_s.length > 2147483647
      return false if @purchase_title_th.to_s.length < 0
      return false if @adjust_inventory_prefix.nil?
      return false if @adjust_inventory_prefix.to_s.length > 6
      return false if @adjust_inventory_prefix.to_s.length < 0
      return false if @expense_prefix.nil?
      return false if @expense_prefix.to_s.length > 6
      return false if @expense_prefix.to_s.length < 0
      return false if @payment_slip_prefix.nil?
      return false if @payment_slip_prefix.to_s.length > 6
      return false if @payment_slip_prefix.to_s.length < 0
      return false if !@rubber_stamp_url.nil? && @rubber_stamp_url.to_s.length > 2147483647
      return false if !@rubber_stamp_url.nil? && @rubber_stamp_url.to_s.length < 0
      return false if @credit_note_prefix.nil?
      return false if @credit_note_prefix.to_s.length > 6
      return false if @credit_note_prefix.to_s.length < 0
      return false if @credit_note_title_en.nil?
      return false if @credit_note_title_en.to_s.length > 2147483647
      return false if @credit_note_title_en.to_s.length < 0
      return false if @credit_note_title_th.nil?
      return false if @credit_note_title_th.to_s.length > 2147483647
      return false if @credit_note_title_th.to_s.length < 0
      return false if @debit_note_prefix.nil?
      return false if @debit_note_prefix.to_s.length > 6
      return false if @debit_note_prefix.to_s.length < 0
      return false if @debit_note_title_en.nil?
      return false if @debit_note_title_en.to_s.length > 2147483647
      return false if @debit_note_title_en.to_s.length < 0
      return false if @debit_note_title_th.nil?
      return false if @debit_note_title_th.to_s.length > 2147483647
      return false if @debit_note_title_th.to_s.length < 0
      return false if @journal_voucher_prefix.nil?
      return false if @journal_voucher_prefix.to_s.length > 6
      return false if @journal_voucher_prefix.to_s.length < 0
      return false if @purchase_voucher_prefix.nil?
      return false if @purchase_voucher_prefix.to_s.length > 6
      return false if @purchase_voucher_prefix.to_s.length < 0
      return false if @sales_voucher_prefix.nil?
      return false if @sales_voucher_prefix.to_s.length > 6
      return false if @sales_voucher_prefix.to_s.length < 0
      return false if @payment_voucher_prefix.nil?
      return false if @payment_voucher_prefix.to_s.length > 6
      return false if @payment_voucher_prefix.to_s.length < 0
      return false if @received_voucher_prefix.nil?
      return false if @received_voucher_prefix.to_s.length > 6
      return false if @received_voucher_prefix.to_s.length < 0
      return false if @conversion_balance_prefix.nil?
      return false if @conversion_balance_prefix.to_s.length > 6
      return false if @conversion_balance_prefix.to_s.length < 0
      true
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_prefix Value to be assigned
    def invoice_prefix=(invoice_prefix)
      if invoice_prefix.nil?
        fail ArgumentError, 'invoice_prefix cannot be nil'
      end

      if invoice_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "invoice_prefix", the character length must be smaller than or equal to 6.'
      end

      if invoice_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "invoice_prefix", the character length must be great than or equal to 0.'
      end

      @invoice_prefix = invoice_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] quotation_prefix Value to be assigned
    def quotation_prefix=(quotation_prefix)
      if quotation_prefix.nil?
        fail ArgumentError, 'quotation_prefix cannot be nil'
      end

      if quotation_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "quotation_prefix", the character length must be smaller than or equal to 6.'
      end

      if quotation_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "quotation_prefix", the character length must be great than or equal to 0.'
      end

      @quotation_prefix = quotation_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] billing_note_prefix Value to be assigned
    def billing_note_prefix=(billing_note_prefix)
      if billing_note_prefix.nil?
        fail ArgumentError, 'billing_note_prefix cannot be nil'
      end

      if billing_note_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "billing_note_prefix", the character length must be smaller than or equal to 6.'
      end

      if billing_note_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "billing_note_prefix", the character length must be great than or equal to 0.'
      end

      @billing_note_prefix = billing_note_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] receipt_prefix Value to be assigned
    def receipt_prefix=(receipt_prefix)
      if receipt_prefix.nil?
        fail ArgumentError, 'receipt_prefix cannot be nil'
      end

      if receipt_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "receipt_prefix", the character length must be smaller than or equal to 6.'
      end

      if receipt_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "receipt_prefix", the character length must be great than or equal to 0.'
      end

      @receipt_prefix = receipt_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] purchase_order_prefix Value to be assigned
    def purchase_order_prefix=(purchase_order_prefix)
      if purchase_order_prefix.nil?
        fail ArgumentError, 'purchase_order_prefix cannot be nil'
      end

      if purchase_order_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "purchase_order_prefix", the character length must be smaller than or equal to 6.'
      end

      if purchase_order_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "purchase_order_prefix", the character length must be great than or equal to 0.'
      end

      @purchase_order_prefix = purchase_order_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] cash_invoice_prefix Value to be assigned
    def cash_invoice_prefix=(cash_invoice_prefix)
      if cash_invoice_prefix.nil?
        fail ArgumentError, 'cash_invoice_prefix cannot be nil'
      end

      if cash_invoice_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "cash_invoice_prefix", the character length must be smaller than or equal to 6.'
      end

      if cash_invoice_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "cash_invoice_prefix", the character length must be great than or equal to 0.'
      end

      @cash_invoice_prefix = cash_invoice_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] receivable_invoice_prefix Value to be assigned
    def receivable_invoice_prefix=(receivable_invoice_prefix)
      if receivable_invoice_prefix.nil?
        fail ArgumentError, 'receivable_invoice_prefix cannot be nil'
      end

      if receivable_invoice_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "receivable_invoice_prefix", the character length must be smaller than or equal to 6.'
      end

      if receivable_invoice_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "receivable_invoice_prefix", the character length must be great than or equal to 0.'
      end

      @receivable_invoice_prefix = receivable_invoice_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] purchase_order_title_en Value to be assigned
    def purchase_order_title_en=(purchase_order_title_en)
      if purchase_order_title_en.nil?
        fail ArgumentError, 'purchase_order_title_en cannot be nil'
      end

      if purchase_order_title_en.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "purchase_order_title_en", the character length must be smaller than or equal to 2147483647.'
      end

      if purchase_order_title_en.to_s.length < 0
        fail ArgumentError, 'invalid value for "purchase_order_title_en", the character length must be great than or equal to 0.'
      end

      @purchase_order_title_en = purchase_order_title_en
    end

    # Custom attribute writer method with validation
    # @param [Object] quotation_title_en Value to be assigned
    def quotation_title_en=(quotation_title_en)
      if quotation_title_en.nil?
        fail ArgumentError, 'quotation_title_en cannot be nil'
      end

      if quotation_title_en.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "quotation_title_en", the character length must be smaller than or equal to 2147483647.'
      end

      if quotation_title_en.to_s.length < 0
        fail ArgumentError, 'invalid value for "quotation_title_en", the character length must be great than or equal to 0.'
      end

      @quotation_title_en = quotation_title_en
    end

    # Custom attribute writer method with validation
    # @param [Object] billing_note_title_en Value to be assigned
    def billing_note_title_en=(billing_note_title_en)
      if billing_note_title_en.nil?
        fail ArgumentError, 'billing_note_title_en cannot be nil'
      end

      if billing_note_title_en.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "billing_note_title_en", the character length must be smaller than or equal to 2147483647.'
      end

      if billing_note_title_en.to_s.length < 0
        fail ArgumentError, 'invalid value for "billing_note_title_en", the character length must be great than or equal to 0.'
      end

      @billing_note_title_en = billing_note_title_en
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_title_en Value to be assigned
    def invoice_title_en=(invoice_title_en)
      if invoice_title_en.nil?
        fail ArgumentError, 'invoice_title_en cannot be nil'
      end

      if invoice_title_en.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "invoice_title_en", the character length must be smaller than or equal to 2147483647.'
      end

      if invoice_title_en.to_s.length < 0
        fail ArgumentError, 'invalid value for "invoice_title_en", the character length must be great than or equal to 0.'
      end

      @invoice_title_en = invoice_title_en
    end

    # Custom attribute writer method with validation
    # @param [Object] receipt_title_en Value to be assigned
    def receipt_title_en=(receipt_title_en)
      if receipt_title_en.nil?
        fail ArgumentError, 'receipt_title_en cannot be nil'
      end

      if receipt_title_en.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "receipt_title_en", the character length must be smaller than or equal to 2147483647.'
      end

      if receipt_title_en.to_s.length < 0
        fail ArgumentError, 'invalid value for "receipt_title_en", the character length must be great than or equal to 0.'
      end

      @receipt_title_en = receipt_title_en
    end

    # Custom attribute writer method with validation
    # @param [Object] payment_slip_title_en Value to be assigned
    def payment_slip_title_en=(payment_slip_title_en)
      if payment_slip_title_en.nil?
        fail ArgumentError, 'payment_slip_title_en cannot be nil'
      end

      if payment_slip_title_en.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "payment_slip_title_en", the character length must be smaller than or equal to 2147483647.'
      end

      if payment_slip_title_en.to_s.length < 0
        fail ArgumentError, 'invalid value for "payment_slip_title_en", the character length must be great than or equal to 0.'
      end

      @payment_slip_title_en = payment_slip_title_en
    end

    # Custom attribute writer method with validation
    # @param [Object] purchase_order_title_th Value to be assigned
    def purchase_order_title_th=(purchase_order_title_th)
      if purchase_order_title_th.nil?
        fail ArgumentError, 'purchase_order_title_th cannot be nil'
      end

      if purchase_order_title_th.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "purchase_order_title_th", the character length must be smaller than or equal to 2147483647.'
      end

      if purchase_order_title_th.to_s.length < 0
        fail ArgumentError, 'invalid value for "purchase_order_title_th", the character length must be great than or equal to 0.'
      end

      @purchase_order_title_th = purchase_order_title_th
    end

    # Custom attribute writer method with validation
    # @param [Object] quotation_title_th Value to be assigned
    def quotation_title_th=(quotation_title_th)
      if quotation_title_th.nil?
        fail ArgumentError, 'quotation_title_th cannot be nil'
      end

      if quotation_title_th.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "quotation_title_th", the character length must be smaller than or equal to 2147483647.'
      end

      if quotation_title_th.to_s.length < 0
        fail ArgumentError, 'invalid value for "quotation_title_th", the character length must be great than or equal to 0.'
      end

      @quotation_title_th = quotation_title_th
    end

    # Custom attribute writer method with validation
    # @param [Object] billing_note_title_th Value to be assigned
    def billing_note_title_th=(billing_note_title_th)
      if billing_note_title_th.nil?
        fail ArgumentError, 'billing_note_title_th cannot be nil'
      end

      if billing_note_title_th.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "billing_note_title_th", the character length must be smaller than or equal to 2147483647.'
      end

      if billing_note_title_th.to_s.length < 0
        fail ArgumentError, 'invalid value for "billing_note_title_th", the character length must be great than or equal to 0.'
      end

      @billing_note_title_th = billing_note_title_th
    end

    # Custom attribute writer method with validation
    # @param [Object] invoice_title_th Value to be assigned
    def invoice_title_th=(invoice_title_th)
      if invoice_title_th.nil?
        fail ArgumentError, 'invoice_title_th cannot be nil'
      end

      if invoice_title_th.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "invoice_title_th", the character length must be smaller than or equal to 2147483647.'
      end

      if invoice_title_th.to_s.length < 0
        fail ArgumentError, 'invalid value for "invoice_title_th", the character length must be great than or equal to 0.'
      end

      @invoice_title_th = invoice_title_th
    end

    # Custom attribute writer method with validation
    # @param [Object] receipt_title_th Value to be assigned
    def receipt_title_th=(receipt_title_th)
      if receipt_title_th.nil?
        fail ArgumentError, 'receipt_title_th cannot be nil'
      end

      if receipt_title_th.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "receipt_title_th", the character length must be smaller than or equal to 2147483647.'
      end

      if receipt_title_th.to_s.length < 0
        fail ArgumentError, 'invalid value for "receipt_title_th", the character length must be great than or equal to 0.'
      end

      @receipt_title_th = receipt_title_th
    end

    # Custom attribute writer method with validation
    # @param [Object] payment_slip_title_th Value to be assigned
    def payment_slip_title_th=(payment_slip_title_th)
      if payment_slip_title_th.nil?
        fail ArgumentError, 'payment_slip_title_th cannot be nil'
      end

      if payment_slip_title_th.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "payment_slip_title_th", the character length must be smaller than or equal to 2147483647.'
      end

      if payment_slip_title_th.to_s.length < 0
        fail ArgumentError, 'invalid value for "payment_slip_title_th", the character length must be great than or equal to 0.'
      end

      @payment_slip_title_th = payment_slip_title_th
    end

    # Custom attribute writer method with validation
    # @param [Object] terms_agreement Value to be assigned
    def terms_agreement=(terms_agreement)
      if !terms_agreement.nil? && terms_agreement.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "terms_agreement", the character length must be smaller than or equal to 2147483647.'
      end

      if !terms_agreement.nil? && terms_agreement.to_s.length < 0
        fail ArgumentError, 'invalid value for "terms_agreement", the character length must be great than or equal to 0.'
      end

      @terms_agreement = terms_agreement
    end

    # Custom attribute writer method with validation
    # @param [Object] default_remarks Value to be assigned
    def default_remarks=(default_remarks)
      if !default_remarks.nil? && default_remarks.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "default_remarks", the character length must be smaller than or equal to 2147483647.'
      end

      if !default_remarks.nil? && default_remarks.to_s.length < 0
        fail ArgumentError, 'invalid value for "default_remarks", the character length must be great than or equal to 0.'
      end

      @default_remarks = default_remarks
    end

    # Custom attribute writer method with validation
    # @param [Object] cash_invoice_title_en Value to be assigned
    def cash_invoice_title_en=(cash_invoice_title_en)
      if cash_invoice_title_en.nil?
        fail ArgumentError, 'cash_invoice_title_en cannot be nil'
      end

      if cash_invoice_title_en.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "cash_invoice_title_en", the character length must be smaller than or equal to 2147483647.'
      end

      if cash_invoice_title_en.to_s.length < 0
        fail ArgumentError, 'invalid value for "cash_invoice_title_en", the character length must be great than or equal to 0.'
      end

      @cash_invoice_title_en = cash_invoice_title_en
    end

    # Custom attribute writer method with validation
    # @param [Object] cash_invoice_title_th Value to be assigned
    def cash_invoice_title_th=(cash_invoice_title_th)
      if cash_invoice_title_th.nil?
        fail ArgumentError, 'cash_invoice_title_th cannot be nil'
      end

      if cash_invoice_title_th.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "cash_invoice_title_th", the character length must be smaller than or equal to 2147483647.'
      end

      if cash_invoice_title_th.to_s.length < 0
        fail ArgumentError, 'invalid value for "cash_invoice_title_th", the character length must be great than or equal to 0.'
      end

      @cash_invoice_title_th = cash_invoice_title_th
    end

    # Custom attribute writer method with validation
    # @param [Object] receivable_invoice_title_th Value to be assigned
    def receivable_invoice_title_th=(receivable_invoice_title_th)
      if receivable_invoice_title_th.nil?
        fail ArgumentError, 'receivable_invoice_title_th cannot be nil'
      end

      if receivable_invoice_title_th.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "receivable_invoice_title_th", the character length must be smaller than or equal to 2147483647.'
      end

      if receivable_invoice_title_th.to_s.length < 0
        fail ArgumentError, 'invalid value for "receivable_invoice_title_th", the character length must be great than or equal to 0.'
      end

      @receivable_invoice_title_th = receivable_invoice_title_th
    end

    # Custom attribute writer method with validation
    # @param [Object] receivable_invoice_title_en Value to be assigned
    def receivable_invoice_title_en=(receivable_invoice_title_en)
      if receivable_invoice_title_en.nil?
        fail ArgumentError, 'receivable_invoice_title_en cannot be nil'
      end

      if receivable_invoice_title_en.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "receivable_invoice_title_en", the character length must be smaller than or equal to 2147483647.'
      end

      if receivable_invoice_title_en.to_s.length < 0
        fail ArgumentError, 'invalid value for "receivable_invoice_title_en", the character length must be great than or equal to 0.'
      end

      @receivable_invoice_title_en = receivable_invoice_title_en
    end

    # Custom attribute writer method with validation
    # @param [Object] with_holding_tax_prefix Value to be assigned
    def with_holding_tax_prefix=(with_holding_tax_prefix)
      if with_holding_tax_prefix.nil?
        fail ArgumentError, 'with_holding_tax_prefix cannot be nil'
      end

      if with_holding_tax_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "with_holding_tax_prefix", the character length must be smaller than or equal to 6.'
      end

      if with_holding_tax_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "with_holding_tax_prefix", the character length must be great than or equal to 0.'
      end

      @with_holding_tax_prefix = with_holding_tax_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] remarks Value to be assigned
    def remarks=(remarks)
      if !remarks.nil? && remarks.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "remarks", the character length must be smaller than or equal to 2147483647.'
      end

      if !remarks.nil? && remarks.to_s.length < 0
        fail ArgumentError, 'invalid value for "remarks", the character length must be great than or equal to 0.'
      end

      @remarks = remarks
    end

    # Custom attribute writer method with validation
    # @param [Object] email_message_template Value to be assigned
    def email_message_template=(email_message_template)
      if !email_message_template.nil? && email_message_template.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "email_message_template", the character length must be smaller than or equal to 2147483647.'
      end

      if !email_message_template.nil? && email_message_template.to_s.length < 0
        fail ArgumentError, 'invalid value for "email_message_template", the character length must be great than or equal to 0.'
      end

      @email_message_template = email_message_template
    end

    # Custom attribute writer method with validation
    # @param [Object] purchase_prefix Value to be assigned
    def purchase_prefix=(purchase_prefix)
      if purchase_prefix.nil?
        fail ArgumentError, 'purchase_prefix cannot be nil'
      end

      if purchase_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "purchase_prefix", the character length must be smaller than or equal to 6.'
      end

      if purchase_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "purchase_prefix", the character length must be great than or equal to 0.'
      end

      @purchase_prefix = purchase_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] purchase_title_en Value to be assigned
    def purchase_title_en=(purchase_title_en)
      if purchase_title_en.nil?
        fail ArgumentError, 'purchase_title_en cannot be nil'
      end

      if purchase_title_en.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "purchase_title_en", the character length must be smaller than or equal to 2147483647.'
      end

      if purchase_title_en.to_s.length < 0
        fail ArgumentError, 'invalid value for "purchase_title_en", the character length must be great than or equal to 0.'
      end

      @purchase_title_en = purchase_title_en
    end

    # Custom attribute writer method with validation
    # @param [Object] purchase_title_th Value to be assigned
    def purchase_title_th=(purchase_title_th)
      if purchase_title_th.nil?
        fail ArgumentError, 'purchase_title_th cannot be nil'
      end

      if purchase_title_th.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "purchase_title_th", the character length must be smaller than or equal to 2147483647.'
      end

      if purchase_title_th.to_s.length < 0
        fail ArgumentError, 'invalid value for "purchase_title_th", the character length must be great than or equal to 0.'
      end

      @purchase_title_th = purchase_title_th
    end

    # Custom attribute writer method with validation
    # @param [Object] adjust_inventory_prefix Value to be assigned
    def adjust_inventory_prefix=(adjust_inventory_prefix)
      if adjust_inventory_prefix.nil?
        fail ArgumentError, 'adjust_inventory_prefix cannot be nil'
      end

      if adjust_inventory_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "adjust_inventory_prefix", the character length must be smaller than or equal to 6.'
      end

      if adjust_inventory_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "adjust_inventory_prefix", the character length must be great than or equal to 0.'
      end

      @adjust_inventory_prefix = adjust_inventory_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] expense_prefix Value to be assigned
    def expense_prefix=(expense_prefix)
      if expense_prefix.nil?
        fail ArgumentError, 'expense_prefix cannot be nil'
      end

      if expense_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "expense_prefix", the character length must be smaller than or equal to 6.'
      end

      if expense_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "expense_prefix", the character length must be great than or equal to 0.'
      end

      @expense_prefix = expense_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] payment_slip_prefix Value to be assigned
    def payment_slip_prefix=(payment_slip_prefix)
      if payment_slip_prefix.nil?
        fail ArgumentError, 'payment_slip_prefix cannot be nil'
      end

      if payment_slip_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "payment_slip_prefix", the character length must be smaller than or equal to 6.'
      end

      if payment_slip_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "payment_slip_prefix", the character length must be great than or equal to 0.'
      end

      @payment_slip_prefix = payment_slip_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] rubber_stamp_url Value to be assigned
    def rubber_stamp_url=(rubber_stamp_url)
      if !rubber_stamp_url.nil? && rubber_stamp_url.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "rubber_stamp_url", the character length must be smaller than or equal to 2147483647.'
      end

      if !rubber_stamp_url.nil? && rubber_stamp_url.to_s.length < 0
        fail ArgumentError, 'invalid value for "rubber_stamp_url", the character length must be great than or equal to 0.'
      end

      @rubber_stamp_url = rubber_stamp_url
    end

    # Custom attribute writer method with validation
    # @param [Object] credit_note_prefix Value to be assigned
    def credit_note_prefix=(credit_note_prefix)
      if credit_note_prefix.nil?
        fail ArgumentError, 'credit_note_prefix cannot be nil'
      end

      if credit_note_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "credit_note_prefix", the character length must be smaller than or equal to 6.'
      end

      if credit_note_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "credit_note_prefix", the character length must be great than or equal to 0.'
      end

      @credit_note_prefix = credit_note_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] credit_note_title_en Value to be assigned
    def credit_note_title_en=(credit_note_title_en)
      if credit_note_title_en.nil?
        fail ArgumentError, 'credit_note_title_en cannot be nil'
      end

      if credit_note_title_en.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "credit_note_title_en", the character length must be smaller than or equal to 2147483647.'
      end

      if credit_note_title_en.to_s.length < 0
        fail ArgumentError, 'invalid value for "credit_note_title_en", the character length must be great than or equal to 0.'
      end

      @credit_note_title_en = credit_note_title_en
    end

    # Custom attribute writer method with validation
    # @param [Object] credit_note_title_th Value to be assigned
    def credit_note_title_th=(credit_note_title_th)
      if credit_note_title_th.nil?
        fail ArgumentError, 'credit_note_title_th cannot be nil'
      end

      if credit_note_title_th.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "credit_note_title_th", the character length must be smaller than or equal to 2147483647.'
      end

      if credit_note_title_th.to_s.length < 0
        fail ArgumentError, 'invalid value for "credit_note_title_th", the character length must be great than or equal to 0.'
      end

      @credit_note_title_th = credit_note_title_th
    end

    # Custom attribute writer method with validation
    # @param [Object] debit_note_prefix Value to be assigned
    def debit_note_prefix=(debit_note_prefix)
      if debit_note_prefix.nil?
        fail ArgumentError, 'debit_note_prefix cannot be nil'
      end

      if debit_note_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "debit_note_prefix", the character length must be smaller than or equal to 6.'
      end

      if debit_note_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "debit_note_prefix", the character length must be great than or equal to 0.'
      end

      @debit_note_prefix = debit_note_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] debit_note_title_en Value to be assigned
    def debit_note_title_en=(debit_note_title_en)
      if debit_note_title_en.nil?
        fail ArgumentError, 'debit_note_title_en cannot be nil'
      end

      if debit_note_title_en.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "debit_note_title_en", the character length must be smaller than or equal to 2147483647.'
      end

      if debit_note_title_en.to_s.length < 0
        fail ArgumentError, 'invalid value for "debit_note_title_en", the character length must be great than or equal to 0.'
      end

      @debit_note_title_en = debit_note_title_en
    end

    # Custom attribute writer method with validation
    # @param [Object] debit_note_title_th Value to be assigned
    def debit_note_title_th=(debit_note_title_th)
      if debit_note_title_th.nil?
        fail ArgumentError, 'debit_note_title_th cannot be nil'
      end

      if debit_note_title_th.to_s.length > 2147483647
        fail ArgumentError, 'invalid value for "debit_note_title_th", the character length must be smaller than or equal to 2147483647.'
      end

      if debit_note_title_th.to_s.length < 0
        fail ArgumentError, 'invalid value for "debit_note_title_th", the character length must be great than or equal to 0.'
      end

      @debit_note_title_th = debit_note_title_th
    end

    # Custom attribute writer method with validation
    # @param [Object] journal_voucher_prefix Value to be assigned
    def journal_voucher_prefix=(journal_voucher_prefix)
      if journal_voucher_prefix.nil?
        fail ArgumentError, 'journal_voucher_prefix cannot be nil'
      end

      if journal_voucher_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "journal_voucher_prefix", the character length must be smaller than or equal to 6.'
      end

      if journal_voucher_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "journal_voucher_prefix", the character length must be great than or equal to 0.'
      end

      @journal_voucher_prefix = journal_voucher_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] purchase_voucher_prefix Value to be assigned
    def purchase_voucher_prefix=(purchase_voucher_prefix)
      if purchase_voucher_prefix.nil?
        fail ArgumentError, 'purchase_voucher_prefix cannot be nil'
      end

      if purchase_voucher_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "purchase_voucher_prefix", the character length must be smaller than or equal to 6.'
      end

      if purchase_voucher_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "purchase_voucher_prefix", the character length must be great than or equal to 0.'
      end

      @purchase_voucher_prefix = purchase_voucher_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] sales_voucher_prefix Value to be assigned
    def sales_voucher_prefix=(sales_voucher_prefix)
      if sales_voucher_prefix.nil?
        fail ArgumentError, 'sales_voucher_prefix cannot be nil'
      end

      if sales_voucher_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "sales_voucher_prefix", the character length must be smaller than or equal to 6.'
      end

      if sales_voucher_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "sales_voucher_prefix", the character length must be great than or equal to 0.'
      end

      @sales_voucher_prefix = sales_voucher_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] payment_voucher_prefix Value to be assigned
    def payment_voucher_prefix=(payment_voucher_prefix)
      if payment_voucher_prefix.nil?
        fail ArgumentError, 'payment_voucher_prefix cannot be nil'
      end

      if payment_voucher_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "payment_voucher_prefix", the character length must be smaller than or equal to 6.'
      end

      if payment_voucher_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "payment_voucher_prefix", the character length must be great than or equal to 0.'
      end

      @payment_voucher_prefix = payment_voucher_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] received_voucher_prefix Value to be assigned
    def received_voucher_prefix=(received_voucher_prefix)
      if received_voucher_prefix.nil?
        fail ArgumentError, 'received_voucher_prefix cannot be nil'
      end

      if received_voucher_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "received_voucher_prefix", the character length must be smaller than or equal to 6.'
      end

      if received_voucher_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "received_voucher_prefix", the character length must be great than or equal to 0.'
      end

      @received_voucher_prefix = received_voucher_prefix
    end

    # Custom attribute writer method with validation
    # @param [Object] conversion_balance_prefix Value to be assigned
    def conversion_balance_prefix=(conversion_balance_prefix)
      if conversion_balance_prefix.nil?
        fail ArgumentError, 'conversion_balance_prefix cannot be nil'
      end

      if conversion_balance_prefix.to_s.length > 6
        fail ArgumentError, 'invalid value for "conversion_balance_prefix", the character length must be smaller than or equal to 6.'
      end

      if conversion_balance_prefix.to_s.length < 0
        fail ArgumentError, 'invalid value for "conversion_balance_prefix", the character length must be great than or equal to 0.'
      end

      @conversion_balance_prefix = conversion_balance_prefix
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          company_id == o.company_id &&
          show_with_holding == o.show_with_holding &&
          invoice_prefix == o.invoice_prefix &&
          quotation_prefix == o.quotation_prefix &&
          billing_note_prefix == o.billing_note_prefix &&
          receipt_prefix == o.receipt_prefix &&
          purchase_order_prefix == o.purchase_order_prefix &&
          cash_invoice_prefix == o.cash_invoice_prefix &&
          receivable_invoice_prefix == o.receivable_invoice_prefix &&
          cash_invoice_starting_number == o.cash_invoice_starting_number &&
          receipt_starting_number == o.receipt_starting_number &&
          quotation_starting_number == o.quotation_starting_number &&
          billing_note_starting_number == o.billing_note_starting_number &&
          purchase_order_starting_number == o.purchase_order_starting_number &&
          purchase_order_title_en == o.purchase_order_title_en &&
          quotation_title_en == o.quotation_title_en &&
          billing_note_title_en == o.billing_note_title_en &&
          invoice_title_en == o.invoice_title_en &&
          receipt_title_en == o.receipt_title_en &&
          payment_slip_title_en == o.payment_slip_title_en &&
          purchase_order_title_th == o.purchase_order_title_th &&
          quotation_title_th == o.quotation_title_th &&
          billing_note_title_th == o.billing_note_title_th &&
          invoice_title_th == o.invoice_title_th &&
          receipt_title_th == o.receipt_title_th &&
          payment_slip_title_th == o.payment_slip_title_th &&
          business_type == o.business_type &&
          terms_agreement == o.terms_agreement &&
          default_remarks == o.default_remarks &&
          invoice_starting_number == o.invoice_starting_number &&
          cash_invoice_title_en == o.cash_invoice_title_en &&
          cash_invoice_title_th == o.cash_invoice_title_th &&
          receivable_invoice_title_th == o.receivable_invoice_title_th &&
          receivable_invoice_title_en == o.receivable_invoice_title_en &&
          running_number_type == o.running_number_type &&
          purchase_order_starting_year == o.purchase_order_starting_year &&
          quotation_starting_year == o.quotation_starting_year &&
          billing_note_starting_year == o.billing_note_starting_year &&
          invoice_starting_year == o.invoice_starting_year &&
          cash_invoice_starting_year == o.cash_invoice_starting_year &&
          receipt_starting_year == o.receipt_starting_year &&
          purchase_order_starting_month == o.purchase_order_starting_month &&
          quotation_starting_month == o.quotation_starting_month &&
          billing_note_starting_month == o.billing_note_starting_month &&
          invoice_starting_month == o.invoice_starting_month &&
          cash_invoice_starting_month == o.cash_invoice_starting_month &&
          receipt_starting_month == o.receipt_starting_month &&
          settings_initiated == o.settings_initiated &&
          running_number_settings_modified_on == o.running_number_settings_modified_on &&
          with_holding_tax_prefix == o.with_holding_tax_prefix &&
          with_holding_tax_starting_number == o.with_holding_tax_starting_number &&
          with_holding_tax_starting_month == o.with_holding_tax_starting_month &&
          with_holding_tax_starting_year == o.with_holding_tax_starting_year &&
          document_templates == o.document_templates &&
          print_color == o.print_color &&
          template_font == o.template_font &&
          print_one_invoice == o.print_one_invoice &&
          remarks == o.remarks &&
          email_message_template == o.email_message_template &&
          purchase_prefix == o.purchase_prefix &&
          purchase_starting_number == o.purchase_starting_number &&
          purchase_title_en == o.purchase_title_en &&
          purchase_title_th == o.purchase_title_th &&
          purchase_starting_year == o.purchase_starting_year &&
          purchase_starting_month == o.purchase_starting_month &&
          adjust_inventory_prefix == o.adjust_inventory_prefix &&
          adjust_inventory_starting_number == o.adjust_inventory_starting_number &&
          adjust_inventory_starting_month == o.adjust_inventory_starting_month &&
          adjust_inventory_starting_year == o.adjust_inventory_starting_year &&
          expense_prefix == o.expense_prefix &&
          expense_starting_number == o.expense_starting_number &&
          expense_starting_month == o.expense_starting_month &&
          expense_starting_year == o.expense_starting_year &&
          payment_slip_prefix == o.payment_slip_prefix &&
          payment_slip_starting_number == o.payment_slip_starting_number &&
          payment_slip_starting_year == o.payment_slip_starting_year &&
          payment_slip_starting_month == o.payment_slip_starting_month &&
          cash_invoice_running_number_modified_on == o.cash_invoice_running_number_modified_on &&
          purchase_order_running_number_modified_on == o.purchase_order_running_number_modified_on &&
          quotation_running_number_modified_on == o.quotation_running_number_modified_on &&
          billing_note_running_number_modified_on == o.billing_note_running_number_modified_on &&
          invoice_running_number_modified_on == o.invoice_running_number_modified_on &&
          purchase_running_number_modified_on == o.purchase_running_number_modified_on &&
          receivable_invoice_running_number_modified_on == o.receivable_invoice_running_number_modified_on &&
          payment_slip_running_number_modified_on == o.payment_slip_running_number_modified_on &&
          rubber_stamp_url == o.rubber_stamp_url &&
          credit_note_prefix == o.credit_note_prefix &&
          credit_note_starting_number == o.credit_note_starting_number &&
          credit_note_starting_month == o.credit_note_starting_month &&
          credit_note_starting_year == o.credit_note_starting_year &&
          credit_note_running_number_modified_on == o.credit_note_running_number_modified_on &&
          credit_note_title_en == o.credit_note_title_en &&
          credit_note_title_th == o.credit_note_title_th &&
          debit_note_prefix == o.debit_note_prefix &&
          debit_note_starting_number == o.debit_note_starting_number &&
          debit_note_starting_month == o.debit_note_starting_month &&
          debit_note_starting_year == o.debit_note_starting_year &&
          debit_note_running_number_modified_on == o.debit_note_running_number_modified_on &&
          debit_note_title_en == o.debit_note_title_en &&
          debit_note_title_th == o.debit_note_title_th &&
          receipt_running_number_modified_on == o.receipt_running_number_modified_on &&
          receivable_invoice_starting_number == o.receivable_invoice_starting_number &&
          receivable_invoice_starting_month == o.receivable_invoice_starting_month &&
          receivable_invoice_starting_year == o.receivable_invoice_starting_year &&
          use_partial_receipt == o.use_partial_receipt &&
          use_cash_invoice == o.use_cash_invoice &&
          use_short_cash_invoice == o.use_short_cash_invoice &&
          general_ledger_running_number_type == o.general_ledger_running_number_type &&
          journal_voucher_prefix == o.journal_voucher_prefix &&
          purchase_voucher_prefix == o.purchase_voucher_prefix &&
          purchase_voucher_running_number_modified_on == o.purchase_voucher_running_number_modified_on &&
          sales_voucher_prefix == o.sales_voucher_prefix &&
          sales_voucher_running_number_modified_on == o.sales_voucher_running_number_modified_on &&
          payment_voucher_prefix == o.payment_voucher_prefix &&
          payment_voucher_running_number_modified_on == o.payment_voucher_running_number_modified_on &&
          received_voucher_prefix == o.received_voucher_prefix &&
          received_voucher_running_number_modified_on == o.received_voucher_running_number_modified_on &&
          conversion_balance_prefix == o.conversion_balance_prefix &&
          conversion_balance_running_number_modified_on == o.conversion_balance_running_number_modified_on &&
          e_tax_email == o.e_tax_email &&
          short_cash_invoice_templates == o.short_cash_invoice_templates &&
          use_billing_note_accounting_rule == o.use_billing_note_accounting_rule &&
          billing_note_accounting_rule_modified_on == o.billing_note_accounting_rule_modified_on &&
          template_font_size == o.template_font_size &&
          use_multi_currency == o.use_multi_currency &&
          expense_title_th == o.expense_title_th &&
          expense_title_en == o.expense_title_en &&
          with_holding_tax_title_th == o.with_holding_tax_title_th &&
          with_holding_tax_title_en == o.with_holding_tax_title_en
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [company_id, show_with_holding, invoice_prefix, quotation_prefix, billing_note_prefix, receipt_prefix, purchase_order_prefix, cash_invoice_prefix, receivable_invoice_prefix, cash_invoice_starting_number, receipt_starting_number, quotation_starting_number, billing_note_starting_number, purchase_order_starting_number, purchase_order_title_en, quotation_title_en, billing_note_title_en, invoice_title_en, receipt_title_en, payment_slip_title_en, purchase_order_title_th, quotation_title_th, billing_note_title_th, invoice_title_th, receipt_title_th, payment_slip_title_th, business_type, terms_agreement, default_remarks, invoice_starting_number, cash_invoice_title_en, cash_invoice_title_th, receivable_invoice_title_th, receivable_invoice_title_en, running_number_type, purchase_order_starting_year, quotation_starting_year, billing_note_starting_year, invoice_starting_year, cash_invoice_starting_year, receipt_starting_year, purchase_order_starting_month, quotation_starting_month, billing_note_starting_month, invoice_starting_month, cash_invoice_starting_month, receipt_starting_month, settings_initiated, running_number_settings_modified_on, with_holding_tax_prefix, with_holding_tax_starting_number, with_holding_tax_starting_month, with_holding_tax_starting_year, document_templates, print_color, template_font, print_one_invoice, remarks, email_message_template, purchase_prefix, purchase_starting_number, purchase_title_en, purchase_title_th, purchase_starting_year, purchase_starting_month, adjust_inventory_prefix, adjust_inventory_starting_number, adjust_inventory_starting_month, adjust_inventory_starting_year, expense_prefix, expense_starting_number, expense_starting_month, expense_starting_year, payment_slip_prefix, payment_slip_starting_number, payment_slip_starting_year, payment_slip_starting_month, cash_invoice_running_number_modified_on, purchase_order_running_number_modified_on, quotation_running_number_modified_on, billing_note_running_number_modified_on, invoice_running_number_modified_on, purchase_running_number_modified_on, receivable_invoice_running_number_modified_on, payment_slip_running_number_modified_on, rubber_stamp_url, credit_note_prefix, credit_note_starting_number, credit_note_starting_month, credit_note_starting_year, credit_note_running_number_modified_on, credit_note_title_en, credit_note_title_th, debit_note_prefix, debit_note_starting_number, debit_note_starting_month, debit_note_starting_year, debit_note_running_number_modified_on, debit_note_title_en, debit_note_title_th, receipt_running_number_modified_on, receivable_invoice_starting_number, receivable_invoice_starting_month, receivable_invoice_starting_year, use_partial_receipt, use_cash_invoice, use_short_cash_invoice, general_ledger_running_number_type, journal_voucher_prefix, purchase_voucher_prefix, purchase_voucher_running_number_modified_on, sales_voucher_prefix, sales_voucher_running_number_modified_on, payment_voucher_prefix, payment_voucher_running_number_modified_on, received_voucher_prefix, received_voucher_running_number_modified_on, conversion_balance_prefix, conversion_balance_running_number_modified_on, e_tax_email, short_cash_invoice_templates, use_billing_note_accounting_rule, billing_note_accounting_rule_modified_on, template_font_size, use_multi_currency, expense_title_th, expense_title_en, with_holding_tax_title_th, with_holding_tax_title_en].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      new.build_from_hash(attributes)
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.openapi_types.each_pair do |key, type|
        if attributes[self.class.attribute_map[key]].nil? && self.class.openapi_nullable.include?(key)
          self.send("#{key}=", nil)
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[self.class.attribute_map[key]].map { |v| _deserialize($1, v) })
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = OpenapiClient.const_get(type)
        klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
