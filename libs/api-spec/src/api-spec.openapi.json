
{
  "x-generator": "NSwag v13.11.3.0 (NJsonSchema v10.4.4.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "FlowAccount Open API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://openapi.flowaccount.com/sandbox",
      "description": "The sandbox server"
    },
    {
      "url": "https://openapi.flowaccount.com/v3-alpha",
      "description": "The prod server"
    }
  ],
  "paths": {
    "/{culture}/cash-invoices/batch-metadata": {
      "get": {
        "tags": [
          "BatchImport"
        ],
        "summary": "To get details of a document",
        "operationId": "BatchImport_GenerateBacthIdMetadata",
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchImportMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/batch-import-history": {
      "post": {
        "tags": [
          "BatchImport"
        ],
        "operationId": "BatchImport_QueryBatchHistory",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchHistory"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/query-batch": {
      "post": {
        "tags": [
          "BatchImport"
        ],
        "summary": "Query the batch by id and status",
        "operationId": "BatchImport_QueryBatch",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BatchImportStatus"
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "batchId",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchStatus"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/retry-simple-documents": {
      "post": {
        "tags": [
          "BatchImport"
        ],
        "operationId": "BatchImport_RetrySimpleDocuments",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "retryRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchImportRetry"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/mark-viewed": {
      "post": {
        "tags": [
          "BatchImport"
        ],
        "summary": "Mark the batch as viewed in notification.",
        "operationId": "BatchImport_MarkViewed",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          },
          {
            "name": "batchId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 4
          }
        ],
        "requestBody": {
          "x-name": "companyId",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/{culture}/cash-invoices/get-presign-for-upload-simpledoc": {
      "post": {
        "tags": [
          "BatchImport"
        ],
        "summary": "Get presign url to upload the file with payloads",
        "operationId": "BatchImport_GetPresign",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchImportPayload"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/get-batch-import-org-file/{batchId}": {
      "get": {
        "tags": [
          "BatchImport"
        ],
        "summary": "Get Original File",
        "operationId": "BatchImport_GetOrgingalFile",
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/get-batch-s3-data/{batchId}": {
      "get": {
        "tags": [
          "BatchImport"
        ],
        "summary": "Get data from Storage",
        "operationId": "BatchImport_GetBatchS3Data",
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/custom-template": {
      "post": {
        "tags": [
          "BatchImport"
        ],
        "summary": "Create or Update (Upsert) custom template",
        "operationId": "BatchImport_UpsertCustomTemplate",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomTemplate"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/custom-template/{templateId}": {
      "get": {
        "tags": [
          "BatchImport"
        ],
        "summary": "Get custom template",
        "operationId": "BatchImport_GetCustomTemplate",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "BatchImport"
        ],
        "summary": "Delete custom template",
        "operationId": "BatchImport_DeleteCustomTemplate",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/{culture}/contacts/search": {
      "get": {
        "tags": [
          "Contact"
        ],
        "operationId": "Contact_Search",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/{culture}/contacts": {
      "get": {
        "tags": [
          "Contact"
        ],
        "operationId": "Contact_GetContactList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "operationId": "Contact_Create",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/{culture}/contacts/{id}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "operationId": "Contact_GetContactList2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "operationId": "Contact_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "operationId": "Contact_RemoveContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/{culture}/contacts/{contactId}/update-contact-qrcode": {
      "post": {
        "tags": [
          "Contact"
        ],
        "operationId": "Contact_UploadContactQRCode",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices": {
      "get": {
        "tags": [
          "CashInvoice"
        ],
        "summary": "To query for documents.",
        "operationId": "CashInvoice_Index",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/{id}": {
      "get": {
        "tags": [
          "CashInvoice"
        ],
        "summary": "To get details of a document",
        "operationId": "CashInvoice_Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Sql DocumentId",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CashInvoice"
        ],
        "summary": "To delete the document given a list of documentids",
        "operationId": "CashInvoice_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/simple-document": {
      "post": {
        "tags": [
          "CashInvoice"
        ],
        "summary": "To Create a document with SimpleDocument as the parameter",
        "operationId": "CashInvoice_Create",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "simpleDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/inline-document": {
      "post": {
        "tags": [
          "CashInvoice"
        ],
        "summary": "To Create a document with InlineDocument as the parameter",
        "operationId": "CashInvoice_Create2",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "inlineDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/simple-document/{id}": {
      "put": {
        "tags": [
          "CashInvoice"
        ],
        "summary": "To Update a document with simpleDocument as the parameter",
        "operationId": "CashInvoice_Edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "simpleDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/inline-document/{id}": {
      "put": {
        "tags": [
          "CashInvoice"
        ],
        "summary": "To Update a document with inlineDocument as the parameter",
        "operationId": "CashInvoice_Edit2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "inlineDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/{documentId}/status-key/{statusKey}": {
      "post": {
        "tags": [
          "CashInvoice"
        ],
        "summary": "To change status by the document id and key",
        "operationId": "CashInvoice_ChangeStatusByKey",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "statusKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/cash-invoices/{id}/payments": {
      "post": {
        "tags": [
          "CashInvoice"
        ],
        "summary": "To Accept payment with the paymentModel",
        "operationId": "CashInvoice_ReceivePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "sourcePayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/billing-notes": {
      "get": {
        "tags": [
          "BillingNote"
        ],
        "summary": "To query for documents.",
        "operationId": "BillingNote_Index",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/billing-notes/{id}": {
      "get": {
        "tags": [
          "BillingNote"
        ],
        "summary": "To get details of a document",
        "operationId": "BillingNote_Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Sql DocumentId",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "BillingNote"
        ],
        "summary": "To delete the document given a list of documentids",
        "operationId": "BillingNote_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/billing-notes/simple-document": {
      "post": {
        "tags": [
          "BillingNote"
        ],
        "summary": "To Create a document with SimpleDocument as the parameter",
        "operationId": "BillingNote_Create",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "simpleDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/billing-notes/inline-document": {
      "post": {
        "tags": [
          "BillingNote"
        ],
        "summary": "To Create a document with InlineDocument as the parameter",
        "operationId": "BillingNote_Create2",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "inlineDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/billing-notes/simple-document/{id}": {
      "put": {
        "tags": [
          "BillingNote"
        ],
        "summary": "To Update a document with simpleDocument as the parameter",
        "operationId": "BillingNote_Edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "simpleDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/billing-notes/inline-document/{id}": {
      "put": {
        "tags": [
          "BillingNote"
        ],
        "summary": "To Update a document with inlineDocument as the parameter",
        "operationId": "BillingNote_Edit2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "inlineDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/billing-notes/{documentId}/status-key/{statusKey}": {
      "post": {
        "tags": [
          "BillingNote"
        ],
        "summary": "To change status by the document id and key",
        "operationId": "BillingNote_ChangeStatusByKey",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "statusKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/billing-notes/{id}/payments": {
      "post": {
        "tags": [
          "BillingNote"
        ],
        "summary": "To Accept payment with the paymentModel",
        "operationId": "BillingNote_ReceivePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "sourcePayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/quotations/{id}/partial-manual-payall": {
      "post": {
        "tags": [
          "Quotation"
        ],
        "operationId": "Quotation_CreatePartialManualPayall",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/quotations/{id}/partial-manual-cancel": {
      "post": {
        "tags": [
          "Quotation"
        ],
        "operationId": "Quotation_PartialManualCancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/quotations": {
      "get": {
        "tags": [
          "Quotation"
        ],
        "summary": "To query for documents.",
        "operationId": "Quotation_Index",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/quotations/{id}": {
      "get": {
        "tags": [
          "Quotation"
        ],
        "summary": "To get details of a document",
        "operationId": "Quotation_Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Sql DocumentId",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Quotation"
        ],
        "summary": "To delete the document given a list of documentids",
        "operationId": "Quotation_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/quotations/simple-document": {
      "post": {
        "tags": [
          "Quotation"
        ],
        "summary": "To Create a document with SimpleDocument as the parameter",
        "operationId": "Quotation_Create",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "simpleDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/quotations/inline-document": {
      "post": {
        "tags": [
          "Quotation"
        ],
        "summary": "To Create a document with InlineDocument as the parameter",
        "operationId": "Quotation_Create2",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "inlineDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/quotations/simple-document/{id}": {
      "put": {
        "tags": [
          "Quotation"
        ],
        "summary": "To Update a document with simpleDocument as the parameter",
        "operationId": "Quotation_Edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "simpleDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/quotations/inline-document/{id}": {
      "put": {
        "tags": [
          "Quotation"
        ],
        "summary": "To Update a document with inlineDocument as the parameter",
        "operationId": "Quotation_Edit2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "inlineDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/quotations/{documentId}/status-key/{statusKey}": {
      "post": {
        "tags": [
          "Quotation"
        ],
        "summary": "To change status by the document id and key",
        "operationId": "Quotation_ChangeStatusByKey",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "statusKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/quotations/{id}/payments": {
      "post": {
        "tags": [
          "Quotation"
        ],
        "summary": "To Accept payment with the paymentModel",
        "operationId": "Quotation_ReceivePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "sourcePayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receipts/categories/business": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "operationId": "Receipt_GetBusinessCategories",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receipts/categories/accounting": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "operationId": "Receipt_GetChartOfAccounts",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receipts": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "To query for documents.",
        "operationId": "Receipt_Index",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receipts/{id}": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "To get details of a document",
        "operationId": "Receipt_Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Sql DocumentId",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Receipt"
        ],
        "summary": "To delete the document given a list of documentids",
        "operationId": "Receipt_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receipts/simple-document": {
      "post": {
        "tags": [
          "Receipt"
        ],
        "summary": "To Create a document with SimpleDocument as the parameter",
        "operationId": "Receipt_Create",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "simpleDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receipts/inline-document": {
      "post": {
        "tags": [
          "Receipt"
        ],
        "summary": "To Create a document with InlineDocument as the parameter",
        "operationId": "Receipt_Create2",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "inlineDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receipts/simple-document/{id}": {
      "put": {
        "tags": [
          "Receipt"
        ],
        "summary": "To Update a document with simpleDocument as the parameter",
        "operationId": "Receipt_Edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "simpleDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receipts/inline-document/{id}": {
      "put": {
        "tags": [
          "Receipt"
        ],
        "summary": "To Update a document with inlineDocument as the parameter",
        "operationId": "Receipt_Edit2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "inlineDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receipts/{documentId}/status-key/{statusKey}": {
      "post": {
        "tags": [
          "Receipt"
        ],
        "summary": "To change status by the document id and key",
        "operationId": "Receipt_ChangeStatusByKey",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "statusKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receipts/{id}/payments": {
      "post": {
        "tags": [
          "Receipt"
        ],
        "summary": "To Accept payment with the paymentModel",
        "operationId": "Receipt_ReceivePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "sourcePayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receivable-invoices": {
      "get": {
        "tags": [
          "ReceivableInvoice"
        ],
        "summary": "To query for documents.",
        "operationId": "ReceivableInvoice_Index",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receivable-invoices/{id}": {
      "get": {
        "tags": [
          "ReceivableInvoice"
        ],
        "summary": "To get details of a document",
        "operationId": "ReceivableInvoice_Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Sql DocumentId",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ReceivableInvoice"
        ],
        "summary": "To delete the document given a list of documentids",
        "operationId": "ReceivableInvoice_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receivable-invoices/simple-document": {
      "post": {
        "tags": [
          "ReceivableInvoice"
        ],
        "summary": "To Create a document with SimpleDocument as the parameter",
        "operationId": "ReceivableInvoice_Create",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "simpleDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receivable-invoices/inline-document": {
      "post": {
        "tags": [
          "ReceivableInvoice"
        ],
        "summary": "To Create a document with InlineDocument as the parameter",
        "operationId": "ReceivableInvoice_Create2",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "inlineDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receivable-invoices/simple-document/{id}": {
      "put": {
        "tags": [
          "ReceivableInvoice"
        ],
        "summary": "To Update a document with simpleDocument as the parameter",
        "operationId": "ReceivableInvoice_Edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "simpleDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receivable-invoices/inline-document/{id}": {
      "put": {
        "tags": [
          "ReceivableInvoice"
        ],
        "summary": "To Update a document with inlineDocument as the parameter",
        "operationId": "ReceivableInvoice_Edit2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "inlineDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receivable-invoices/{documentId}/status-key/{statusKey}": {
      "post": {
        "tags": [
          "ReceivableInvoice"
        ],
        "summary": "To change status by the document id and key",
        "operationId": "ReceivableInvoice_ChangeStatusByKey",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "statusKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/receivable-invoices/{id}/payments": {
      "post": {
        "tags": [
          "ReceivableInvoice"
        ],
        "summary": "To Accept payment with the paymentModel",
        "operationId": "ReceivableInvoice_ReceivePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "sourcePayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/tax-invoices/cumulative-references": {
      "get": {
        "tags": [
          "TaxInvoice"
        ],
        "operationId": "TaxInvoice_GetCumulativeDocumentReferenceList",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/tax-invoices": {
      "get": {
        "tags": [
          "TaxInvoice"
        ],
        "summary": "To query for documents.",
        "operationId": "TaxInvoice_Index",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/tax-invoices/{id}": {
      "get": {
        "tags": [
          "TaxInvoice"
        ],
        "summary": "To get details of a document",
        "operationId": "TaxInvoice_Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Sql DocumentId",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TaxInvoice"
        ],
        "summary": "To delete the document given a list of documentids",
        "operationId": "TaxInvoice_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/tax-invoices/simple-document": {
      "post": {
        "tags": [
          "TaxInvoice"
        ],
        "summary": "To Create a document with SimpleDocument as the parameter",
        "operationId": "TaxInvoice_Create",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "simpleDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/tax-invoices/inline-document": {
      "post": {
        "tags": [
          "TaxInvoice"
        ],
        "summary": "To Create a document with InlineDocument as the parameter",
        "operationId": "TaxInvoice_Create2",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "inlineDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/tax-invoices/simple-document/{id}": {
      "put": {
        "tags": [
          "TaxInvoice"
        ],
        "summary": "To Update a document with simpleDocument as the parameter",
        "operationId": "TaxInvoice_Edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "simpleDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/tax-invoices/inline-document/{id}": {
      "put": {
        "tags": [
          "TaxInvoice"
        ],
        "summary": "To Update a document with inlineDocument as the parameter",
        "operationId": "TaxInvoice_Edit2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "inlineDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/tax-invoices/{documentId}/status-key/{statusKey}": {
      "post": {
        "tags": [
          "TaxInvoice"
        ],
        "summary": "To change status by the document id and key",
        "operationId": "TaxInvoice_ChangeStatusByKey",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "statusKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/tax-invoices/{id}/payments": {
      "post": {
        "tags": [
          "TaxInvoice"
        ],
        "summary": "To Accept payment with the paymentModel",
        "operationId": "TaxInvoice_ReceivePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "sourcePayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/credit-notes/cumulative-references": {
      "get": {
        "tags": [
          "CreditNote"
        ],
        "operationId": "CreditNote_GetCumulativeDocumentReferenceList",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/credit-notes": {
      "get": {
        "tags": [
          "CreditNote"
        ],
        "summary": "To query for documents.",
        "operationId": "CreditNote_Index",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/credit-notes/{id}": {
      "get": {
        "tags": [
          "CreditNote"
        ],
        "summary": "To get details of a document",
        "operationId": "CreditNote_Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Sql DocumentId",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CreditNote"
        ],
        "summary": "To delete the document given a list of documentids",
        "operationId": "CreditNote_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/credit-notes/simple-document": {
      "post": {
        "tags": [
          "CreditNote"
        ],
        "summary": "To Create a document with SimpleDocument as the parameter",
        "operationId": "CreditNote_Create",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "simpleDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/credit-notes/inline-document": {
      "post": {
        "tags": [
          "CreditNote"
        ],
        "summary": "To Create a document with InlineDocument as the parameter",
        "operationId": "CreditNote_Create2",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "inlineDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/credit-notes/simple-document/{id}": {
      "put": {
        "tags": [
          "CreditNote"
        ],
        "summary": "To Update a document with simpleDocument as the parameter",
        "operationId": "CreditNote_Edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "simpleDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/credit-notes/inline-document/{id}": {
      "put": {
        "tags": [
          "CreditNote"
        ],
        "summary": "To Update a document with inlineDocument as the parameter",
        "operationId": "CreditNote_Edit2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "inlineDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/credit-notes/{documentId}/status-key/{statusKey}": {
      "post": {
        "tags": [
          "CreditNote"
        ],
        "summary": "To change status by the document id and key",
        "operationId": "CreditNote_ChangeStatusByKey",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "statusKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/credit-notes/{id}/payments": {
      "post": {
        "tags": [
          "CreditNote"
        ],
        "summary": "To Accept payment with the paymentModel",
        "operationId": "CreditNote_ReceivePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "sourcePayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/debit-notes/cumulative-references": {
      "get": {
        "tags": [
          "DebitNote"
        ],
        "operationId": "DebitNote_GetCumulativeDocumentReferenceList",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/debit-notes": {
      "get": {
        "tags": [
          "DebitNote"
        ],
        "summary": "To query for documents.",
        "operationId": "DebitNote_Index",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/debit-notes/{id}": {
      "get": {
        "tags": [
          "DebitNote"
        ],
        "summary": "To get details of a document",
        "operationId": "DebitNote_Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Sql DocumentId",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "DebitNote"
        ],
        "summary": "To delete the document given a list of documentids",
        "operationId": "DebitNote_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/debit-notes/simple-document": {
      "post": {
        "tags": [
          "DebitNote"
        ],
        "summary": "To Create a document with SimpleDocument as the parameter",
        "operationId": "DebitNote_Create",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "simpleDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/debit-notes/inline-document": {
      "post": {
        "tags": [
          "DebitNote"
        ],
        "summary": "To Create a document with InlineDocument as the parameter",
        "operationId": "DebitNote_Create2",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "inlineDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/debit-notes/simple-document/{id}": {
      "put": {
        "tags": [
          "DebitNote"
        ],
        "summary": "To Update a document with simpleDocument as the parameter",
        "operationId": "DebitNote_Edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "simpleDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/debit-notes/inline-document/{id}": {
      "put": {
        "tags": [
          "DebitNote"
        ],
        "summary": "To Update a document with inlineDocument as the parameter",
        "operationId": "DebitNote_Edit2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "inlineDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/debit-notes/{documentId}/status-key/{statusKey}": {
      "post": {
        "tags": [
          "DebitNote"
        ],
        "summary": "To change status by the document id and key",
        "operationId": "DebitNote_ChangeStatusByKey",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "statusKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/debit-notes/{id}/payments": {
      "post": {
        "tags": [
          "DebitNote"
        ],
        "summary": "To Accept payment with the paymentModel",
        "operationId": "DebitNote_ReceivePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "sourcePayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/expenses/categories/business": {
      "get": {
        "tags": [
          "Expense"
        ],
        "operationId": "Expense_GetBusinessCategories",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/expenses/categories/accounting": {
      "get": {
        "tags": [
          "Expense"
        ],
        "operationId": "Expense_GetChartOfAccounts",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/expenses/categories/business-without-asset": {
      "get": {
        "tags": [
          "Expense"
        ],
        "operationId": "Expense_GetBusinessCategoriesWithoutAsset",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/expenses/categories/accounting-without-asset": {
      "get": {
        "tags": [
          "Expense"
        ],
        "operationId": "Expense_GetChartOfAccountsWithoutAsset",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/expenses": {
      "get": {
        "tags": [
          "Expense"
        ],
        "summary": "To query for documents.",
        "operationId": "Expense_Index",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/expenses/{id}": {
      "get": {
        "tags": [
          "Expense"
        ],
        "summary": "To get details of a document",
        "operationId": "Expense_Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Sql DocumentId",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Expense"
        ],
        "summary": "To delete the document given a list of documentids",
        "operationId": "Expense_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/expenses/simple-document": {
      "post": {
        "tags": [
          "Expense"
        ],
        "summary": "To Create a document with SimpleDocument as the parameter",
        "operationId": "Expense_Create",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "simpleDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/expenses/inline-document": {
      "post": {
        "tags": [
          "Expense"
        ],
        "summary": "To Create a document with InlineDocument as the parameter",
        "operationId": "Expense_Create2",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "inlineDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/expenses/simple-document/{id}": {
      "put": {
        "tags": [
          "Expense"
        ],
        "summary": "To Update a document with simpleDocument as the parameter",
        "operationId": "Expense_Edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "simpleDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/expenses/inline-document/{id}": {
      "put": {
        "tags": [
          "Expense"
        ],
        "summary": "To Update a document with inlineDocument as the parameter",
        "operationId": "Expense_Edit2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "inlineDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/expenses/{documentId}/status-key/{statusKey}": {
      "post": {
        "tags": [
          "Expense"
        ],
        "summary": "To change status by the document id and key",
        "operationId": "Expense_ChangeStatusByKey",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "statusKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/expenses/{id}/payments": {
      "post": {
        "tags": [
          "Expense"
        ],
        "summary": "To Accept payment with the paymentModel",
        "operationId": "Expense_ReceivePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "sourcePayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchases": {
      "get": {
        "tags": [
          "Purchase"
        ],
        "summary": "To query for documents.",
        "operationId": "Purchase_Index",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchases/{id}": {
      "get": {
        "tags": [
          "Purchase"
        ],
        "summary": "To get details of a document",
        "operationId": "Purchase_Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Sql DocumentId",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Purchase"
        ],
        "summary": "To delete the document given a list of documentids",
        "operationId": "Purchase_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchases/simple-document": {
      "post": {
        "tags": [
          "Purchase"
        ],
        "summary": "To Create a document with SimpleDocument as the parameter",
        "operationId": "Purchase_Create",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "simpleDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchases/inline-document": {
      "post": {
        "tags": [
          "Purchase"
        ],
        "summary": "To Create a document with InlineDocument as the parameter",
        "operationId": "Purchase_Create2",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "inlineDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchases/simple-document/{id}": {
      "put": {
        "tags": [
          "Purchase"
        ],
        "summary": "To Update a document with simpleDocument as the parameter",
        "operationId": "Purchase_Edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "simpleDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchases/inline-document/{id}": {
      "put": {
        "tags": [
          "Purchase"
        ],
        "summary": "To Update a document with inlineDocument as the parameter",
        "operationId": "Purchase_Edit2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "inlineDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchases/{documentId}/status-key/{statusKey}": {
      "post": {
        "tags": [
          "Purchase"
        ],
        "summary": "To change status by the document id and key",
        "operationId": "Purchase_ChangeStatusByKey",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "statusKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchases/{id}/payments": {
      "post": {
        "tags": [
          "Purchase"
        ],
        "summary": "To Accept payment with the paymentModel",
        "operationId": "Purchase_ReceivePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "sourcePayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchase-orders": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "To query for documents.",
        "operationId": "PurchaseOrder_Index",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchase-orders/{id}": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "To get details of a document",
        "operationId": "PurchaseOrder_Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Sql DocumentId",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "To delete the document given a list of documentids",
        "operationId": "PurchaseOrder_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchase-orders/simple-document": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "To Create a document with SimpleDocument as the parameter",
        "operationId": "PurchaseOrder_Create",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "simpleDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchase-orders/inline-document": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "To Create a document with InlineDocument as the parameter",
        "operationId": "PurchaseOrder_Create2",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "inlineDocuments",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSent"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchase-orders/simple-document/{id}": {
      "put": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "To Update a document with simpleDocument as the parameter",
        "operationId": "PurchaseOrder_Edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "simpleDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchase-orders/inline-document/{id}": {
      "put": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "To Update a document with inlineDocument as the parameter",
        "operationId": "PurchaseOrder_Edit2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "inlineDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InlineDocument"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchase-orders/{documentId}/status-key/{statusKey}": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "To change status by the document id and key",
        "operationId": "PurchaseOrder_ChangeStatusByKey",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "statusKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/purchase-orders/{id}/payments": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "To Accept payment with the paymentModel",
        "operationId": "PurchaseOrder_ReceivePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "sourcePayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Employee/{id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get employee by Id",
        "operationId": "Employee_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Delete/Remove Employee by Id",
        "operationId": "Employee_Remove",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Employee": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get employee list with payrollQuery model",
        "operationId": "Employee_GetList",
        "requestBody": {
          "x-name": "queryStringModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollQuery"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create Employee",
        "operationId": "Employee_Create",
        "requestBody": {
          "x-name": "employee",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Update Employee",
        "operationId": "Employee_Edit",
        "requestBody": {
          "x-name": "employee",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Employee/count": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Count employees",
        "operationId": "Employee_Count",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/company-currency": {
      "get": {
        "tags": [
          "CompanyCurrency"
        ],
        "summary": "Get all currency which user selected for multi-currency",
        "operationId": "CompanyCurrency_GetList",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/company-currency/currency": {
      "get": {
        "tags": [
          "CompanyCurrency"
        ],
        "summary": "Get company currencies except selected list",
        "operationId": "CompanyCurrency_GetCompanyCurrencies",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/products/categories": {
      "get": {
        "tags": [
          "ProductCategory"
        ],
        "operationId": "ProductCategory_GetProductCategory",
        "parameters": [
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategory"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "ProductCategory"
        ],
        "operationId": "ProductCategory_CreateProductCategory",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "category",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/products/categories/{id}": {
      "put": {
        "tags": [
          "ProductCategory"
        ],
        "operationId": "ProductCategory_UpdateProductCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "updatedCategory",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductCategory"
        ],
        "operationId": "ProductCategory_DeleteProductCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/product-inventories/{id}": {
      "get": {
        "tags": [
          "ProductInventory"
        ],
        "operationId": "ProductInventory_GetList",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            },
            "x-position": 12
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 13
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductInventory"
        ],
        "operationId": "ProductInventory_DeleteProductInventory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/product-inventories/adjust": {
      "post": {
        "tags": [
          "ProductInventory"
        ],
        "operationId": "ProductInventory_Adjust",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "stockCard",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/Products/search": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_Search",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseOfISimpleListResultOfIProductResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/Products": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_GetList",
        "parameters": [
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "CustomDocumentModels",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Range",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Month",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            },
            "x-position": 12
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 13
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseOfISimpleListResultOfIProductResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_Create",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseOfISimpleListResultOfIProductResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/Products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseOfISimpleListResultOfIProductResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductResult"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseOfISimpleListResultOfIProductResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "operationId": "Products_Remove",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponseOfBoolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/products/units": {
      "get": {
        "tags": [
          "ProductUnit"
        ],
        "operationId": "ProductUnit_GetProductUnitList",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "ProductUnit"
        ],
        "operationId": "ProductUnit_CreateProductUnit",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "productunit",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUnit"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/{culture}/products/units/{id}": {
      "put": {
        "tags": [
          "ProductUnit"
        ],
        "operationId": "ProductUnit_UpdateProductUnit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "productunit",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUnit"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductUnit"
        ],
        "operationId": "ProductUnit_DeleteProductUnit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "culture",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BatchImportMetadata": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyUserGuid": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "templateId": {
            "type": "string",
            "nullable": true
          },
          "batchId": {
            "type": "string",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentTypes"
          },
          "status": {
            "$ref": "#/components/schemas/BatchImportStatus"
          },
          "documentCount": {
            "type": "integer",
            "format": "int32"
          },
          "successCount": {
            "type": "integer",
            "format": "int32"
          },
          "failedCount": {
            "type": "integer",
            "format": "int32"
          },
          "s3Key": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "isViewed": {
            "type": "boolean"
          }
        }
      },
      "DocumentTypes": {
        "type": "integer",
        "description": "1 = PurchaseOrder\n3 = Quotation\n5 = BillingNote\n7 = TaxInvoice\n9 = Receipt\n13 = Expense\n15 = Vendor\n17 = WithHoldingTax\n19 = BillingNotePartials\n21 = TaxInvoicePartails\n23 = Purchase\n24 = PurchaseTax\n25 = ReceivableInvoice\n29 = AdjustInventory\n31 = CreditNote\n33 = DebitNote\n35 = CashInvoice\n37 = PaymentSlip\n51 = JournalEntry\n53 = PurchaseVoucher\n55 = SalesVoucher\n57 = PaymentVoucher\n59 = ReceivedVoucher\n61 = ConversionBalance\n63 = Transaction\n65 = SupplierInvoice\n67 = BatchTaxFiling\n69 = FixedAsset\n71 = Depreciation\n73 = BankTransfer\n151 = DraftJournalEntry\n153 = DraftPurchaseVoucher\n155 = DraftSalesVoucher\n157 = DraftPaymentVoucher\n159 = DraftReceivedVoucher\n201 = Payroll\n202 = PayrollDetail\n203 = Employee\n204 = PayrollPayment",
        "x-enumNames": [
          "PurchaseOrder",
          "Quotation",
          "BillingNote",
          "TaxInvoice",
          "Receipt",
          "Expense",
          "Vendor",
          "WithHoldingTax",
          "BillingNotePartials",
          "TaxInvoicePartails",
          "Purchase",
          "PurchaseTax",
          "ReceivableInvoice",
          "AdjustInventory",
          "CreditNote",
          "DebitNote",
          "CashInvoice",
          "PaymentSlip",
          "JournalEntry",
          "PurchaseVoucher",
          "SalesVoucher",
          "PaymentVoucher",
          "ReceivedVoucher",
          "ConversionBalance",
          "Transaction",
          "SupplierInvoice",
          "BatchTaxFiling",
          "FixedAsset",
          "Depreciation",
          "BankTransfer",
          "DraftJournalEntry",
          "DraftPurchaseVoucher",
          "DraftSalesVoucher",
          "DraftPaymentVoucher",
          "DraftReceivedVoucher",
          "Payroll",
          "PayrollDetail",
          "Employee",
          "PayrollPayment"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          13,
          15,
          17,
          19,
          21,
          23,
          24,
          25,
          29,
          31,
          33,
          35,
          37,
          51,
          53,
          55,
          57,
          59,
          61,
          63,
          65,
          67,
          69,
          71,
          73,
          151,
          153,
          155,
          157,
          159,
          201,
          202,
          203,
          204
        ]
      },
      "BatchImportStatus": {
        "type": "integer",
        "description": "0 = None\n1 = Awaiting\n3 = Pending\n5 = Failed\n6 = HandledDuplicated\n7 = Succeed",
        "x-enumNames": [
          "None",
          "Awaiting",
          "Pending",
          "Failed",
          "HandledDuplicated",
          "Succeed"
        ],
        "enum": [
          0,
          1,
          3,
          5,
          6,
          7
        ]
      },
      "BatchHistory": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "metadataList": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BatchImportMetadata"
            }
          }
        }
      },
      "BatchStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "messages": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BatchMessageStatus"
            }
          },
          "metadata": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BatchImportMetadata"
              }
            ]
          }
        }
      },
      "BatchMessageStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyUserGuid": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "batchId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/BatchImportStatus"
          },
          "messageId": {
            "type": "string",
            "nullable": true
          },
          "failedReason": {
            "type": "string",
            "nullable": true
          },
          "payload": {
            "type": "string",
            "nullable": true
          },
          "retryCount": {
            "type": "integer",
            "format": "int32"
          },
          "documentSerial": {
            "type": "string",
            "nullable": true
          },
          "sqlId": {
            "type": "integer",
            "format": "int64"
          },
          "rowIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BatchImportRetry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "batchId": {
            "type": "string",
            "nullable": true
          },
          "messageIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BatchImportPayload": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "simpleDocuments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SimpleDocument"
            }
          },
          "batchId": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "batchCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SimpleDocument": {
        "example": {
          "items": [
            {
              "type": 1,
              "name": "ค่าสินค้าและบริการ POS",
              "description": "",
              "quantity": 1.0,
              "unitName": "",
              "pricePerUnit": 210.28,
              "total": 210.28,
              "sellChartOfAccountCode": null,
              "buyChartOfAccountCode": null,
              "productCode": null
            }
          ],
          "documentReference": null,
          "exemptAmount": 0.0,
          "recordId": 0,
          "contactCode": null,
          "contactName": "test_payload_mock_new1112",
          "contactAddress": "",
          "contactTaxId": "",
          "contactBranch": "สำนักงานใหญ่",
          "contactPerson": "",
          "contactEmail": "",
          "contactNumber": "",
          "contactZipCode": "",
          "contactGroup": 1,
          "publishedOn": "2022-10-10T09:37:39.2943643+07:00",
          "creditType": 3,
          "creditDays": 0,
          "dueDate": "2022-10-10T09:37:39.294366+07:00",
          "salesName": "Wongnai POS",
          "projectName": "",
          "reference": null,
          "isVatInclusive": false,
          "useReceiptDeduction": true,
          "subTotal": 210.28,
          "discountPercentage": 0,
          "discountAmount": 0.0,
          "totalAfterDiscount": 210.28,
          "isVat": true,
          "vatAmount": 14.72,
          "grandTotal": 225.0,
          "documentShowWithholdingTax": false,
          "documentWithholdingTaxPercentage": 0,
          "documentWithholdingTaxAmount": 0.0,
          "documentDeductionType": 1,
          "documentDeductionAmount": 2.0,
          "remarks": "POS ID 1\\nรหัสถาดเก็บเงิน 5G5",
          "internalNotes": "INV. No D/00002407\\nหมายเลขใบเสร็จ / ID NUT9G",
          "showSignatureOrStamp": true,
          "documentStructureType": null,
          "externalId": null,
          "saleAndPurchaseChannel": "",
          "rowIndex": null
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Document"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/SimpleProductItem"
                }
              },
              "documentReference": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/UpgradeDocument"
                }
              },
              "exemptAmount": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              }
            }
          }
        ]
      },
      "SimpleProductItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductItem"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ProductItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal"
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "pricePerUnit": {
            "type": "number",
            "format": "decimal"
          },
          "total": {
            "type": "number",
            "format": "decimal"
          },
          "sellChartOfAccountCode": {
            "type": "string",
            "nullable": true
          },
          "buyChartOfAccountCode": {
            "type": "string",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpgradeDocument": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "recordId": {
            "type": "integer",
            "format": "int64"
          },
          "referenceDocumentSerial": {
            "type": "string",
            "nullable": true
          },
          "referenceDocumentType": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Document": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "recordId": {
            "type": "integer",
            "format": "int64"
          },
          "contactCode": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactAddress": {
            "type": "string",
            "nullable": true
          },
          "contactTaxId": {
            "type": "string",
            "nullable": true
          },
          "contactBranch": {
            "type": "string",
            "nullable": true
          },
          "contactPerson": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "type": "string",
            "nullable": true
          },
          "contactZipCode": {
            "type": "string",
            "nullable": true
          },
          "contactGroup": {
            "type": "integer",
            "format": "int32"
          },
          "publishedOn": {
            "type": "string",
            "format": "date-time"
          },
          "creditType": {
            "type": "integer",
            "format": "int32"
          },
          "creditDays": {
            "type": "integer",
            "format": "int32"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "salesName": {
            "type": "string",
            "nullable": true
          },
          "projectName": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "isVatInclusive": {
            "type": "boolean"
          },
          "useReceiptDeduction": {
            "type": "boolean"
          },
          "subTotal": {
            "type": "number",
            "format": "decimal"
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "discountAmount": {
            "type": "number",
            "format": "decimal"
          },
          "totalAfterDiscount": {
            "type": "number",
            "format": "decimal"
          },
          "isVat": {
            "type": "boolean"
          },
          "vatAmount": {
            "type": "number",
            "format": "decimal"
          },
          "grandTotal": {
            "type": "number",
            "format": "decimal"
          },
          "documentShowWithholdingTax": {
            "type": "boolean"
          },
          "documentWithholdingTaxPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "documentWithholdingTaxAmount": {
            "type": "number",
            "format": "decimal"
          },
          "documentDeductionType": {
            "type": "integer",
            "format": "int32"
          },
          "documentDeductionAmount": {
            "type": "number",
            "format": "decimal"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "internalNotes": {
            "type": "string",
            "nullable": true
          },
          "showSignatureOrStamp": {
            "type": "boolean"
          },
          "documentStructureType": {
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "saleAndPurchaseChannel": {
            "type": "string",
            "nullable": true
          },
          "rowIndex": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomTemplate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "sheetIndex": {
            "type": "integer",
            "format": "int32"
          },
          "columns": {
            "nullable": true
          },
          "dateFormat": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateInfo"
              }
            ]
          },
          "ignoreLastRow": {
            "type": "boolean"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "customTemplateInfo": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomTemplateInfo"
              }
            ]
          },
          "formulas": {
            "nullable": true
          }
        }
      },
      "DateInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "format": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomTemplateInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "headerIndex": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "includeTax": {
            "type": "string",
            "nullable": true
          },
          "isChooseDateColumn": {
            "type": "boolean"
          },
          "isChooseUnitPriceColumn": {
            "type": "boolean"
          },
          "columns": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomTemplateColumn"
            }
          }
        }
      },
      "CustomTemplateColumn": {
        "type": "object",
        "additionalProperties": false
      },
      "ContactResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "contactType": {
            "$ref": "#/components/schemas/ContactTypes"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "addressLocal": {
            "type": "string",
            "nullable": true
          },
          "addressLocalLine2": {
            "type": "string",
            "nullable": true
          },
          "addressLocalLine3": {
            "type": "string",
            "nullable": true
          },
          "taxId": {
            "type": "string",
            "nullable": true
          },
          "branch": {
            "type": "string",
            "nullable": true
          },
          "branchCode": {
            "type": "string",
            "nullable": true
          },
          "contactPerson": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "defaultCreditDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "office": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "shippingAddress": {
            "type": "string",
            "nullable": true
          },
          "internalNotes": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "bankId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "bankBranch": {
            "type": "string",
            "nullable": true
          },
          "bankAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "swiftCode": {
            "type": "string",
            "nullable": true
          },
          "bankAddress": {
            "type": "string",
            "nullable": true
          },
          "useForeignBank": {
            "type": "boolean"
          },
          "bankAccountType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BankAccountType"
              }
            ]
          },
          "contactGroup": {
            "$ref": "#/components/schemas/ContactGroups"
          },
          "media": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Media"
            }
          },
          "qrCode": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Media"
              }
            ]
          }
        }
      },
      "ContactTypes": {
        "type": "integer",
        "description": "0 = OwnCompany\n3 = Client\n5 = Vendor\n7 = VendorAndClient\n9 = ExpenseVendor",
        "x-enumNames": [
          "OwnCompany",
          "Client",
          "Vendor",
          "VendorAndClient",
          "ExpenseVendor"
        ],
        "enum": [
          0,
          3,
          5,
          7,
          9
        ]
      },
      "BankAccountType": {
        "type": "integer",
        "description": "1 = SavingAccount\n3 = CurrentAccount\n5 = CreditCardAccount\n7 = DepositAccount",
        "x-enumNames": [
          "SavingAccount",
          "CurrentAccount",
          "CreditCardAccount",
          "DepositAccount"
        ],
        "enum": [
          1,
          3,
          5,
          7
        ]
      },
      "ContactGroups": {
        "type": "integer",
        "description": "1 = Individual\n3 = Juristic\n9 = Undefined",
        "x-enumNames": [
          "Individual",
          "Juristic",
          "Undefined"
        ],
        "enum": [
          1,
          3,
          9
        ]
      },
      "Media": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "url"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDisplay": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "galleryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "mediaType": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ]
          },
          "gallery": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gallery"
              }
            ]
          },
          "user": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        }
      },
      "Company": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "nameLocal",
          "createdOn",
          "modifiedOn",
          "contactType",
          "logoType",
          "isAdvance"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "nameLocal": {
            "type": "string",
            "minLength": 1
          },
          "nameForeign": {
            "type": "string",
            "nullable": true
          },
          "addressLocal": {
            "type": "string",
            "nullable": true
          },
          "addressForeign": {
            "type": "string",
            "nullable": true
          },
          "companyTaxId": {
            "type": "string",
            "nullable": true
          },
          "logoImage": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "phone1": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "phone2": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "phone3": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "websites": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0,
            "nullable": true
          },
          "companyType": {
            "$ref": "#/components/schemas/CompanyTypeEnum"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "default": "CURRENT_TIMESTAMP",
            "minLength": 1
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "default": "CURRENT_TIMESTAMP",
            "minLength": 1
          },
          "isDefault": {
            "type": "boolean"
          },
          "addressLocalLine2": {
            "type": "string",
            "nullable": true
          },
          "addressForeignLine2": {
            "type": "string",
            "nullable": true
          },
          "vatRate": {
            "type": "integer",
            "format": "int32"
          },
          "isVat": {
            "type": "boolean",
            "default": false
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "branch": {
            "type": "string",
            "nullable": true
          },
          "addressLocalLine3": {
            "type": "string",
            "nullable": true
          },
          "addressForeignLine3": {
            "type": "string",
            "nullable": true
          },
          "contactPerson": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "galleryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchForeign": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0,
            "nullable": true
          },
          "branchCode": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "contactType": {
            "type": "integer",
            "format": "int32"
          },
          "defaultCreditDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "logoType": {
            "type": "integer",
            "format": "int32"
          },
          "isRegistered": {
            "type": "boolean",
            "default": true
          },
          "isAdvance": {
            "type": "boolean"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "provinceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "amphurId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "districtId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "supportCode": {
            "type": "string",
            "nullable": true
          },
          "salesType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SalesType"
              }
            ]
          },
          "companyPreferences": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CompanyPreferences"
              }
            ]
          },
          "payrollPreferences": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PayrollPreferences"
              }
            ]
          },
          "companySubscription": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CompanySubscription"
            }
          }
        }
      },
      "CompanyTypeEnum": {
        "type": "integer",
        "description": "10 = PrivateWithTax\n20 = PrivateWithoutTax\n30 = Personal\n40 = PersonalWithTax\n50 = PartnershipLimitedWithTax\n60 = PartnershipLimitedWithoutTax",
        "x-enumNames": [
          "PrivateWithTax",
          "PrivateWithoutTax",
          "Personal",
          "PersonalWithTax",
          "PartnershipLimitedWithTax",
          "PartnershipLimitedWithoutTax"
        ],
        "enum": [
          10,
          20,
          30,
          40,
          50,
          60
        ]
      },
      "SalesType": {
        "type": "integer",
        "description": "1 = Cash\n3 = Credit\n5 = Both",
        "x-enumNames": [
          "Cash",
          "Credit",
          "Both"
        ],
        "enum": [
          1,
          3,
          5
        ]
      },
      "CompanyPreferences": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "invoicePrefix",
          "quotationPrefix",
          "billingNotePrefix",
          "receiptPrefix",
          "purchaseOrderPrefix",
          "cashInvoicePrefix",
          "receivableInvoicePrefix",
          "purchaseOrderTitleEN",
          "quotationTitleEN",
          "billingNoteTitleEN",
          "invoiceTitleEN",
          "receiptTitleEN",
          "paymentSlipTitleEN",
          "purchaseOrderTitleTH",
          "quotationTitleTH",
          "billingNoteTitleTH",
          "invoiceTitleTH",
          "receiptTitleTH",
          "paymentSlipTitleTH",
          "cashInvoiceTitleEN",
          "cashInvoiceTitleTH",
          "receivableInvoiceTitleTH",
          "receivableInvoiceTitleEN",
          "withHoldingTaxPrefix",
          "purchasePrefix",
          "purchaseTitleEN",
          "purchaseTitleTH",
          "adjustInventoryPrefix",
          "expensePrefix",
          "paymentSlipPrefix",
          "creditNotePrefix",
          "creditNoteTitleEN",
          "creditNoteTitleTH",
          "debitNotePrefix",
          "debitNoteTitleEN",
          "debitNoteTitleTH",
          "journalVoucherPrefix",
          "purchaseVoucherPrefix",
          "salesVoucherPrefix",
          "paymentVoucherPrefix",
          "receivedVoucherPrefix",
          "conversionBalancePrefix"
        ],
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "showWithHolding": {
            "type": "boolean",
            "default": false
          },
          "invoicePrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "quotationPrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "billingNotePrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "receiptPrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "purchaseOrderPrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "cashInvoicePrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "receivableInvoicePrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "cashInvoiceStartingNumber": {
            "type": "integer",
            "format": "int64"
          },
          "receiptStartingNumber": {
            "type": "integer",
            "format": "int64"
          },
          "quotationStartingNumber": {
            "type": "integer",
            "format": "int64"
          },
          "billingNoteStartingNumber": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseOrderStartingNumber": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseOrderTitleEN": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "quotationTitleEN": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "billingNoteTitleEN": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "invoiceTitleEN": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "receiptTitleEN": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "paymentSlipTitleEN": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "purchaseOrderTitleTH": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "quotationTitleTH": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "billingNoteTitleTH": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "invoiceTitleTH": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "receiptTitleTH": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "paymentSlipTitleTH": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "businessType": {
            "$ref": "#/components/schemas/BusinessType"
          },
          "termsAgreement": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0,
            "nullable": true
          },
          "defaultRemarks": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0,
            "nullable": true
          },
          "invoiceStartingNumber": {
            "type": "integer",
            "format": "int64"
          },
          "cashInvoiceTitleEN": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "cashInvoiceTitleTH": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "receivableInvoiceTitleTH": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "receivableInvoiceTitleEN": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "runningNumberType": {
            "$ref": "#/components/schemas/RunningNumberType"
          },
          "purchaseOrderStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quotationStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billingNoteStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cashInvoiceStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "receiptStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchaseOrderStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quotationStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billingNoteStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cashInvoiceStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "receiptStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "settingsInitiated": {
            "type": "boolean",
            "default": false
          },
          "runningNumberSettingsModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "withHoldingTaxPrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "withHoldingTaxStartingNumber": {
            "type": "integer",
            "format": "int32"
          },
          "withHoldingTaxStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "withHoldingTaxStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "documentTemplates": {
            "$ref": "#/components/schemas/DocumentTemplates"
          },
          "printColor": {
            "type": "boolean",
            "default": true
          },
          "templateFont": {
            "$ref": "#/components/schemas/TemplateFont"
          },
          "printOneInvoice": {
            "type": "boolean",
            "default": false
          },
          "remarks": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0,
            "nullable": true
          },
          "emailMessageTemplate": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0,
            "nullable": true
          },
          "purchasePrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "purchaseStartingNumber": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseTitleEN": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "purchaseTitleTH": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "purchaseStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchaseStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "adjustInventoryPrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "adjustInventoryStartingNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustInventoryStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "adjustInventoryStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expensePrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "expenseStartingNumber": {
            "type": "integer",
            "format": "int32"
          },
          "expenseStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expenseStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentSlipPrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "paymentSlipStartingNumber": {
            "type": "integer",
            "format": "int32"
          },
          "paymentSlipStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentSlipStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cashInvoiceRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "purchaseOrderRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "quotationRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "billingNoteRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "purchaseRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "receivableInvoiceRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentSlipRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rubberStampUrl": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0,
            "nullable": true
          },
          "creditNotePrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "creditNoteStartingNumber": {
            "type": "integer",
            "format": "int32"
          },
          "creditNoteStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creditNoteStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creditNoteRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creditNoteTitleEN": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "creditNoteTitleTH": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "debitNotePrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "debitNoteStartingNumber": {
            "type": "integer",
            "format": "int32"
          },
          "debitNoteStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "debitNoteStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "debitNoteRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "debitNoteTitleEN": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "debitNoteTitleTH": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0
          },
          "receiptRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "receivableInvoiceStartingNumber": {
            "type": "integer",
            "format": "int32"
          },
          "receivableInvoiceStartingMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "receivableInvoiceStartingYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usePartialReceipt": {
            "type": "boolean",
            "default": false
          },
          "useCashInvoice": {
            "type": "boolean",
            "default": false
          },
          "useShortCashInvoice": {
            "type": "boolean",
            "default": false
          },
          "generalLedgerRunningNumberType": {
            "$ref": "#/components/schemas/RunningNumberType"
          },
          "journalVoucherPrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "purchaseVoucherPrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "purchaseVoucherRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "salesVoucherPrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "salesVoucherRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentVoucherPrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "paymentVoucherRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "receivedVoucherPrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "receivedVoucherRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "conversionBalancePrefix": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0
          },
          "conversionBalanceRunningNumberModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eTaxEmail": {
            "type": "string",
            "nullable": true
          },
          "shortCashInvoiceTemplates": {
            "$ref": "#/components/schemas/DocumentTemplates"
          },
          "useBillingNoteAccountingRule": {
            "type": "boolean"
          },
          "billingNoteAccountingRuleModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "templateFontSize": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "useMultiCurrency": {
            "type": "boolean",
            "default": false
          },
          "expenseTitleTH": {
            "type": "string",
            "nullable": true
          },
          "expenseTitleEN": {
            "type": "string",
            "nullable": true
          },
          "withHoldingTaxTitleTH": {
            "type": "string",
            "nullable": true
          },
          "withHoldingTaxTitleEN": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BusinessType": {
        "type": "integer",
        "description": "1 = SellingProducts\n3 = SellingServices\n5 = SellingBoth\n7 = Custom",
        "x-enumNames": [
          "SellingProducts",
          "SellingServices",
          "SellingBoth",
          "Custom"
        ],
        "enum": [
          1,
          3,
          5,
          7
        ]
      },
      "RunningNumberType": {
        "type": "integer",
        "description": "1 = Default\n3 = YearMonth\n5 = Month\n7 = Year\n9 = FreeHand",
        "x-enumNames": [
          "Default",
          "YearMonth",
          "Month",
          "Year",
          "FreeHand"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9
        ]
      },
      "DocumentTemplates": {
        "type": "integer",
        "description": "1 = Default\n3 = Template1\n5 = Template2\n7 = Template3\n9 = Template4\n11 = Template5\n13 = TemplateA5\n15 = Template9x11withOriginal\n17 = Template8\n101 = NativeDefault\n103 = Native1\n105 = Native3\n107 = Native5\n109 = Native7\n111 = Native9\n113 = Native11\n115 = Native13\n201 = Thermal1\n203 = Thermal2\n205 = SocialSlip\n301 = ShortCA1\n303 = ShortCA2\n305 = ShortCA3",
        "x-enumNames": [
          "Default",
          "Template1",
          "Template2",
          "Template3",
          "Template4",
          "Template5",
          "TemplateA5",
          "Template9x11withOriginal",
          "Template8",
          "NativeDefault",
          "Native1",
          "Native3",
          "Native5",
          "Native7",
          "Native9",
          "Native11",
          "Native13",
          "Thermal1",
          "Thermal2",
          "SocialSlip",
          "ShortCA1",
          "ShortCA2",
          "ShortCA3"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          11,
          13,
          15,
          17,
          101,
          103,
          105,
          107,
          109,
          111,
          113,
          115,
          201,
          203,
          205,
          301,
          303,
          305
        ]
      },
      "TemplateFont": {
        "type": "integer",
        "description": "1 = ChatThai\n3 = Rsu",
        "x-enumNames": [
          "ChatThai",
          "Rsu"
        ],
        "enum": [
          1,
          3
        ]
      },
      "PayrollPreferences": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "isSocialSecurityRegistered": {
            "type": "boolean"
          },
          "employerAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "employerAccountBranch": {
            "type": "string",
            "nullable": true
          },
          "kCorporateClientCode": {
            "type": "string",
            "nullable": true
          },
          "kCorporateAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "payrollBankAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "kConnect_ProductCode": {
            "$ref": "#/components/schemas/KConnectProductCode"
          },
          "overtimePND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "commissionPND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bonusPND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowancePND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "colaPND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "medicalExpensePND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accommodationPND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "directorRemunerationPND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "otherAdditionPND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accessKConnect": {
            "type": "boolean"
          }
        }
      },
      "KConnectProductCode": {
        "type": "integer",
        "description": "1 = PCT\n3 = PPA\n5 = PPB",
        "x-enumNames": [
          "PCT",
          "PPA",
          "PPB"
        ],
        "enum": [
          1,
          3,
          5
        ]
      },
      "CompanySubscription": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "packageId": {
            "type": "integer",
            "format": "int32"
          },
          "packageStatus": {
            "$ref": "#/components/schemas/PackageStatus"
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time"
          },
          "couponId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paidBy": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "days": {
            "type": "integer",
            "format": "int32"
          },
          "packageDays": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/UpgradeType"
          },
          "paymentChannel": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentChannel"
              }
            ]
          },
          "value": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "isWithheld": {
            "type": "boolean"
          },
          "withheld": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "internalFile": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "isRequestInvoice": {
            "type": "boolean",
            "nullable": true
          },
          "addOn": {
            "type": "string",
            "nullable": true
          },
          "packageList": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PackageList"
              }
            ]
          },
          "paySlipImageDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paySlipImageTime": {
            "type": "string",
            "format": "time-span",
            "nullable": true
          },
          "paySlipImageAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "paySlipImageContact": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PackageStatus": {
        "type": "integer",
        "description": "10 = Pending\n30 = Approve\n50 = Suspend\n70 = Terminated\n90 = Delete",
        "x-enumNames": [
          "Pending",
          "Approve",
          "Suspend",
          "Terminated",
          "Delete"
        ],
        "enum": [
          10,
          30,
          50,
          70,
          90
        ]
      },
      "UpgradeType": {
        "type": "integer",
        "description": "1 = Upgrade\n3 = Renew\n5 = ChangePackage",
        "x-enumNames": [
          "Upgrade",
          "Renew",
          "ChangePackage"
        ],
        "enum": [
          1,
          3,
          5
        ]
      },
      "PaymentChannel": {
        "type": "integer",
        "description": "1 = Omise\n3 = InAppIOS\n5 = InAppAndriod\n7 = UssdAis\n9 = BankTranfer\n11 = PrePaidSerial",
        "x-enumNames": [
          "Omise",
          "InAppIOS",
          "InAppAndriod",
          "UssdAis",
          "BankTranfer",
          "PrePaidSerial"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          11
        ]
      },
      "PackageList": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "packageName",
          "configuration"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "packageName": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "configuration": {
            "type": "string",
            "minLength": 1
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "displayNameTH": {
            "type": "string",
            "nullable": true
          },
          "displayNameEN": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Gallery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          },
          "productList": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductList"
            }
          },
          "media": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Media"
            }
          },
          "journalEntry": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/JournalEntry"
            }
          },
          "receivableInvoice": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ReceivableInvoice"
            }
          },
          "supplierInvoice": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SupplierInvoice"
            }
          }
        }
      },
      "ProductList": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "barCode": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0
          },
          "unitMeasurement": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "unitPriceWithVat": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "unitWeight": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "galleryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isVat": {
            "type": "boolean"
          },
          "mainUnitId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "subUnitId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "mainUnitAmount": {
            "type": "integer",
            "format": "int32"
          },
          "subUnitAmount": {
            "type": "integer",
            "format": "int32"
          },
          "hasStock": {
            "type": "boolean"
          },
          "productCode": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ProductTypes"
          },
          "buyPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "buyPriceWithVat": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "isBuyVat": {
            "type": "boolean"
          },
          "allowOverSold": {
            "type": "boolean"
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "isDelete": {
            "type": "boolean"
          },
          "vatRate": {
            "type": "integer",
            "format": "int32"
          },
          "buyVatRate": {
            "type": "integer",
            "format": "int32"
          },
          "resetTransactionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "broughtForwardOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "buyDescription": {
            "type": "string",
            "nullable": true
          },
          "buyChartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sellChartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productNonInventoryType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProductNonInventoryType"
              }
            ]
          },
          "transactionId": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "productMainUnit": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProductUnit"
              }
            ]
          },
          "productSubUnit": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProductUnit"
              }
            ]
          },
          "productCategory": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProductCategory"
              }
            ]
          },
          "isMigrate": {
            "type": "boolean"
          }
        }
      },
      "ProductTypes": {
        "type": "integer",
        "description": "1 = Service\n3 = ProductWithNoStock\n5 = ProductWithStock",
        "x-enumNames": [
          "Service",
          "ProductWithNoStock",
          "ProductWithStock"
        ],
        "enum": [
          1,
          3,
          5
        ]
      },
      "ProductNonInventoryType": {
        "type": "integer",
        "description": "1 = NonStockProduct\n3 = SparepartProduct\n5 = SampleProduct\n7 = FreemiumProduct\n9 = SupplyProduct\n11 = OthersProduct",
        "x-enumNames": [
          "NonStockProduct",
          "SparepartProduct",
          "SampleProduct",
          "FreemiumProduct",
          "SupplyProduct",
          "OthersProduct"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          11
        ]
      },
      "ProductUnit": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0
          },
          "isShare": {
            "type": "boolean"
          },
          "isDelete": {
            "type": "boolean"
          }
        }
      },
      "ProductCategory": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isDelete": {
            "type": "boolean"
          },
          "isShare": {
            "type": "boolean"
          },
          "resetTransactionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "JournalEntry": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "documentType",
          "status",
          "documentDate",
          "isSystemDocument"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "documentSerial": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentTypes"
          },
          "status": {
            "$ref": "#/components/schemas/JournalEntryStatus"
          },
          "documentDate": {
            "type": "string",
            "format": "date-time",
            "default": "CURRENT_TIMESTAMP",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 0,
            "nullable": true
          },
          "descriptionForeign": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 0,
            "nullable": true
          },
          "voidDescription": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 0,
            "nullable": true
          },
          "voidedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approvedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "transactionNo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "templateType": {
            "$ref": "#/components/schemas/JournalEntryTemplateType"
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "documentSerialNoPrefix": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "approvedBy": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "voidedBy": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "galleryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contactId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "runningNumberType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RunningNumberType"
              }
            ]
          },
          "fiscalYearId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "gallery": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gallery"
              }
            ]
          },
          "company": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ]
          },
          "approvedByUser": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "modifiedByUser": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "voidedByUser": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "remarks": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 0,
            "nullable": true
          },
          "contact": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Contact"
              }
            ]
          },
          "fiscalYear": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FiscalYear"
              }
            ]
          },
          "reference": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "referenceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "referenceDocumentType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DocumentTypes"
              }
            ]
          },
          "isSystemDocument": {
            "type": "boolean",
            "default": false
          },
          "ruleCompileStatus": {
            "$ref": "#/components/schemas/RuleCompileStatus"
          },
          "bookOfAccounts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IBookOfAccount"
            }
          },
          "isChangedDocumentDate": {
            "type": "boolean"
          },
          "isResetDocument": {
            "type": "boolean"
          }
        }
      },
      "JournalEntryStatus": {
        "type": "integer",
        "description": "0 = Delete\n1 = Awaiting\n5 = Approved\n9 = Void",
        "x-enumNames": [
          "Delete",
          "Awaiting",
          "Approved",
          "Void"
        ],
        "enum": [
          0,
          1,
          5,
          9
        ]
      },
      "JournalEntryTemplateType": {
        "type": "integer",
        "description": "1 = Default\n3 = DocumentCreated\n5 = Payment\n7 = ChequeDate\n9 = TaxNoRefund\n11 = VATManagementHistory",
        "x-enumNames": [
          "Default",
          "DocumentCreated",
          "Payment",
          "ChequeDate",
          "TaxNoRefund",
          "VATManagementHistory"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          11
        ]
      },
      "User": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstname": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          },
          "createdon": {
            "type": "string",
            "format": "date-time",
            "default": "CURRENT_TIMESTAMP"
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 0,
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          },
          "referralCode": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "Contact": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "nameLocal": {
            "type": "string",
            "nullable": true
          },
          "nameForeign": {
            "type": "string",
            "nullable": true
          },
          "addressLocal": {
            "type": "string",
            "nullable": true
          },
          "addressForeign": {
            "type": "string",
            "nullable": true
          },
          "addressLocalLine2": {
            "type": "string",
            "nullable": true
          },
          "addressForeignLine2": {
            "type": "string",
            "nullable": true
          },
          "addressLocalLine3": {
            "type": "string",
            "nullable": true
          },
          "addressForeignLine3": {
            "type": "string",
            "nullable": true
          },
          "branch": {
            "type": "string",
            "nullable": true
          },
          "branchForeign": {
            "type": "string",
            "nullable": true
          },
          "companyTaxId": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "phone1": {
            "type": "string",
            "nullable": true
          },
          "phone2": {
            "type": "string",
            "nullable": true
          },
          "phone3": {
            "type": "string",
            "nullable": true
          },
          "websites": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "isDelete": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "logoImage": {
            "type": "string",
            "nullable": true
          },
          "defaultCreditDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "vatRate": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "contactPerson": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "contactType": {
            "$ref": "#/components/schemas/ContactTypes"
          },
          "contactGroup": {
            "$ref": "#/components/schemas/ContactGroups"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "galleryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchCode": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "transactionId": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "resetTransactionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contactCode": {
            "type": "string",
            "nullable": true
          },
          "internalNotes": {
            "type": "string",
            "nullable": true
          },
          "shippingAddress": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "swiftCode": {
            "type": "string",
            "nullable": true
          },
          "bankAddress": {
            "type": "string",
            "nullable": true
          },
          "useForeignBank": {
            "type": "boolean",
            "nullable": true
          },
          "isMigrate": {
            "type": "boolean"
          }
        }
      },
      "FiscalYear": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "beginPeriod": {
            "type": "string",
            "format": "date-time"
          },
          "endPeriod": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/FiscalYearStatus"
          },
          "closedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closedBy": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "company": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ]
          }
        }
      },
      "FiscalYearStatus": {
        "type": "integer",
        "description": "1 = Current\n3 = Opening\n5 = Closed",
        "x-enumNames": [
          "Current",
          "Opening",
          "Closed"
        ],
        "enum": [
          1,
          3,
          5
        ]
      },
      "RuleCompileStatus": {
        "type": "integer",
        "description": "1 = Pending\n3 = Execute\n5 = Success\n7 = Error\n9 = WHTWarning\n11 = NoMoreCompile\n13 = Ignore",
        "x-enumNames": [
          "Pending",
          "Execute",
          "Success",
          "Error",
          "WHTWarning",
          "NoMoreCompile",
          "Ignore"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          11,
          13
        ]
      },
      "IBookOfAccount": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "journalEntryId": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "debitCredit": {
            "$ref": "#/components/schemas/FinancialTransactionType"
          },
          "bookOfAccountStatus": {
            "$ref": "#/components/schemas/BookOfAccountStatus"
          },
          "chartOfAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "postedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "approvedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "decimal"
          },
          "balance": {
            "type": "number",
            "format": "decimal"
          },
          "excludeVoidBalance": {
            "type": "number",
            "format": "decimal"
          },
          "rowNumber": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionForeign": {
            "type": "string",
            "nullable": true
          },
          "chartOfAccountName": {
            "type": "string",
            "nullable": true
          },
          "journalEntry": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IJournalEntryBase"
              }
            ]
          },
          "chartOfAccount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IChartOfAccount"
              }
            ]
          }
        }
      },
      "FinancialTransactionType": {
        "type": "integer",
        "description": "1 = Debit\n3 = Credit",
        "x-enumNames": [
          "Debit",
          "Credit"
        ],
        "enum": [
          1,
          3
        ]
      },
      "BookOfAccountStatus": {
        "type": "integer",
        "description": "0 = Delete\n1 = Awaiting\n5 = Approved\n9 = Void\n-9 = ResetVoid\n-5 = ResetApproved\n-1 = ResetAwaiting",
        "x-enumNames": [
          "Delete",
          "Awaiting",
          "Approved",
          "Void",
          "ResetVoid",
          "ResetApproved",
          "ResetAwaiting"
        ],
        "enum": [
          0,
          1,
          5,
          9,
          -9,
          -5,
          -1
        ]
      },
      "IJournalEntryBase": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "documentSerial": {
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentTypes"
          },
          "status": {
            "$ref": "#/components/schemas/JournalEntryStatus"
          },
          "documentDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionForeign": {
            "type": "string",
            "nullable": true
          },
          "voidDescription": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "voidedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approvedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "transactionNo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "templateType": {
            "$ref": "#/components/schemas/JournalEntryTemplateType"
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "documentSerialNoPrefix": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "approvedBy": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "voidedBy": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "galleryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contactId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "runningNumberType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RunningNumberType"
              }
            ]
          },
          "fiscalYearId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "referenceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "referenceDocumentType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DocumentTypes"
              }
            ]
          },
          "isSystemDocument": {
            "type": "boolean"
          },
          "ruleCompileStatus": {
            "$ref": "#/components/schemas/RuleCompileStatus"
          }
        }
      },
      "IChartOfAccount": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "$ref": "#/components/schemas/ChartOfAccountCategory"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameLocal": {
            "type": "string",
            "nullable": true
          },
          "nameForeign": {
            "type": "string",
            "nullable": true
          },
          "descriptionLocal": {
            "type": "string",
            "nullable": true
          },
          "descriptionForeign": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isFolder": {
            "type": "boolean"
          },
          "isBank": {
            "type": "boolean"
          },
          "isReceivable": {
            "type": "boolean"
          },
          "isDelete": {
            "type": "boolean"
          },
          "isLock": {
            "type": "boolean"
          },
          "createdon": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedon": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedby": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "number",
            "format": "decimal"
          },
          "left": {
            "type": "integer",
            "format": "int32"
          },
          "right": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean"
          }
        }
      },
      "ChartOfAccountCategory": {
        "type": "integer",
        "description": "1 = Assets\n2 = Liabilities\n3 = Equity\n4 = Revenue\n5 = Expenses",
        "x-enumNames": [
          "Assets",
          "Liabilities",
          "Equity",
          "Revenue",
          "Expenses"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "ReceivableInvoice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Document2"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "companyId",
              "createdOn",
              "modifiedOn",
              "publishedOn",
              "documentDate"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "contactId": {
                "type": "integer",
                "format": "int64"
              },
              "companyId": {
                "type": "integer",
                "format": "int64"
              },
              "status": {
                "$ref": "#/components/schemas/ReceivableInvoiceStatus"
              },
              "createdOn": {
                "type": "string",
                "format": "date-time",
                "default": "CURRENT_TIMESTAMP",
                "minLength": 1
              },
              "modifiedOn": {
                "type": "string",
                "format": "date-time",
                "default": "CURRENT_TIMESTAMP",
                "minLength": 1
              },
              "publishedOn": {
                "type": "string",
                "format": "date-time",
                "default": "CURRENT_TIMESTAMP",
                "minLength": 1
              },
              "documentDate": {
                "type": "string",
                "format": "date-time",
                "default": "CURRENT_TIMESTAMP",
                "minLength": 1
              },
              "published": {
                "type": "boolean"
              },
              "approved": {
                "type": "boolean"
              },
              "approvedBy": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "approvedByClientId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "approvedImageUrl": {
                "type": "string",
                "nullable": true
              },
              "documentSerial": {
                "type": "string",
                "nullable": true
              },
              "remarks": {
                "type": "string",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "value": {
                "type": "number",
                "format": "decimal"
              },
              "dueDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "expectedDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "createdBy": {
                "type": "integer",
                "format": "int64"
              },
              "documentId": {
                "type": "string",
                "nullable": true
              },
              "isDelete": {
                "type": "boolean"
              },
              "vatRate": {
                "type": "integer",
                "format": "int32"
              },
              "internalNotes": {
                "type": "string",
                "nullable": true
              },
              "galleryId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "isVatInclusive": {
                "type": "boolean"
              },
              "salesId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "salesName": {
                "type": "string",
                "nullable": true
              },
              "roundingAdjustment": {
                "type": "number",
                "format": "decimal"
              },
              "isInlineDiscount": {
                "type": "boolean",
                "default": false
              },
              "isInlineVat": {
                "type": "boolean",
                "default": false
              },
              "tax": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "documentSerialNoPrefix": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "vatValue": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "resetTransactionId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "contact": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Contact"
                  }
                ]
              },
              "approvedByClient": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              },
              "company": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Company"
                  }
                ]
              },
              "createdByUser": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              },
              "approvedByUser": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              },
              "sales": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              },
              "gallery": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Gallery"
                  }
                ]
              },
              "inlineVatValue": {
                "type": "number",
                "format": "decimal"
              },
              "inlineDiscountValue": {
                "type": "number",
                "format": "decimal"
              },
              "ruleCompileStatus": {
                "$ref": "#/components/schemas/RuleCompileStatus"
              },
              "runningNumberType": {
                "type": "integer",
                "format": "int32"
              },
              "runningModifiedOn": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "exemptAmount": {
                "type": "number",
                "format": "decimal"
              },
              "vatableAmount": {
                "type": "number",
                "format": "decimal"
              },
              "totalAfterDiscount": {
                "type": "number",
                "format": "decimal"
              },
              "subTotal": {
                "type": "number",
                "format": "decimal"
              },
              "documentReferences": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDocumentReference"
                }
              },
              "referencedToMe": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDocumentReference"
                }
              },
              "referencedByMe": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDocumentReference"
                }
              },
              "statusInt": {
                "type": "integer",
                "format": "int32"
              },
              "isReCalculate": {
                "type": "boolean"
              },
              "partialPaymentMethod": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PartialPaymentMethod"
                  }
                ]
              },
              "vatAmount": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "isMigrate": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "ReceivableInvoiceStatus": {
        "type": "integer",
        "description": "1 = Awaiting\n3 = Approved\n5 = ApprovedAndProcessed\n7 = Void\n9 = Delete",
        "x-enumNames": [
          "Awaiting",
          "Approved",
          "ApprovedAndProcessed",
          "Void",
          "Delete"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9
        ]
      },
      "IDocumentReference": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "referenceId": {
            "type": "integer",
            "format": "int64"
          },
          "referenceDocumentType": {
            "$ref": "#/components/schemas/DocumentTypes"
          },
          "referenceDocumentSerial": {
            "type": "string",
            "nullable": true
          },
          "documentId": {
            "type": "integer",
            "format": "int64"
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentTypes"
          },
          "documentSerial": {
            "type": "string",
            "nullable": true
          },
          "isDelete": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/DocumentReferenceTypes"
          },
          "documentStatus": {
            "type": "integer",
            "format": "int32"
          },
          "documentStatusString": {
            "type": "string",
            "nullable": true
          },
          "documentDate": {
            "type": "string",
            "format": "date-time"
          },
          "documentAmount": {
            "type": "number",
            "format": "decimal"
          },
          "documentAmountWithVat": {
            "type": "number",
            "format": "decimal"
          },
          "refDocumentStatus": {
            "type": "integer",
            "format": "int32"
          },
          "refDocumentStatusString": {
            "type": "string",
            "nullable": true
          },
          "refDocumentDate": {
            "type": "string",
            "format": "date-time"
          },
          "refDocumentAmount": {
            "type": "number",
            "format": "decimal"
          },
          "refDocumentAmountWithVat": {
            "type": "number",
            "format": "decimal"
          },
          "partialPaymentTotalAmount": {
            "type": "number",
            "format": "decimal"
          },
          "partialPaymentTotalPercent": {
            "type": "number",
            "format": "decimal"
          },
          "refCreatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "refModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "refIsMigrate": {
            "type": "boolean"
          },
          "isCompileRule": {
            "type": "boolean"
          },
          "documentCollected": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "DocumentReferenceTypes": {
        "type": "integer",
        "description": "1 = ImportDocument\n3 = PartialPayments\n5 = Batch\n7 = Etax\n9 = MiigratePartialPayments\n11 = BatchPartialPayments\n13 = DepositFirst\n15 = DepositLast",
        "x-enumNames": [
          "ImportDocument",
          "PartialPayments",
          "Batch",
          "Etax",
          "MiigratePartialPayments",
          "BatchPartialPayments",
          "DepositFirst",
          "DepositLast"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          11,
          13,
          15
        ]
      },
      "PartialPaymentMethod": {
        "type": "integer",
        "description": "0 = Default\n1 = None\n3 = Quantity\n5 = Price\n7 = Percentage\n11 = RECPartial",
        "x-enumNames": [
          "Default",
          "None",
          "Quantity",
          "Price",
          "Percentage",
          "RECPartial"
        ],
        "enum": [
          0,
          1,
          3,
          5,
          7,
          11
        ]
      },
      "Document2": {
        "type": "object",
        "additionalProperties": false
      },
      "SupplierInvoice": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "companyId",
          "documentDate",
          "createdOn",
          "modifiedOn"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "documentDate": {
            "type": "string",
            "format": "date-time",
            "default": "CURRENT_TIMESTAMP",
            "minLength": 1
          },
          "documentSerial": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactTaxId": {
            "type": "string",
            "nullable": true
          },
          "contactBranch": {
            "type": "string",
            "nullable": true
          },
          "isDelete": {
            "type": "boolean"
          },
          "galleryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "referenceDocumentId": {
            "type": "integer",
            "format": "int64"
          },
          "referenceDocumentType": {
            "$ref": "#/components/schemas/DocumentTypes"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "default": "CURRENT_TIMESTAMP",
            "minLength": 1
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "default": "CURRENT_TIMESTAMP",
            "minLength": 1
          },
          "company": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ]
          },
          "createdByUser": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "modifiedByUser": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "gallery": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gallery"
              }
            ]
          }
        }
      },
      "MessageSent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "messageId": {
            "type": "string",
            "nullable": true
          },
          "externalDocumentId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InlineDocument": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Document"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "discountType": {
                "type": "integer",
                "format": "int32"
              },
              "useInlineDiscount": {
                "type": "boolean"
              },
              "useInlineVat": {
                "type": "boolean"
              },
              "exemptAmount": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "vatableAmount": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/InlineProductItem"
                }
              },
              "documentReference": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/UpgradeDocument"
                }
              }
            }
          }
        ]
      },
      "InlineProductItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal"
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "pricePerUnit": {
            "type": "number",
            "format": "decimal"
          },
          "total": {
            "type": "number",
            "format": "decimal"
          },
          "sellChartOfAccountCode": {
            "type": "string",
            "nullable": true
          },
          "buyChartOfAccountCode": {
            "type": "string",
            "nullable": true
          },
          "discountAmount": {
            "type": "number",
            "format": "decimal"
          },
          "vatRate": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PaymentModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "cashRemarks": {
            "type": "string",
            "nullable": true
          },
          "excludeVat": {
            "type": "number",
            "format": "double"
          },
          "cashTax": {
            "type": "integer",
            "format": "int32"
          },
          "creditCardNumber": {
            "type": "string",
            "nullable": true
          },
          "companyVatRate": {
            "type": "integer",
            "format": "int32"
          },
          "net": {
            "type": "number",
            "format": "decimal"
          },
          "bankAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "bankAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "dateNow": {
            "type": "string",
            "format": "date-time"
          },
          "amountCollected": {
            "type": "number",
            "format": "decimal"
          },
          "amountWithheld": {
            "type": "number",
            "format": "decimal"
          },
          "withholdingTax": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "transferBankAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bankAccountCreditCardId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "charge": {
            "type": "number",
            "format": "decimal"
          },
          "chequeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "chequeNumber": {
            "type": "string",
            "nullable": true
          },
          "chequeBankAccountId": {
            "type": "string",
            "nullable": true
          },
          "creditCardBankAccountId": {
            "type": "string",
            "nullable": true
          },
          "remainingCollected": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "remainingCollectedType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RemainingCollectedType"
              }
            ]
          },
          "deductionAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "paymentDeductionType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeductionType"
              }
            ]
          },
          "pettyCashName": {
            "type": "string",
            "nullable": true
          },
          "pettyCashId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "chequeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creditCardId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "otherChannelId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "chequeDepositDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "chequeDepositBankId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "chequeCashingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "autoCreateWithholdingTax": {
            "type": "boolean"
          },
          "withholdingTaxIncomeType": {
            "$ref": "#/components/schemas/IncomeType"
          },
          "withholdingTaxIncomeDescription": {
            "type": "string",
            "nullable": true
          },
          "withholdingTaxEntity": {
            "$ref": "#/components/schemas/Entity"
          },
          "exchangeRateFee": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "PaymentMethod": {
        "type": "integer",
        "description": "0 = None\n1 = Cash\n3 = Cheque\n5 = Transfer\n7 = CreditCard\n9 = PushPay\n11 = PettyCash\n13 = Other\n51 = TransferByKConnect",
        "x-enumNames": [
          "None",
          "Cash",
          "Cheque",
          "Transfer",
          "CreditCard",
          "PushPay",
          "PettyCash",
          "Other",
          "TransferByKConnect"
        ],
        "enum": [
          0,
          1,
          3,
          5,
          7,
          9,
          11,
          13,
          51
        ]
      },
      "RemainingCollectedType": {
        "type": "integer",
        "description": "1 = CashShortOrOver\n3 = CashDiscount\n5 = ExchangeRateDiff\n51 = SalesCashShortOrOver\n53 = SalesDiscount\n55 = SalesBankFee\n57 = SalesExchangeRateDiff",
        "x-enumNames": [
          "CashShortOrOver",
          "CashDiscount",
          "ExchangeRateDiff",
          "SalesCashShortOrOver",
          "SalesDiscount",
          "SalesBankFee",
          "SalesExchangeRateDiff"
        ],
        "enum": [
          1,
          3,
          5,
          51,
          53,
          55,
          57
        ]
      },
      "DeductionType": {
        "type": "integer",
        "description": "0 = None\n1 = CashDiscount\n3 = Commission\n5 = ManagementFee\n7 = Roundings\n9 = Retentions",
        "x-enumNames": [
          "None",
          "CashDiscount",
          "Commission",
          "ManagementFee",
          "Roundings",
          "Retentions"
        ],
        "enum": [
          0,
          1,
          3,
          5,
          7,
          9
        ]
      },
      "IncomeType": {
        "type": "integer",
        "description": "1 = Salary\n3 = Commission\n5 = Licensing\n7 = Interest\n9 = NetProfit30\n11 = NetProfit25\n13 = NetProfit20\n15 = NetProfitOther\n17 = TaxExemption\n19 = DividenFromShareOfProfit\n21 = PortionOfNetProfit\n23 = RecognitionOfProfit\n25 = TaxOther\n27 = RevenueDepartmentTax\n29 = Others",
        "x-enumNames": [
          "Salary",
          "Commission",
          "Licensing",
          "Interest",
          "NetProfit30",
          "NetProfit25",
          "NetProfit20",
          "NetProfitOther",
          "TaxExemption",
          "DividenFromShareOfProfit",
          "PortionOfNetProfit",
          "RecognitionOfProfit",
          "TaxOther",
          "RevenueDepartmentTax",
          "Others"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          11,
          13,
          15,
          17,
          19,
          21,
          23,
          25,
          27,
          29
        ]
      },
      "Entity": {
        "type": "integer",
        "description": "1 = PND3\n3 = PND53\n5 = PND1K\n7 = PND1KSpecial\n9 = PND2\n11 = PND2K\n13 = PND3K\n15 = PND1",
        "x-enumNames": [
          "PND3",
          "PND53",
          "PND1K",
          "PND1KSpecial",
          "PND2",
          "PND2K",
          "PND3K",
          "PND1"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          11,
          13,
          15
        ]
      },
      "PayrollQuery": {
        "example": {
          "fromPayroll": false,
          "payrollType": 3,
          "totalValue": 0.0,
          "totalVAT": 0.0,
          "isReceived": false,
          "documentType": [],
          "revenue": null,
          "expenses": [
            {
              "text": "Exclude Sales Tax",
              "value": "0"
            },
            {
              "text": "Include Sales Tax",
              "value": "1"
            }
          ],
          "previousMonths": [
            {
              "text": "Sep",
              "value": "9"
            },
            {
              "text": "Aug",
              "value": "8"
            },
            {
              "text": "Jul",
              "value": "7"
            },
            {
              "text": "Jun",
              "value": "6"
            },
            {
              "text": "May",
              "value": "5"
            },
            {
              "text": "Apr",
              "value": "4"
            },
            {
              "text": "Mar",
              "value": "3"
            },
            {
              "text": "Feb",
              "value": "2"
            },
            {
              "text": "Jan",
              "value": "1"
            }
          ],
          "previousYears": [
            {
              "text": "2014",
              "value": "2014"
            },
            {
              "text": "2015",
              "value": "2015"
            },
            {
              "text": "2016",
              "value": "2016"
            },
            {
              "text": "2017",
              "value": "2017"
            },
            {
              "text": "2018",
              "value": "2018"
            },
            {
              "text": "2019",
              "value": "2019"
            },
            {
              "text": "2020",
              "value": "2020"
            },
            {
              "text": "2021",
              "value": "2021"
            },
            {
              "text": "2022",
              "value": "2022"
            }
          ],
          "customDocumentModels": null,
          "pageSize": 20,
          "currentPage": 1,
          "totalRecords": 0,
          "dateType": 1,
          "startDate": null,
          "endDate": null,
          "day": 0,
          "month": 0,
          "year": 0,
          "range": 0,
          "isFirstCurrent": 0,
          "hashTags": [],
          "reportType": 0,
          "filter": null,
          "sortBy": null
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentQuery"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fromPayroll": {
                "type": "boolean"
              },
              "payrollType": {
                "$ref": "#/components/schemas/PayrollType"
              }
            }
          }
        ]
      },
      "PayrollType": {
        "type": "integer",
        "description": "1 = FirstVersion\n3 = PayrollPayment\n5 = Kconnect\n7 = Cash\n9 = Transfer",
        "x-enumNames": [
          "FirstVersion",
          "PayrollPayment",
          "Kconnect",
          "Cash",
          "Transfer"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9
        ]
      },
      "DocumentQuery": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleQuery"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "totalValue": {
                "type": "number",
                "format": "decimal"
              },
              "totalVAT": {
                "type": "number",
                "format": "decimal"
              },
              "isReceived": {
                "type": "boolean"
              },
              "documentType": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/DocumentTypes"
                }
              },
              "revenue": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ListItem"
                }
              },
              "expenses": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ListItem"
                }
              },
              "previousMonths": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ListItem"
                }
              },
              "previousYears": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ListItem"
                }
              },
              "customDocumentModels": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/CustomDocumentModel"
                }
              }
            }
          }
        ]
      },
      "ListItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomDocumentModel": {
        "type": "integer",
        "description": "1 = SwitchProductItemSellToBuy",
        "x-enumNames": [
          "SwitchProductItemSellToBuy"
        ],
        "enum": [
          1
        ]
      },
      "SimpleQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currentPage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          },
          "dateType": {
            "$ref": "#/components/schemas/DateType"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "range": {
            "$ref": "#/components/schemas/DataRange"
          },
          "isFirstCurrent": {
            "type": "integer",
            "format": "int32"
          },
          "hashTags": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "reportType": {
            "$ref": "#/components/schemas/ReportTypes"
          },
          "filter": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FilterOptions"
            }
          },
          "sortBy": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SortOptions"
            }
          }
        }
      },
      "DateType": {
        "type": "integer",
        "description": "1 = PublishDate\n3 = PaymentDate\n5 = ExpenseDate\n7 = TransitionDate",
        "x-enumNames": [
          "PublishDate",
          "PaymentDate",
          "ExpenseDate",
          "TransitionDate"
        ],
        "enum": [
          1,
          3,
          5,
          7
        ]
      },
      "DataRange": {
        "type": "integer",
        "description": "1 = CurrentMonth\n3 = PreviousMonth\n5 = Manual\n7 = CurrentYear\n9 = PreviousYear\n11 = AsAt\n13 = Grid\n15 = FiscalYear\n17 = Months\n19 = Days",
        "x-enumNames": [
          "CurrentMonth",
          "PreviousMonth",
          "Manual",
          "CurrentYear",
          "PreviousYear",
          "AsAt",
          "Grid",
          "FiscalYear",
          "Months",
          "Days"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          11,
          13,
          15,
          17,
          19
        ]
      },
      "ReportTypes": {
        "type": "integer",
        "description": "10 = Sales\n11 = SalesTeamReport\n12 = SalesTax\n13 = SimpleSales\n14 = AccountReceivable\n15 = AccountReceivableAging\n20 = Purchase\n21 = PurchaseTax\n22 = AccountPayable\n23 = AccountPayableAging\n24 = PurchaseByProduct\n25 = PurchaseByProductAdvance\n30 = Clients\n40 = Vendor\n50 = PaymentCollection\n60 = SalesByProduct\n61 = SalesByProductAdvance\n62 = SalesByPerson\n63 = SalesByPersonAdvance\n64 = SalesByCustomer\n65 = SalesByCustomerAdvance\n70 = Quotation\n80 = BillingNote\n90 = ReceiveInventory\n91 = StocksReport\n92 = GroupStockReport\n100 = Expense\n110 = WithHoldingTax\n120 = ProfitAndLossOneMonth\n121 = ProfitAndLossMultipleMonth\n130 = Receipt\n140 = CreditNote\n150 = DebitNote\n160 = TaxInvoice\n170 = Payroll\n171 = PayrollSummary\n172 = PayrollGroup\n173 = PayrollSscSummary\n180 = ContactGrid\n190 = ProductGrid\n200 = ExportContact\n210 = ExportProduct\n220 = Receivables\n240 = Payables\n260 = GeneralLedger\n270 = JournalEntry\n280 = Payment\n290 = InputTax\n291 = OutputTax\n292 = FixedAsset\n293 = Depreciation\n300 = PaymentSlip",
        "x-enumNames": [
          "Sales",
          "SalesTeamReport",
          "SalesTax",
          "SimpleSales",
          "AccountReceivable",
          "AccountReceivableAging",
          "Purchase",
          "PurchaseTax",
          "AccountPayable",
          "AccountPayableAging",
          "PurchaseByProduct",
          "PurchaseByProductAdvance",
          "Clients",
          "Vendor",
          "PaymentCollection",
          "SalesByProduct",
          "SalesByProductAdvance",
          "SalesByPerson",
          "SalesByPersonAdvance",
          "SalesByCustomer",
          "SalesByCustomerAdvance",
          "Quotation",
          "BillingNote",
          "ReceiveInventory",
          "StocksReport",
          "GroupStockReport",
          "Expense",
          "WithHoldingTax",
          "ProfitAndLossOneMonth",
          "ProfitAndLossMultipleMonth",
          "Receipt",
          "CreditNote",
          "DebitNote",
          "TaxInvoice",
          "Payroll",
          "PayrollSummary",
          "PayrollGroup",
          "PayrollSscSummary",
          "ContactGrid",
          "ProductGrid",
          "ExportContact",
          "ExportProduct",
          "Receivables",
          "Payables",
          "GeneralLedger",
          "JournalEntry",
          "Payment",
          "InputTax",
          "OutputTax",
          "FixedAsset",
          "Depreciation",
          "PaymentSlip"
        ],
        "enum": [
          10,
          11,
          12,
          13,
          14,
          15,
          20,
          21,
          22,
          23,
          24,
          25,
          30,
          40,
          50,
          60,
          61,
          62,
          63,
          64,
          65,
          70,
          80,
          90,
          91,
          92,
          100,
          110,
          120,
          121,
          130,
          140,
          150,
          160,
          170,
          171,
          172,
          173,
          180,
          190,
          200,
          210,
          220,
          240,
          260,
          270,
          280,
          290,
          291,
          292,
          293,
          300
        ]
      },
      "FilterOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "columnName": {
            "type": "string",
            "nullable": true
          },
          "columnValue": {
            "type": "string",
            "nullable": true
          },
          "columnPredicateOperator": {
            "$ref": "#/components/schemas/PredicateOperator"
          }
        }
      },
      "PredicateOperator": {
        "type": "integer",
        "description": "0 = Or\n1 = And",
        "x-enumNames": [
          "Or",
          "And"
        ],
        "enum": [
          0,
          1
        ]
      },
      "SortOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "$ref": "#/components/schemas/OrderBy"
          }
        }
      },
      "OrderBy": {
        "type": "integer",
        "description": "1 = Asc\n3 = Desc",
        "x-enumNames": [
          "Asc",
          "Desc"
        ],
        "enum": [
          1,
          3
        ]
      },
      "EmployeeModel": {
        "example": {
          "reason": null,
          "id": 0,
          "companyId": null,
          "prefix": 1,
          "firstName": "กไก่",
          "lastName": "อยู่ในเล้า",
          "salary": 12000.0,
          "identitficationNumber": "1234567890123",
          "passportNumber": null,
          "profileImage": null,
          "mobile": null,
          "commission": null,
          "remarks": null,
          "title": null,
          "galleryId": null,
          "bankId": null,
          "branch": null,
          "accountNumber": "1234567890",
          "accountType": 3,
          "startDate": "2022-10-10T09:37:39.6155504+07:00",
          "endDate": null,
          "internalNote": null,
          "isActive": null,
          "createdOn": null,
          "modifiedOn": null,
          "createdBy": null,
          "modifiedBy": null,
          "type": null,
          "code": "employe001",
          "salaryType": 0,
          "socialSecurityNumber": null,
          "employerSocialSecurityRate": 0,
          "employeeSocialSecurityRate": 0,
          "email": null,
          "dob": null,
          "address": "i live at 123 and you live at 456",
          "contactName": "Employee number 1",
          "contactNumber": null,
          "contactRelationship": null,
          "office": null,
          "socialSecurityStatus": null,
          "methodPayment": 1,
          "secondaryEmail": null,
          "isDelete": false,
          "socialSecurityValue": 600.0,
          "withholdingTax": 0.0,
          "isHeadOffice": false,
          "companyBranch": null,
          "maritalStatus": 0,
          "currentAddress": null,
          "departmentId": null,
          "firstNameForeign": "Chicken",
          "lastNameForeign": "in the nest",
          "isSocialSecurityRegistered": true,
          "bankBranchCode": null,
          "idCard": null,
          "householdRegistration": null,
          "nickname": null,
          "nicknameForeign": null,
          "lineId": null,
          "conditionsWithholdingTax": 1,
          "paidPeriod": 1,
          "bank": null,
          "company": null,
          "gallery": null,
          "galleryIdCard": null,
          "galleryHouseholdRegistration": null,
          "payrollDetail": [],
          "department": null
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Employee"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "reason": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "Employee": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "prefix": {
            "$ref": "#/components/schemas/GenderPrefix"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "salary": {
            "type": "number",
            "format": "decimal"
          },
          "identitficationNumber": {
            "type": "string",
            "nullable": true
          },
          "passportNumber": {
            "type": "string",
            "nullable": true
          },
          "profileImage": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "commission": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "galleryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "bankId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branch": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "internalNote": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmployeeTypes"
              }
            ]
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "salaryType": {
            "type": "integer",
            "format": "int32"
          },
          "socialSecurityNumber": {
            "type": "string",
            "nullable": true
          },
          "employerSocialSecurityRate": {
            "type": "integer",
            "format": "int32"
          },
          "employeeSocialSecurityRate": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "dob": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactNumber": {
            "type": "string",
            "nullable": true
          },
          "contactRelationship": {
            "type": "string",
            "nullable": true
          },
          "office": {
            "type": "string",
            "nullable": true
          },
          "socialSecurityStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "methodPayment": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "secondaryEmail": {
            "type": "string",
            "nullable": true
          },
          "isDelete": {
            "type": "boolean"
          },
          "socialSecurityValue": {
            "type": "number",
            "format": "decimal"
          },
          "withholdingTax": {
            "type": "number",
            "format": "decimal"
          },
          "isHeadOffice": {
            "type": "boolean"
          },
          "companyBranch": {
            "type": "string",
            "nullable": true
          },
          "maritalStatus": {
            "type": "integer",
            "format": "int32"
          },
          "currentAddress": {
            "type": "string",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "firstNameForeign": {
            "type": "string",
            "nullable": true
          },
          "lastNameForeign": {
            "type": "string",
            "nullable": true
          },
          "isSocialSecurityRegistered": {
            "type": "boolean"
          },
          "bankBranchCode": {
            "type": "string",
            "nullable": true
          },
          "idCard": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "householdRegistration": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "nicknameForeign": {
            "type": "string",
            "nullable": true
          },
          "lineId": {
            "type": "string",
            "nullable": true
          },
          "conditionsWithholdingTax": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionsOfWithholdingTax"
              }
            ]
          },
          "paidPeriod": {
            "default": 1,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaidPeriod"
              }
            ]
          },
          "bank": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Bank"
              }
            ]
          },
          "company": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ]
          },
          "gallery": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gallery"
              }
            ]
          },
          "galleryIdCard": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gallery"
              }
            ]
          },
          "galleryHouseholdRegistration": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gallery"
              }
            ]
          },
          "payrollDetail": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PayrollDetail"
            }
          },
          "department": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Department"
              }
            ]
          }
        }
      },
      "GenderPrefix": {
        "type": "integer",
        "description": "1 = Mr\n3 = Mrs\n5 = Ms",
        "x-enumNames": [
          "Mr",
          "Mrs",
          "Ms"
        ],
        "enum": [
          1,
          3,
          5
        ]
      },
      "EmployeeTypes": {
        "type": "integer",
        "description": "1 = EmpWithOutOT\n3 = EmpWithOT\n5 = EmpByDayHour\n7 = Owner",
        "x-enumNames": [
          "EmpWithOutOT",
          "EmpWithOT",
          "EmpByDayHour",
          "Owner"
        ],
        "enum": [
          1,
          3,
          5,
          7
        ]
      },
      "ConditionsOfWithholdingTax": {
        "type": "integer",
        "description": "1 = WithholdsTaxAtSource\n2 = PayEveryTime\n3 = PayOneTime",
        "x-enumNames": [
          "WithholdsTaxAtSource",
          "PayEveryTime",
          "PayOneTime"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "PaidPeriod": {
        "type": "integer",
        "description": "1 = Monthly\n3 = Daily",
        "x-enumNames": [
          "Monthly",
          "Daily"
        ],
        "enum": [
          1,
          3
        ]
      },
      "Bank": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "bankCode"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "countryCode": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bankCode": {
            "type": "string",
            "maxLength": 20,
            "minLength": 0
          },
          "isDelete": {
            "type": "boolean"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          },
          "isCustomBank": {
            "type": "boolean"
          },
          "bankAccount": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BankAccount"
            }
          },
          "reconciledDocument": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ReconciledDocument"
            }
          }
        }
      },
      "BankAccount": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "companyId"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "accountNumber": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "bankId": {
            "type": "integer",
            "format": "int32"
          },
          "branch": {
            "type": "string",
            "nullable": true
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "type": "integer",
            "format": "int32"
          },
          "lastReconciledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastOutstandingBalanceDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastStatementDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastStatementDocumentId": {
            "type": "string",
            "nullable": true
          },
          "synced": {
            "type": "boolean"
          },
          "outstandingBalance": {
            "type": "number",
            "format": "decimal"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isDelete": {
            "type": "boolean",
            "default": false
          },
          "lastAvailableBalance": {
            "type": "number",
            "format": "decimal"
          },
          "lastOutstandingBalance": {
            "type": "number",
            "format": "decimal"
          },
          "chartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "chartOfAccount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChartOfAccount"
              }
            ]
          },
          "bank": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Bank"
              }
            ]
          },
          "company": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/BankingChannelsStatus"
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "qrCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ChartOfAccount": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "createdon",
          "modifiedon"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "nameLocal": {
            "type": "string",
            "nullable": true
          },
          "nameForeign": {
            "type": "string",
            "nullable": true
          },
          "descriptionLocal": {
            "type": "string",
            "nullable": true
          },
          "descriptionForeign": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/ChartOfAccountCategory"
          },
          "parentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isFolder": {
            "type": "boolean"
          },
          "isBank": {
            "type": "boolean"
          },
          "isReceivable": {
            "type": "boolean"
          },
          "isDelete": {
            "type": "boolean",
            "default": false
          },
          "isLock": {
            "type": "boolean",
            "default": false
          },
          "createdon": {
            "type": "string",
            "format": "date-time",
            "default": "CURRENT_TIMESTAMP",
            "minLength": 1
          },
          "modifiedon": {
            "type": "string",
            "format": "date-time",
            "default": "CURRENT_TIMESTAMP",
            "minLength": 1
          },
          "modifiedby": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "number",
            "format": "decimal"
          },
          "left": {
            "type": "integer",
            "format": "int32"
          },
          "right": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean"
          },
          "bankAccount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BankAccount"
              }
            ]
          },
          "pettyCash": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PettyCash"
              }
            ]
          },
          "cheque": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Cheque"
              }
            ]
          },
          "creditCard": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditCard"
              }
            ]
          },
          "otherChannels": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OtherChannels"
              }
            ]
          },
          "systemChartOfAccount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SystemChartOfAccount"
              }
            ]
          }
        }
      },
      "PettyCash": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "companyId"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "isDelete": {
            "type": "boolean",
            "default": false
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "cashLimit": {
            "type": "number",
            "format": "decimal"
          },
          "chartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "chartOfAccount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChartOfAccount"
              }
            ]
          },
          "cashHolderId": {
            "type": "integer",
            "format": "int64"
          },
          "cashHolder": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/BankingChannelsStatus"
          },
          "cashHolderName": {
            "type": "string",
            "nullable": true
          },
          "remainingBalance": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "BankingChannelsStatus": {
        "type": "integer",
        "description": "1 = Active\n3 = InActive",
        "x-enumNames": [
          "Active",
          "InActive"
        ],
        "enum": [
          1,
          3
        ]
      },
      "Cheque": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "companyId"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "bankAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "bankAccount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BankAccount"
              }
            ]
          },
          "chartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "chartOfAccount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChartOfAccount"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/BankingChannelsStatus"
          },
          "isDelete": {
            "type": "boolean",
            "default": false
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreditCard": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "companyId"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "chartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "chartOfAccount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChartOfAccount"
              }
            ]
          },
          "bankId": {
            "type": "integer",
            "format": "int32"
          },
          "bank": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Bank"
              }
            ]
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/CreditCardType"
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardHolderName": {
            "type": "string",
            "nullable": true
          },
          "cardName": {
            "type": "string",
            "nullable": true
          },
          "cashLimit": {
            "type": "number",
            "format": "decimal"
          },
          "statementDate": {
            "type": "integer",
            "format": "int32"
          },
          "dueDate": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/BankingChannelsStatus"
          },
          "isDelete": {
            "type": "boolean",
            "default": false
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreditCardType": {
        "type": "integer",
        "description": "1 = Personal\n3 = Business",
        "x-enumNames": [
          "Personal",
          "Business"
        ],
        "enum": [
          1,
          3
        ]
      },
      "OtherChannels": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "companyId"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "chartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "chartOfAccount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChartOfAccount"
              }
            ]
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/BankingChannelsStatus"
          },
          "channel": {
            "$ref": "#/components/schemas/PaymentChannelsType"
          },
          "type": {
            "$ref": "#/components/schemas/OtherChannelsType"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "bankId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bank": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Bank"
              }
            ]
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "isDelete": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "PaymentChannelsType": {
        "type": "integer",
        "description": "1 = POS\n3 = PayemntGateWay\n5 = EDC\n7 = ECommerce",
        "x-enumNames": [
          "POS",
          "PayemntGateWay",
          "EDC",
          "ECommerce"
        ],
        "enum": [
          1,
          3,
          5,
          7
        ]
      },
      "OtherChannelsType": {
        "type": "integer",
        "description": "1 = Receive\n3 = ReceivePay\n5 = Pay",
        "x-enumNames": [
          "Receive",
          "ReceivePay",
          "Pay"
        ],
        "enum": [
          1,
          3,
          5
        ]
      },
      "SystemChartOfAccount": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "companyId",
          "systemCode"
        ],
        "properties": {
          "chartOfAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "systemCode": {
            "type": "integer",
            "format": "int32"
          },
          "chartOfAccount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ChartOfAccount"
              }
            ]
          },
          "chartOfAccountIdCredit": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ReconciledDocument": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "accountNumber"
        ],
        "properties": {
          "documentId": {
            "type": "integer",
            "format": "int64"
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentTypes"
          },
          "transactionId": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "fromAccount": {
            "type": "string",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0
          },
          "bankId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "bank": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Bank"
              }
            ]
          },
          "company": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ]
          }
        }
      },
      "PayrollDetail": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "payrollId": {
            "type": "integer",
            "format": "int64"
          },
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "salary": {
            "type": "number",
            "format": "decimal"
          },
          "socialSecurityValue": {
            "type": "number",
            "format": "decimal"
          },
          "commission": {
            "type": "number",
            "format": "decimal"
          },
          "bonus": {
            "type": "number",
            "format": "decimal"
          },
          "deduction": {
            "type": "number",
            "format": "decimal"
          },
          "withholdingTax": {
            "type": "number",
            "format": "decimal"
          },
          "status": {
            "$ref": "#/components/schemas/PayrollDetailStatus"
          },
          "isDelete": {
            "type": "boolean"
          },
          "withheld": {
            "type": "number",
            "format": "decimal"
          },
          "datePayment": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fee": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "nullable": true
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "payStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "expenseId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "overtime": {
            "type": "number",
            "format": "decimal"
          },
          "advance": {
            "type": "number",
            "format": "decimal"
          },
          "otherAddition": {
            "type": "number",
            "format": "decimal"
          },
          "otherDeduction": {
            "type": "number",
            "format": "decimal"
          },
          "providentFund": {
            "type": "number",
            "format": "decimal"
          },
          "securityMoney": {
            "type": "number",
            "format": "decimal"
          },
          "value": {
            "type": "number",
            "format": "decimal"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "employerSocialSecurity": {
            "type": "number",
            "format": "decimal"
          },
          "allowance": {
            "type": "number",
            "format": "decimal"
          },
          "cola": {
            "type": "number",
            "format": "decimal"
          },
          "medicalExpense": {
            "type": "number",
            "format": "decimal"
          },
          "accommodation": {
            "type": "number",
            "format": "decimal"
          },
          "directorRemuneration": {
            "type": "number",
            "format": "decimal"
          },
          "methodPayment": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bankId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "accountNumberMasking": {
            "type": "string",
            "nullable": true
          },
          "employeeTitle": {
            "type": "string",
            "nullable": true
          },
          "employeeCode": {
            "type": "string",
            "nullable": true
          },
          "employeeFirstName": {
            "type": "string",
            "nullable": true
          },
          "employeeLastName": {
            "type": "string",
            "nullable": true
          },
          "employeeFirstNameForeign": {
            "type": "string",
            "nullable": true
          },
          "employeeLastNameForeign": {
            "type": "string",
            "nullable": true
          },
          "employeeStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isSocialSecurityRegistered": {
            "type": "boolean"
          },
          "bankBranchCode": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BankAccountType"
              }
            ]
          },
          "referenceId": {
            "type": "string",
            "nullable": true
          },
          "isMigrate": {
            "type": "boolean"
          },
          "employee": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Employee"
              }
            ]
          },
          "expenseList": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpenseList"
              }
            ]
          },
          "payroll": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Payroll"
              }
            ]
          },
          "bank": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Bank"
              }
            ]
          },
          "lastModifiedByUser": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "ruleCompileStatus": {
            "$ref": "#/components/schemas/RuleCompileStatus"
          },
          "employerAccountBranch": {
            "type": "string",
            "nullable": true
          },
          "employerAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "bankAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paymentRemarks": {
            "type": "string",
            "nullable": true
          },
          "payrollPaymentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "kcProcessingStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "departmentName": {
            "type": "string",
            "nullable": true
          },
          "departmentCode": {
            "type": "string",
            "nullable": true
          },
          "workDays": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "wage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "isSocialSecurityAutoCal": {
            "type": "boolean"
          },
          "socialSecurityPercent": {
            "type": "number",
            "format": "decimal",
            "default": 5
          },
          "sendEmailStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SendEmailStatus"
              }
            ]
          },
          "studentLoan": {
            "type": "number",
            "format": "decimal"
          },
          "conditionsWithholdingTax": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionsOfWithholdingTax"
              }
            ]
          },
          "overtimePND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "commissionPND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bonusPND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowancePND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "colaPND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "medicalExpensePND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accommodationPND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "directorRemunerationPND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "otherAdditionPND": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "withholdingTax401": {
            "type": "number",
            "format": "decimal"
          },
          "withholdingTax402": {
            "type": "number",
            "format": "decimal"
          },
          "statusInt": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PayrollDetailStatus": {
        "type": "integer",
        "description": "0 = Draft\n1 = Awaiting\n2 = Reset\n3 = Paid\n4 = Partial\n5 = Rejected\n7 = Approved\n11 = PushPayAwaiting\n13 = PushPayProcessed\n15 = PushPayRejected\n17 = PushPayPartial\n19 = PushPayPendingPayments\n50 = KConnectAwaiting\n52 = KConnectProcessed\n54 = KConnectRejected\n56 = KConnectPendingPayments\n58 = KConnectPartialPayments",
        "x-enumNames": [
          "Draft",
          "Awaiting",
          "Reset",
          "Paid",
          "Partial",
          "Rejected",
          "Approved",
          "PushPayAwaiting",
          "PushPayProcessed",
          "PushPayRejected",
          "PushPayPartial",
          "PushPayPendingPayments",
          "KConnectAwaiting",
          "KConnectProcessed",
          "KConnectRejected",
          "KConnectPendingPayments",
          "KConnectPartialPayments"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          7,
          11,
          13,
          15,
          17,
          19,
          50,
          52,
          54,
          56,
          58
        ]
      },
      "ExpenseList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Document2"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "collected",
              "outstanding",
              "paymentWithHeld"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "vendorCompanyId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "companyId": {
                "type": "integer",
                "format": "int64"
              },
              "status": {
                "$ref": "#/components/schemas/ExpenseStatus"
              },
              "receiptImage": {
                "type": "string",
                "nullable": true
              },
              "value": {
                "type": "number",
                "format": "decimal"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "expenseCategoryId": {
                "type": "integer",
                "format": "int64"
              },
              "documentSerial": {
                "type": "string",
                "nullable": true
              },
              "documentId": {
                "type": "string",
                "nullable": true
              },
              "publishedOn": {
                "type": "string",
                "format": "date-time"
              },
              "expenseDate": {
                "type": "string",
                "format": "date-time"
              },
              "documentDate": {
                "type": "string",
                "format": "date-time"
              },
              "createdOn": {
                "type": "string",
                "format": "date-time"
              },
              "createdBy": {
                "type": "integer",
                "format": "int64"
              },
              "modifiedOn": {
                "type": "string",
                "format": "date-time"
              },
              "published": {
                "type": "boolean"
              },
              "approved": {
                "type": "boolean"
              },
              "approvedBy": {
                "type": "integer",
                "format": "int64"
              },
              "remarks": {
                "type": "string",
                "nullable": true
              },
              "isTax": {
                "type": "boolean"
              },
              "isDelete": {
                "type": "boolean"
              },
              "taxRefundable": {
                "type": "boolean"
              },
              "galleryId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "reconciled": {
                "type": "boolean"
              },
              "nullableContactId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "bankAccountNumber": {
                "type": "string",
                "maxLength": 50,
                "minLength": 0,
                "nullable": true
              },
              "isVatInclusive": {
                "type": "boolean"
              },
              "methodPayment": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentMethod"
                  }
                ]
              },
              "vendorName": {
                "type": "string",
                "nullable": true
              },
              "addressLocal": {
                "type": "string",
                "nullable": true
              },
              "addressLocalLine2": {
                "type": "string",
                "nullable": true
              },
              "addressLocalLine3": {
                "type": "string",
                "nullable": true
              },
              "companyTaxId": {
                "type": "string",
                "nullable": true
              },
              "branch": {
                "type": "string",
                "nullable": true
              },
              "vatRate": {
                "type": "integer",
                "format": "int32"
              },
              "tax": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "valueIncludeVat": {
                "type": "number",
                "format": "decimal"
              },
              "vatAmount": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "documentSerialNoPrefix": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "withholding": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "charge": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "datePayment": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "checkNumber": {
                "type": "string",
                "maxLength": 50,
                "minLength": 0,
                "nullable": true
              },
              "checkBankId": {
                "type": "string",
                "maxLength": 2147483647,
                "minLength": 0,
                "nullable": true
              },
              "checkDatePaid": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "transferBankId": {
                "type": "string",
                "maxLength": 2147483647,
                "minLength": 0,
                "nullable": true
              },
              "collected": {
                "type": "number",
                "format": "decimal",
                "default": 0
              },
              "outstanding": {
                "type": "number",
                "format": "decimal",
                "default": 0
              },
              "paymentWithHeld": {
                "type": "number",
                "format": "decimal",
                "default": 0
              },
              "resetTransactionId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "bankAccountId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "ruleCompileStatus": {
                "$ref": "#/components/schemas/RuleCompileStatus"
              },
              "remainingCollected": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "remainingCollectedType": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RemainingCollectedType"
                  }
                ]
              },
              "company": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Company"
                  }
                ]
              },
              "vendorCompany": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Company"
                  }
                ]
              },
              "expenseCategory": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ExpenseCategory"
                  }
                ]
              },
              "gallery": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Gallery"
                  }
                ]
              },
              "contact": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Contact"
                  }
                ]
              },
              "runningNumberType": {
                "type": "integer",
                "format": "int32"
              },
              "runningModifiedOn": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "isForeignCurrency": {
                "type": "boolean"
              },
              "foreignCurrency": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Currency"
                  }
                ]
              },
              "exchangeRate": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "foreignValue": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "exemptAmount": {
                "type": "number",
                "format": "decimal"
              },
              "vatableAmount": {
                "type": "number",
                "format": "decimal"
              },
              "totalAfterDiscount": {
                "type": "number",
                "format": "decimal"
              },
              "dueDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "subTotal": {
                "type": "number",
                "format": "decimal"
              },
              "payrollDetail": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PayrollDetail"
                }
              },
              "batchTaxFilingId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "batchTaxFiling": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BatchTaxFiling"
                  }
                ]
              },
              "supplierInvoiceStatus": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SupplierInvoiceStatus"
                  }
                ]
              },
              "saleAndPurchaseChannel": {
                "type": "string",
                "nullable": true
              },
              "pettyCashName": {
                "type": "string",
                "nullable": true
              },
              "pettyCashId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "chequeId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "creditCardId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "otherChannelId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "chequeCashingDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "autoCreateWithholdingTax": {
                "type": "boolean",
                "nullable": true
              },
              "withholdingTaxIncomeType": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IncomeType"
                  }
                ]
              },
              "withholdingTaxIncomeDescription": {
                "type": "string",
                "nullable": true
              },
              "withholdingTaxEntity": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Entity"
                  }
                ]
              },
              "exchangeRatio": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "isManualRate": {
                "type": "boolean",
                "nullable": true
              },
              "exchangeRateDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "companyCurrencyId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "foreignInlineVatValue": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "foreignInlineDiscountValue": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "foreignVatAmount": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "foreignDeductionAmount": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "projectId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "isManualVat": {
                "type": "boolean",
                "nullable": true
              },
              "externalDocumentId": {
                "type": "string",
                "maxLength": 36,
                "nullable": true
              },
              "batchId": {
                "type": "string",
                "maxLength": 36,
                "nullable": true
              },
              "documentReferences": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDocumentReference"
                }
              },
              "referencedToMe": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDocumentReference"
                }
              },
              "referencedByMe": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDocumentReference"
                }
              },
              "statusInt": {
                "type": "integer",
                "format": "int32"
              },
              "partialPaymentMethod": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PartialPaymentMethod"
                  }
                ]
              },
              "refDocumentStatus": {
                "type": "integer",
                "format": "int32"
              },
              "refDocumentStatusString": {
                "type": "string",
                "nullable": true
              },
              "isReCalculate": {
                "type": "boolean"
              },
              "inlineVatValue": {
                "type": "number",
                "format": "decimal"
              },
              "inlineDiscountValue": {
                "type": "number",
                "format": "decimal"
              },
              "isMigrate": {
                "type": "boolean"
              },
              "vatValue": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "deductionAmount": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "paymentDeductionType": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DeductionType"
                  }
                ]
              },
              "documentDeductionType": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DeductionType"
                  }
                ]
              },
              "isInlineDiscount": {
                "type": "boolean"
              },
              "isInlineVat": {
                "type": "boolean"
              },
              "contactId": {
                "type": "integer",
                "format": "int64"
              },
              "valueExcludeVat": {
                "type": "number",
                "format": "decimal"
              },
              "roundingAdjustment": {
                "type": "number",
                "format": "decimal"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "internalNotes": {
                "type": "string",
                "nullable": true
              },
              "projectName": {
                "type": "string",
                "nullable": true
              },
              "projectNameAndProjectDeatil": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ExpenseStatus": {
        "type": "integer",
        "description": "1 = Awaiting\n3 = Approved\n4 = PendingPayment\n5 = Paid\n6 = PaidByPaymentSlip\n7 = Void\n9 = ApprovedAndProcessed\n11 = Received\n23 = ReceivedByPaymentSlip",
        "x-enumNames": [
          "Awaiting",
          "Approved",
          "PendingPayment",
          "Paid",
          "PaidByPaymentSlip",
          "Void",
          "ApprovedAndProcessed",
          "Received",
          "ReceivedByPaymentSlip"
        ],
        "enum": [
          1,
          3,
          4,
          5,
          6,
          7,
          9,
          11,
          23
        ]
      },
      "ExpenseCategory": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0
          },
          "nameForeign": {
            "type": "string",
            "nullable": true
          },
          "isShare": {
            "type": "boolean"
          },
          "isDelete": {
            "type": "boolean"
          },
          "isGLSystem": {
            "type": "boolean"
          },
          "systemCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resetTransactionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "taxLife": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "chartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "chartOfAccountIdCredit": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "depreciationChartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "accumulatedDepreciationChartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "depreciableAsset": {
            "type": "boolean",
            "nullable": true
          },
          "expenseList": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExpenseList"
            }
          },
          "companyExpenseCategory": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CompanyExpenseCategory"
            }
          }
        }
      },
      "CompanyExpenseCategory": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "expenseCategoryId": {
            "type": "integer",
            "format": "int64"
          },
          "company": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ]
          },
          "expenseCategory": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpenseCategory"
              }
            ]
          }
        }
      },
      "Currency": {
        "type": "integer",
        "description": "1 = USD\n3 = GBP\n5 = EUR\n7 = JPY\n9 = HKD\n11 = CNY\n13 = THB\n15 = AUD\n33 = BDT\n35 = BHD\n37 = BND\n39 = KHR\n41 = CAD\n43 = DKK\n45 = INR\n47 = IDR\n49 = ILS\n53 = KRW\n55 = LAK\n57 = MOP\n59 = MYR\n61 = MMK\n63 = NPR\n65 = NZD\n67 = NOK\n69 = OMR\n71 = PKR\n73 = PHP\n75 = QAR\n77 = RUB\n79 = SAR\n81 = SEK\n83 = SGD\n85 = LKR\n87 = CHF\n89 = TWD\n91 = AED\n93 = VND\n95 = ZAR\n97 = MXN\n99 = KWD\n101 = CZK\n103 = KES\n105 = EGP\n107 = PLN\n109 = IQD\n111 = JOD\n113 = MVR\n115 = PGK\n117 = HUF",
        "x-enumNames": [
          "USD",
          "GBP",
          "EUR",
          "JPY",
          "HKD",
          "CNY",
          "THB",
          "AUD",
          "BDT",
          "BHD",
          "BND",
          "KHR",
          "CAD",
          "DKK",
          "INR",
          "IDR",
          "ILS",
          "KRW",
          "LAK",
          "MOP",
          "MYR",
          "MMK",
          "NPR",
          "NZD",
          "NOK",
          "OMR",
          "PKR",
          "PHP",
          "QAR",
          "RUB",
          "SAR",
          "SEK",
          "SGD",
          "LKR",
          "CHF",
          "TWD",
          "AED",
          "VND",
          "ZAR",
          "MXN",
          "KWD",
          "CZK",
          "KES",
          "EGP",
          "PLN",
          "IQD",
          "JOD",
          "MVR",
          "PGK",
          "HUF"
        ],
        "enum": [
          1,
          3,
          5,
          7,
          9,
          11,
          13,
          15,
          33,
          35,
          37,
          39,
          41,
          43,
          45,
          47,
          49,
          53,
          55,
          57,
          59,
          61,
          63,
          65,
          67,
          69,
          71,
          73,
          75,
          77,
          79,
          81,
          83,
          85,
          87,
          89,
          91,
          93,
          95,
          97,
          99,
          101,
          103,
          105,
          107,
          109,
          111,
          113,
          115,
          117
        ]
      },
      "BatchTaxFiling": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Document2"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "companyId",
              "claimDate",
              "createdOn",
              "modifiedOn"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "companyId": {
                "type": "integer",
                "format": "int64"
              },
              "status": {
                "$ref": "#/components/schemas/BatchTaxFilingStatus"
              },
              "claimDate": {
                "type": "string",
                "format": "date-time",
                "default": "CURRENT_TIMESTAMP",
                "minLength": 1
              },
              "totalBuyValue": {
                "type": "number",
                "format": "decimal"
              },
              "totalBuyVatValue": {
                "type": "number",
                "format": "decimal"
              },
              "totalSellValue": {
                "type": "number",
                "format": "decimal"
              },
              "totalSellVatValue": {
                "type": "number",
                "format": "decimal"
              },
              "broughtForward": {
                "type": "number",
                "format": "decimal"
              },
              "value": {
                "type": "number",
                "format": "decimal"
              },
              "isDelete": {
                "type": "boolean"
              },
              "createdBy": {
                "type": "integer",
                "format": "int64"
              },
              "modifiedBy": {
                "type": "integer",
                "format": "int64"
              },
              "createdOn": {
                "type": "string",
                "format": "date-time",
                "default": "CURRENT_TIMESTAMP",
                "minLength": 1
              },
              "modifiedOn": {
                "type": "string",
                "format": "date-time",
                "default": "CURRENT_TIMESTAMP",
                "minLength": 1
              },
              "company": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Company"
                  }
                ]
              },
              "createdByUser": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              },
              "modifiedByUser": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              },
              "datePayment": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "charge": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "collected": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "tax": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "remarks": {
                "type": "string",
                "nullable": true
              },
              "paymentWithHeld": {
                "type": "number",
                "format": "decimal"
              },
              "remainingCollected": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "remainingCollectedType": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RemainingCollectedType"
                  }
                ]
              },
              "deductionAmount": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "paymentDeductionType": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DeductionType"
                  }
                ]
              },
              "bankAccountId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "checkNumber": {
                "type": "string",
                "nullable": true
              },
              "checkBankId": {
                "type": "string",
                "nullable": true
              },
              "transferBankId": {
                "type": "string",
                "nullable": true
              },
              "bankAccountNumber": {
                "type": "string",
                "nullable": true
              },
              "checkDatePaid": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "methodPayment": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentMethod"
                  }
                ]
              },
              "no": {
                "type": "integer",
                "format": "int32"
              },
              "pettyCashName": {
                "type": "string",
                "nullable": true
              },
              "pettyCashId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "chequeId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "creditCardId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "otherChannelId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "documentSerial": {
                "type": "string",
                "nullable": true
              },
              "documentId": {
                "type": "string",
                "nullable": true
              },
              "approved": {
                "type": "boolean"
              },
              "publishedOn": {
                "type": "string",
                "format": "date-time"
              },
              "documentDate": {
                "type": "string",
                "format": "date-time"
              },
              "vatRate": {
                "type": "integer",
                "format": "int32"
              },
              "dueDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "internalNotes": {
                "type": "string",
                "nullable": true
              },
              "roundingAdjustment": {
                "type": "number",
                "format": "decimal"
              },
              "gallery": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Gallery"
                  }
                ]
              },
              "galleryId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "contact": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Contact"
                  }
                ]
              },
              "contactId": {
                "type": "integer",
                "format": "int64"
              },
              "documentReferences": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDocumentReference"
                }
              },
              "referencedToMe": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDocumentReference"
                }
              },
              "referencedByMe": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDocumentReference"
                }
              },
              "statusInt": {
                "type": "integer",
                "format": "int32"
              },
              "isInlineDiscount": {
                "type": "boolean"
              },
              "isInlineVat": {
                "type": "boolean"
              },
              "vatValue": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "documentSerialNoPrefix": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "inlineVatValue": {
                "type": "number",
                "format": "decimal"
              },
              "inlineDiscountValue": {
                "type": "number",
                "format": "decimal"
              },
              "published": {
                "type": "boolean"
              },
              "isVatInclusive": {
                "type": "boolean"
              },
              "runningNumberType": {
                "type": "integer",
                "format": "int32"
              },
              "runningModifiedOn": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "exemptAmount": {
                "type": "number",
                "format": "decimal"
              },
              "vatableAmount": {
                "type": "number",
                "format": "decimal"
              },
              "totalAfterDiscount": {
                "type": "number",
                "format": "decimal"
              },
              "subTotal": {
                "type": "number",
                "format": "decimal"
              },
              "isReCalculate": {
                "type": "boolean"
              },
              "partialPaymentMethod": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PartialPaymentMethod"
                  }
                ]
              },
              "vatAmount": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "isMigrate": {
                "type": "boolean"
              },
              "resetTransactionId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "ruleCompileStatus": {
                "default": 1,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RuleCompileStatus"
                  }
                ]
              },
              "chequeCashingDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "projectId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "projectName": {
                "type": "string",
                "nullable": true
              },
              "projectNameAndProjectDeatil": {
                "type": "string",
                "nullable": true
              },
              "reconciled": {
                "type": "boolean"
              },
              "outstanding": {
                "type": "number",
                "format": "decimal"
              },
              "withholding": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "refDocumentStatus": {
                "type": "integer",
                "format": "int32"
              },
              "refDocumentStatusString": {
                "type": "string",
                "nullable": true
              },
              "documentDeductionType": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DeductionType"
                  }
                ]
              }
            }
          }
        ]
      },
      "BatchTaxFilingStatus": {
        "type": "integer",
        "description": "1 = Awaiting\n3 = Refunded",
        "x-enumNames": [
          "Awaiting",
          "Refunded"
        ],
        "enum": [
          1,
          3
        ]
      },
      "SupplierInvoiceStatus": {
        "type": "integer",
        "description": "0 = None\n1 = Awaiting\n3 = WaitingForRefund\n5 = CreatedBatchFilling\n7 = NoRefund",
        "x-enumNames": [
          "None",
          "Awaiting",
          "WaitingForRefund",
          "CreatedBatchFilling",
          "NoRefund"
        ],
        "enum": [
          0,
          1,
          3,
          5,
          7
        ]
      },
      "Payroll": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentCycle": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/PayrollStatus"
          },
          "isDelete": {
            "type": "boolean"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "expenseId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "galleryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "number",
            "format": "decimal"
          },
          "bankId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "addAmount": {
            "type": "number",
            "format": "decimal"
          },
          "deductAmount": {
            "type": "number",
            "format": "decimal"
          },
          "netTotal": {
            "type": "number",
            "format": "decimal"
          },
          "runningNumberType": {
            "type": "integer",
            "format": "int32"
          },
          "datePayment": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "documentDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalPayrollCash": {
            "type": "number",
            "format": "decimal"
          },
          "totalPayrollTransfer": {
            "type": "number",
            "format": "decimal"
          },
          "fee": {
            "type": "number",
            "format": "decimal"
          },
          "paymentRemarks": {
            "type": "string",
            "nullable": true
          },
          "employerAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "employerAccountBranch": {
            "type": "string",
            "nullable": true
          },
          "bankAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "accountType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BankAccountType"
              }
            ]
          },
          "referenceId": {
            "type": "string",
            "nullable": true
          },
          "payrollVersion": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ]
          },
          "createdByUser": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "modifiedByUser": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "payrollDetail": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PayrollDetail"
            }
          },
          "gallery": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gallery"
              }
            ]
          },
          "isMigrate": {
            "type": "boolean"
          },
          "ruleCompileStatus": {
            "$ref": "#/components/schemas/RuleCompileStatus"
          },
          "isPartialPayments": {
            "type": "boolean"
          },
          "paidPeriod": {
            "default": 1,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaidPeriod"
              }
            ]
          },
          "socialSecurityPercent": {
            "type": "number",
            "format": "decimal",
            "default": 5
          },
          "statusInt": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PayrollStatus": {
        "type": "integer",
        "description": "0 = Draft\n1 = Awaiting\n2 = Reset\n3 = Paid\n4 = Partial\n5 = Rejected\n7 = Approved\n11 = PushPayAwaiting\n13 = PushPayProcessed\n15 = PushPayRejected\n17 = PushPayPartial\n19 = PushPayPendingPayments\n50 = KConnectAwaiting\n52 = KConnectProcessed\n54 = KConnectRejected\n56 = KConnectPendingPayments",
        "x-enumNames": [
          "Draft",
          "Awaiting",
          "Reset",
          "Paid",
          "Partial",
          "Rejected",
          "Approved",
          "PushPayAwaiting",
          "PushPayProcessed",
          "PushPayRejected",
          "PushPayPartial",
          "PushPayPendingPayments",
          "KConnectAwaiting",
          "KConnectProcessed",
          "KConnectRejected",
          "KConnectPendingPayments"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          7,
          11,
          13,
          15,
          17,
          19,
          50,
          52,
          54,
          56
        ]
      },
      "SendEmailStatus": {
        "type": "integer",
        "description": "1 = Sent\n3 = NoEmail",
        "x-enumNames": [
          "Sent",
          "NoEmail"
        ],
        "enum": [
          1,
          3
        ]
      },
      "Department": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "code": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 0,
            "nullable": true
          },
          "isDelete": {
            "type": "boolean",
            "default": false
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "company": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Company"
              }
            ]
          },
          "employees": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Employee"
            }
          }
        }
      },
      "StockCard": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "inventoryId": {
            "type": "integer",
            "format": "int64"
          },
          "inventoryType": {
            "$ref": "#/components/schemas/InventoryType"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number",
            "format": "decimal"
          },
          "unitId": {
            "type": "integer",
            "format": "int64"
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal"
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "number",
            "format": "decimal"
          },
          "remaining": {
            "type": "number",
            "format": "decimal"
          },
          "documentId": {
            "type": "integer",
            "format": "int64"
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentTypes"
          },
          "documentSerial": {
            "type": "string",
            "nullable": true
          },
          "allowDelete": {
            "type": "boolean"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "$ref": "#/components/schemas/AdjustInventoryReason"
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "isOverSold": {
            "type": "boolean"
          },
          "rowIndex": {
            "type": "integer",
            "format": "int32"
          },
          "reasonDescription": {
            "type": "string",
            "nullable": true
          },
          "averagePricePerUnit": {
            "type": "number",
            "format": "decimal"
          },
          "remainingAmount": {
            "type": "number",
            "format": "decimal"
          },
          "transactions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IStockCard"
            }
          }
        }
      },
      "ObjectId": {
        "type": "object",
        "description": "Represents an ObjectId (see also BsonObjectId).",
        "additionalProperties": false,
        "properties": {
          "Timestamp": {
            "type": "integer",
            "description": "Gets the timestamp.",
            "format": "int32"
          },
          "Machine": {
            "type": "integer",
            "description": "Gets the machine.",
            "format": "int32",
            "deprecated": true,
            "x-deprecatedMessage": "This property will be removed in a later release."
          },
          "Pid": {
            "type": "integer",
            "description": "Gets the PID.",
            "deprecated": true,
            "x-deprecatedMessage": "This property will be removed in a later release."
          },
          "Increment": {
            "type": "integer",
            "description": "Gets the increment.",
            "format": "int32",
            "deprecated": true,
            "x-deprecatedMessage": "This property will be removed in a later release."
          },
          "CreationTime": {
            "type": "string",
            "description": "Gets the creation time (derived from the timestamp).",
            "format": "date-time"
          }
        }
      },
      "InventoryType": {
        "type": "integer",
        "description": "3 = Initial\n5 = BroughtForward\n7 = In\n11 = TransferIn\n17 = Out\n21 = TransferOut\n25 = CreditNote\n27 = DebitNote\n29 = InternalUse\n31 = Hold\n35 = AdjustIn\n39 = AdjustOut",
        "x-enumNames": [
          "Initial",
          "BroughtForward",
          "In",
          "TransferIn",
          "Out",
          "TransferOut",
          "CreditNote",
          "DebitNote",
          "InternalUse",
          "Hold",
          "AdjustIn",
          "AdjustOut"
        ],
        "enum": [
          3,
          5,
          7,
          11,
          17,
          21,
          25,
          27,
          29,
          31,
          35,
          39
        ]
      },
      "AdjustInventoryReason": {
        "type": "integer",
        "description": "0 = Default\n1 = DisastersFire\n3 = StolenGoods\n5 = StockWrittenOff\n7 = StockTakingResults\n9 = ReturnedStock\n11 = DamagedGoods\n13 = RawMaterialUsed\n15 = FinishedGoodsTransfer\n17 = Other",
        "x-enumNames": [
          "Default",
          "DisastersFire",
          "StolenGoods",
          "StockWrittenOff",
          "StockTakingResults",
          "ReturnedStock",
          "DamagedGoods",
          "RawMaterialUsed",
          "FinishedGoodsTransfer",
          "Other"
        ],
        "enum": [
          0,
          1,
          3,
          5,
          7,
          9,
          11,
          13,
          15,
          17
        ]
      },
      "IStockCard": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "inventoryId": {
            "type": "integer",
            "format": "int64"
          },
          "inventoryType": {
            "$ref": "#/components/schemas/InventoryType"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number",
            "format": "decimal"
          },
          "unitId": {
            "type": "integer",
            "format": "int64"
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal"
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "number",
            "format": "decimal"
          },
          "remaining": {
            "type": "number",
            "format": "decimal"
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentTypes"
          },
          "documentSerial": {
            "type": "string",
            "nullable": true
          },
          "allowDelete": {
            "type": "boolean"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "$ref": "#/components/schemas/AdjustInventoryReason"
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "isOverSold": {
            "type": "boolean"
          },
          "rowIndex": {
            "type": "integer",
            "format": "int32"
          },
          "reasonDescription": {
            "type": "string",
            "nullable": true
          },
          "averagePricePerUnit": {
            "type": "number",
            "format": "decimal"
          },
          "remainingAmount": {
            "type": "number",
            "format": "decimal"
          },
          "transactions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IStockCard"
            }
          }
        }
      },
      "APIResponseOfISimpleListResultOfIProductResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ISimpleListResultOfIProductResult"
              }
            ]
          }
        }
      },
      "ISimpleListResultOfIProductResult": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "list": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IProductResult"
            }
          }
        }
      },
      "IProductResult": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/ProductTypes"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "type": "string",
            "nullable": true
          },
          "buyVatType": {
            "$ref": "#/components/schemas/VatTypes"
          },
          "buyPrice": {
            "type": "number",
            "format": "decimal"
          },
          "buyPriceWithVat": {
            "type": "number",
            "format": "decimal"
          },
          "buyDescription": {
            "type": "string",
            "nullable": true
          },
          "buyChartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "buyChartOfAccountCode": {
            "type": "string",
            "nullable": true
          },
          "buyChartOfAccountNameLocal": {
            "type": "string",
            "nullable": true
          },
          "buyChartOfAccountNameForeign": {
            "type": "string",
            "nullable": true
          },
          "sellVatType": {
            "$ref": "#/components/schemas/VatTypes"
          },
          "sellPrice": {
            "type": "number",
            "format": "decimal"
          },
          "sellPriceWithVat": {
            "type": "number",
            "format": "decimal"
          },
          "sellDescription": {
            "type": "string",
            "nullable": true
          },
          "sellChartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sellChartOfAccountCode": {
            "type": "string",
            "nullable": true
          },
          "sellChartOfAccountNameLocal": {
            "type": "string",
            "nullable": true
          },
          "sellChartOfAccountNameForeign": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "productNonInventoryType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProductNonInventoryType"
              }
            ]
          },
          "broughtForwardOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "inventoryPublishedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "inventoryQuantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "inventoryPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "inventoryTotal": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "inventoryRemark": {
            "type": "string",
            "nullable": true
          },
          "averageBuyPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "averageSellPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "remainingStock": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalValueInHand": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "stockCard": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IStockCard"
            }
          }
        }
      },
      "VatTypes": {
        "type": "integer",
        "description": "1 = Include\n3 = Exclude\n5 = Zero\n7 = None",
        "x-enumNames": [
          "Include",
          "Exclude",
          "Zero",
          "None"
        ],
        "enum": [
          1,
          3,
          5,
          7
        ]
      },
      "ProductResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/ProductTypes"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ImageResult"
              }
            ]
          },
          "buyVatType": {
            "$ref": "#/components/schemas/VatTypes"
          },
          "buyPrice": {
            "type": "number",
            "format": "decimal"
          },
          "buyPriceWithVat": {
            "type": "number",
            "format": "decimal"
          },
          "buyDescription": {
            "type": "string",
            "nullable": true
          },
          "buyChartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "buyChartOfAccountCode": {
            "type": "string",
            "nullable": true
          },
          "buyChartOfAccountNameLocal": {
            "type": "string",
            "nullable": true
          },
          "buyChartOfAccountNameForeign": {
            "type": "string",
            "nullable": true
          },
          "sellVatType": {
            "$ref": "#/components/schemas/VatTypes"
          },
          "sellPrice": {
            "type": "number",
            "format": "decimal"
          },
          "sellPriceWithVat": {
            "type": "number",
            "format": "decimal"
          },
          "sellDescription": {
            "type": "string",
            "nullable": true
          },
          "sellChartOfAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sellChartOfAccountCode": {
            "type": "string",
            "nullable": true
          },
          "sellChartOfAccountNameLocal": {
            "type": "string",
            "nullable": true
          },
          "sellChartOfAccountNameForeign": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "unitId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "productNonInventoryType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProductNonInventoryType"
              }
            ]
          },
          "broughtForwardOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "inventoryPublishedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "inventoryQuantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "inventoryPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "inventoryTotal": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "inventoryRemark": {
            "type": "string",
            "nullable": true
          },
          "averageBuyPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "averageSellPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "remainingStock": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalValueInHand": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "stockCard": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IStockCard"
            }
          }
        }
      },
      "ImageResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "previewURL": {
            "type": "string",
            "nullable": true
          },
          "thumbURL": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "APIResponseOfBoolean": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "description": "Specify the authorization token.",
        "scheme": "bearer",
        "bearerFormat": "Reference"
      }
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
